{"version":3,"sources":["Assets/pngwing.com.png","App/Utils/Urls.js","App/Utils/API.js","App/Constants.js","App/Utils/ErrorMessages.js","App/Utils/APICommunication.js","Forms/BackupRequest/BackupRequestDataProvider.jsx","App/Utils/CommonFunctions.js","Forms/BackupRequest/Components/BackupEditableCell.jsx","App/Utils/ColumnMetadata.js","App/Utils/TablePopConfirm.jsx","Forms/BackupRequest/Components/BackupRequestTable.jsx","Forms/BackupRequest/Components/RequirementType.jsx","UI/Content/RequestorDetails.js","UI/Content/AdditionalInformation.jsx","Forms/BackupRequest/BackupRequestDataSetter.jsx","UI/Page/RequestSuccess.js","UI/Content/SubmitButtons.jsx","UI/Content/ApprovalHierarchy.jsx","UI/Content/FormWrapper.jsx","Forms/BackupRequest/BackupRequest.js","UI/Content/Remarks.jsx","Forms/RestorationRequest/RestorationDataProvider.jsx","Forms/RestorationRequest/Components/RestorationEditableCell.jsx","Forms/RestorationRequest/Components/RestorationRequestTable.jsx","Forms/RestorationRequest/RestorationRequestDataSetter.jsx","Forms/RestorationRequest/RestorationRequest.js","Forms/NewAssetRequest/AssetRequestDataProvider.jsx","Forms/NewAssetRequest/Components/AssetRequestEditableCell.jsx","Forms/NewAssetRequest/Components/AssetRequestTable.jsx","Forms/NewAssetRequest/AssetRequestDataSetter.jsx","Forms/NewAssetRequest/AssetRequest.js","Home/Home.jsx","Forms/FtpIdRequest/FtpIdDataProvider.jsx","Forms/FtpIdRequest/Components/FtpIdEditableCell.jsx","Forms/FtpIdRequest/Components/FtpIDRequestTable.jsx","Forms/FtpIdRequest/FtpIdDatasetter.jsx","Forms/FtpIdRequest/FtpIDRequest.jsx","Forms/AssetReturnRequest/AssetReturnDataProvider.jsx","Forms/AssetReturnRequest/Components/AssetReturnEditableCell.jsx","Forms/AssetReturnRequest/Components/AssetReturnRequestTable.jsx","Forms/AssetReturnRequest/AssetReturnDataSetter.jsx","Forms/AssetReturnRequest/AssetReturnRequest.jsx","Forms/RiskAcceptanceForm/Components/RiskAcceptanceEditableCell.jsx","Forms/RiskAcceptanceForm/Components/RiskAcceptanceTable.jsx","Forms/RiskAcceptanceForm/Components/RiskType.jsx","Forms/RiskAcceptanceForm/RiskAcceptanceDatasetter.jsx","Forms/RiskAcceptanceForm/RiskAcceptanceDataProvider.jsx","Forms/RiskAcceptanceForm/RiskAcceptanceForm.jsx","Forms/NewCommonMailboxRequest/CommonMailboxDataProvider.jsx","Forms/NewCommonMailboxRequest/Components/DistributionGroup.jsx","Forms/NewCommonMailboxRequest/Components/SharedMailbox.jsx","Forms/NewCommonMailboxRequest/Components/SharedFolder.jsx","Forms/NewCommonMailboxRequest/Components/CommonLoginID.jsx","Forms/NewCommonMailboxRequest/CommonMailboxDataSetter.jsx","Forms/NewCommonMailboxRequest/NewCommonMailboxRequest.jsx","Forms/NewLoginIdCreation/LoginIdCreationDataprovider.jsx","Forms/NewLoginIdCreation/Components/UserDetails.jsx","Forms/NewLoginIdCreation/Components/ContactDetails.jsx","Forms/NewLoginIdCreation/Components/EmergencyDetails.jsx","Forms/NewLoginIdCreation/LoginIdCreationDatasetter.jsx","Forms/NewLoginIdCreation/Components/Attachments.jsx","Forms/NewLoginIdCreation/NewLoginIDCreation.jsx","MailApprove/MailApproveDataprovider.jsx","MailApprove/MailApproveComments.jsx","MailApprove/MailApprove.jsx","UI/Page/NotFound.jsx","UI/Routing/Router.js","Auth/LoginDataprovider.jsx","Auth/Login.jsx","UI/Navbar/Sider.jsx","UI/Header/Header.jsx","UI/Footer/Footer.jsx","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BASE_URL","GET_DEPT_LOC_LIST","APPROVAL_API","OUTLOOK_ID","MANAGER_SEARCH","API","axios","create","baseURL","concat","responseType","NEW_LOGIN_FORM_ID","BACKUP_FORM_ID","RESTORATION_FORM_ID","FTP_FORM_ID","NEW_ASSET_FORM_ID","COMMON_MAILBOX_FORM_ID","RETURN_ASSET_FORM_ID","RISK_ACCEPTANCE_FORM_ID","SUCCESS_STATUS_CODE","STATUS_CODE_400","STATUS_CODE_401","STATUS_CODE_403","STATUS_CODE_404","STATUS_CODE_500","STATUS_CODE_503","DROPDOWN","MESSAGES","approved","rejected","success","successDetail","enterdata","logout","FORM_HEADINGS","PATTERNS","EMAIL","PHONE","IM","LOGIN_NAME","SERVER_IP","SIDER","key","link","name","SIDER_MENU","icon","RISK_ACCEPTANCE_TEXT","react_default","a","createElement","errorMessages","error","console","log","response","undefined","message","status","parseInt","APICommunication","_callee","address","regenerator_default","wrap","_context","prev","next","get","then","catch","abrupt","sent","stop","_callee2","data","_context2","post","_callee3","_context3","_callee4","_context4","headers","Content-Type","_callee5","_context5","BackupRequestDataProvider","_this","Object","classCallCheck","this","_super","call","getAPI","postAPI","result","loading","approverAPI","_x","_approverAPI","apply","arguments","value","defaults","common","localStorage","getItem","res","hierarchy","deptLocListAPI","_deptLocListAPI","Option","Select","backupList","serverTypeList","frequencyList","backupDriveList","EditableCell","_React$Component","inherits","createSuper","props","state","editing","getInput","dataIndex","es_select","ref","node","input","onPressEnter","save","onBlur","placeholder","map","person","id","label","required","pattern","serverType","input_number","min","type","maxLength","toggleEdit","setState","focus","e","_this$props","record","handleSave","form","validateFields","values","currentTarget","objectSpread2","renderCell","_this$props2","es_form","Item","style","margin","getFieldDecorator","rules","initialValue","createClass","_componentDidMount","asyncToGenerator","mark","fetchDropdownList","backup_of_list","server_type_list","frequency_list","backup_drive","_this$props3","editable","children","title","inputType","index","restProps","objectWithoutProperties","_excluded","EditableContext","Consumer","React","Component","RETURN_ASSET_FORM_COLUMN","align","width","BACKUP_FORM_COLUMN","dataType","FTPID_FORM_COLUMN","ASSET_FORM_COLUMN","RESTORATION_FORM_COLUMN","RISKACCEPTANCE_FORM_COLUMN","TablePopConfirm","popconfirm","onConfirm","handleDelete","href","theme","color","backup","createContext","EditableFormRow","Form","_ref","BackupRequestTable_excluded","Provider","EditableTable","dataSource","toConsumableArray","filter","item","handleAdd","_this$state","count","newData","row","findIndex","splice","Array","from","getTable","backupof","columns","render","text","length","TablePopConfirm_TablePopConfirm","_this2","components","body","cell","col","onCell","table","rowClassName","bordered","size","scroll","x","es_button","onClick","marginTop","float","RequirementType","requirementType","backupType","formChange","bind","assertThisInitialized","getDataFromRequirementType","event","target","defineProperty","className","es_radio","Group","onChange","tempDate","Date","RequestorDetails","userDetails","requestdate","getDate","getMonth","getFullYear","requestorname","sap","vertical","department","company","designation","email","mobilenum","extension","location","TextArea","Input","AdditionalInfo","purpose","im_no","getDataFromAdditionalInfo","textareaLabel","rows","requireIM","dept","AdditionalInformation_Option","locationList","backupRequestDataSetter","_x2","_x3","_x4","_backupRequestDataSetter","dataFromRequirementType","datafromAdditionalInfo","approverData","allRequest","RequestSuccess","window","subTitle","extra","react_router_dom","to","SubmitButtons","ApprovalHierarchy","approver","apvr_name","FormWrapper","spin","spinning","tip","onSubmit","formSubmit","formTitle","display","ApprovalHierarchy_ApprovalHierarchy","SubmitButtons_SubmitButtons","deptLocOBj","formId","Backup","hod","toString","preventDefault","RequestorDetails_RequestorDetails","RequirementType_RequirementType","BackupRequestTable_EditableTable","AdditionalInformation_AdditionalInfo","FormWrapper_FormWrapper","RequestSuccess_RequestSuccess","Remarks","remarks","getDataFromRemarks","Remarks_TextArea","RestorationDataProvider","_len","args","_key","typedropdown","RestorationEditableCell_Option","format","height","RestorationEditableCell_excluded","RestorationRequestTable_EditableContext","RestorationRequestTable_excluded","EditableTable1","pagination","overflowX","restorationRequestDataSetter","_restorationRequestDataSetter","datafromRemarks","Restoration","RestorationRequestTable_EditableTable1","Remarks_Remarks","assetRequestDataProvider","Employee_list","required_type_list","asset_type_list","assetType","requiredType","apiManager","requesttypedrop","requestTypeApi","AssetRequestEditableCell_Option","requiredTypeApi","disabled","istemp","showSearch","request_type","onSearch","handleSearch","to_date","from_date","transfer_to","remark","AssetRequestEditableCell_excluded","AssetRequestTable_EditableContext","tableData","AssetRequestTable_excluded","assetRequestDataSetter","_assetRequestDataSetter","asset_data","form_id","AssetRequest","request_type_list","tableDataVal","i","AssetRequestTable_EditableTable","Home","addSeatCallback","addCb","number","newTooltip","addSeatCallbackContinuousCase","_ref3","params","removeCb","removeSeatCallback","_ref5","includes","total_requests","pending","textAlign","src","Stage","marginLeft","marginRight","index_es","isSelected","tooltip","isReserved","maxReservableSeats","alpha","visible","selectedByDefault","tooltipProps","multiline","justifyContent","FtpIdDataProvider","typeDropdown","reqTypeDropdown","FtpIdEditableCell_Option","req_type","maxTagCount","validity_from","validity_to","ftp_uid","folder_name","FtpIdEditableCell_excluded","FtpIDRequestTable_EditableContext","ftpid","FtpIDRequestTable_excluded","IDrequesttable","FtpIdDataSetter","_FtpIdDataSetter","ftpiddata","search","nameKey","myArray","setBackUp","temp","IdRequest","type_list","push","FtpIDRequestTable_IDrequesttable","AssetReturnDataProvider","AssetReturnEditableCell_Option","typeDropdownList","AssetReturnEditableCell_excluded","AssetReturnRequestTable_EditableContext","AssetReturnRequestTable_excluded","AssetReturnTable","AssetReturnDataSetter","_AssetReturnDataSetter","AssetReturnRequest","AssetReturnRequestTable_AssetReturnTable","exceptionDrop","RiskAcceptanceEditableCell_Option","RiskAcceptanceEditableCell_excluded","RiskAcceptanceTable_EditableContext","risk","RiskAcceptanceTable_excluded","RiskAcceptanceTable","exception","RiskType","assetNumber","riskType","getDataFromRiskType","riskSelect","RiskType_Option","riskAcceptanceDataSetter","_x5","_riskAcceptanceDataSetter","dataFromRiskType","networkForm","riskAcceptanceDataProvider","requestType","RiskAcceptance","exceptionType","loading1","apiSelect","exception_type_list","risk_type_list","defaultValue","RiskType_RiskType","RiskAcceptanceTable_RiskAcceptanceTable","CommonMailboxDataProvider","DistributionGroup","group","grpDropdown","groupName","groupEmail","groupMembers","groupOwner","requireDistribution","getDataFromDistributionGroup","DistributionGroup_Option","mode","minWidth","SharedMailbox","mailboxName","mailboxEmail","mailboxOwner","shared_mailbox","getDataFromSharedMailbox","SharedMailbox_Option","SharedFolder","folderName","folderOwner","rightsGiven","sharedFolder","getDataFromSharedFolder","SharedFolder_Option","CommonLoginID","loginName","loginEmail","loginOwner","requiredLogin","getDataFromCommonLoginID","CommonLoginID_Option","commonMailboxDataSetter","_x6","_commonMailboxDataSetter","dataFromDistributionGroup","dataFromSharedMailbox","dataFromSharedFolder","dataFromCommonLoginID","submit","sharedMailbox","CommonMailboxRequest","appover_name","appover_title","approver_outlook_id","approver_level","DistributionGroup_DistributionGroup","SharedMailbox_SharedMailbox","SharedFolder_SharedFolder","CommonLoginID_CommonLoginID","loginIdCreationDataprovider","postAPIFileUpload","UserDetails","formHide","document","getElementById","formShow","b","employeeType","sapCode","isLoginOrMailbox","sbu","isTempAccessId","fromDt","toDt","isAccessId","firstName","lastName","essarCompany","reportingManagerName","reportingManagerMail","getDataFromUserDetails","apiEmpType","UserDetails_Option","apiSbu","date_picker","date","dateString","apiDepartment","apiCompany","mail","ContactDetails","apiCity","apiCountry","mobile","dtOfJoining","phone","voipLoc","bloodGp","city","country","zipcode","getDataFromContactDetails","ContactDetails_Option","max","EmergencyContactDetails","emergencyContactName","relationship","emergencyContactNo","getDataFromEMContactDetails","formData","FormData","loginIdCreationDataSetter","_loginIdCreationDataSetter","contactDetails","emergencyContactDetails","comments","append","set","uploadfile","Attachments","photoUpload","file","onSuccess","onChangeUpload","info","beforeUpload","isJpgOrPng","isLt2M","getDataFromAttachments","upload","multiple","accept","action","dataFromRemarks","NewLoginIDCreation","apiApprover1","apiDesignation","employee_types","departments","companies","designations","apiState","states","countries","submitApi","UserDetails_UserDetails","ContactDetails_ContactDetails","EmergencyDetails_EmergencyContactDetails","Attachments_Attachments","MailApproveDataProvider","MailApproveComments","comment","mailapprove","URLSearchParams","approveThroughMail","MailApprove","NotFound","Router","react_router","exact","path","component","default","LoginDataProvider","postAxios","Login","handleSubmit","err","sessionStorage","setItem","setAuth","home","background","prefix","htmlType","WrappedLogin","Sider","Layout","SubMenu","Menu","Header","FormHeader","padding","position","zIndex","fontSize","fontWeight","user","Logout","verticalAlign","Footer","FormFooter","flexShrink","rel","Content","App","onSiderCollapse","check","isAuthenticated","auth","clear","layout","backgroundColor","Header_FormHeader","minHeight","overflow","Router_Router","Footer_FormFooter","src_Auth_Login","Boolean","hostname","match","ReactDOM","src_App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f169d985.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pngwing.com.098ed6f5.png\";","export const LOGIN = \"user/login/\";\r\n\r\nexport const RESTORATION = \"restoration_request/restoration_request_dropdown/\";\r\nexport const ASSETRETURN = \"return_asset_request/asset_dropdown/\";\r\nexport const FTPID = \"ftp_id_request/ftp_id_drop_downs/\";\r\nexport const ASSETREQUEST = \"asset_request/request_type_dropdown/\";\r\nexport const ASSET_TABLE_REQUIRED_TYPE =\r\n  \"asset_request/required_type_dropdown?id=\";\r\nexport const ASSET_TABLE_ASSET_TYPE = \"asset_request/asset_type_dropdown?id=\";\r\nexport const BASE_URL = \"http://172.24.102.121:8080/forms/\";\r\n// export const BASE_URL =\"http://127.0.0.1:8000/\";\r\nexport const BASE_URL_IMG = \"http://172.24.102.121:8080/forms/\";\r\n// export const BASE_URL_IMG =\"http://127.0.0.1:8000/\";\r\n\r\n//***********************Masters*************************************** */\r\nexport const VIEW_REQUEST = \"master/view_request?req_no=\";\r\nexport const VIEW_PENDING_REQUEST = \"master/pending_requests?outlook_id=\";\r\nexport const VIEW_PENDING_APPROVAL = \"master/pending_approvals?outlook_id=\";\r\nexport const APPROVAL_HISTORY = \"master/approval_history?outlook_id=\";\r\nexport const GET_DEPT_LOC_LIST = \"master/drop_downs/\";\r\nexport const APPROVAL_API = \"master/approval_hierarchy?form_type=\";\r\nexport const APPROVE_REJECT = \"master/approval_status/\";\r\nexport const APPROVAL_MAIL = \"master/approval_status_mail/\";\r\n\r\nexport const VIEW_PENDING_CLEARANCE =\r\n  \"resignation_request_form/_pending_apvl_view?outlook_id=\";\r\n\r\nexport const SUBMIT_BACKUP_DETAILS = \"backup_request/submit_backup_details/\";\r\nexport const BACKUP_REQUEST_DROPDOWN =\r\n  \"backup_request/backup_request_dropdown/\";\r\n\r\nexport const COMMON_MAILBOX_GROUP_DROPDOWN =\r\n  \"common_mailbox_request/common_mail_box_dropdown/\";\r\nexport const COMMON_MAILBOX_SUBMIT =\r\n  \"common_mailbox_request/submit_common_mail_request/\";\r\nexport const COMMON_MAILBOX =\r\n  \"common_mailbox_request/common_mail_box_dropdown/\";\r\n\r\nexport const OUTLOOK_ID = \"&outlook_id=\";\r\nexport const RISK_ACCEPTANCE = \"risk_acceptance_request/dropdown/?type=\";\r\n\r\nexport const NEW_ASSET_SUBMIT = \"asset_request/submit_asset_request/\";\r\nexport const RESTORATION_SUBMIT =\r\n  \"restoration_request/submit_restoration_request/\";\r\nexport const RETURN_ASSET_SUBMIT =\r\n  \"return_asset_request/submit_return_asset_request\";\r\nexport const FTP_SUBMIT = \"ftp_id_request/submit_ftp_id_request/\";\r\nexport const RISK_ACCEPTANCE_SUBMIT =\r\n  \"risk_acceptance_request/submit_risk_acceptance/\";\r\nexport const LOGIN_ID_REQUEST_DROPDOWN =\r\n  \"login_id_request/login_id_request_drop_downs\";\r\nexport const LOGIN_ID_REQUEST_SUBMIT =\r\n  \"login_id_request/submit_login_id_request/\";\r\nexport const REPORT = \"report/submit_report/\";\r\nexport const MANAGER_SEARCH = \"login_id_request/get_employee_list/?query=\";\r\nexport const RESIGNATION_SUBMIT =\r\n  \"resignation_request_form/academy_resignation_submit\";\r\nexport const RESIGNATION_VIEW =\r\n  \"resignation_request_form/_request_view?req_no=\";\r\nexport const RESIGNATION_GIVE_CLEARANCE =\r\n  \"resignation_request_form/give_clearance\";\r\nexport const RESIGNATION_HOSTEL_CLEARANCE =\r\n  \"resignation_request_form/submit_hostel_clearance\";\r\n\r\nexport const BACKUP_REQUEST_PATH = \"/backup_request\";\r\nexport const RESTORATION_REQUEST_PATH = \"/restoration_request\";\r\nexport const ASSET_REQUEST_PATH = \"/new_asset_request\";\r\nexport const FTPID_REQUEST_PATH = \"/id_request\";\r\nexport const ASSET_RETURN_REQUEST_PATH = \"/asset_return_request\";\r\nexport const RISK_ACCEPTANCE_PATH = \"/risk_acceptance_form\";\r\nexport const COMMONMAILBOX_REQUEST_PATH = \"/common_mailbox_request\";\r\nexport const LOGINID_CREATION_PATH = \"/new_login_id\";\r\nexport const CLEARANCE_REQUEST_PATH = \"/clearance_form\";\r\nexport const PENDING_REQUEST_PATH = \"/pending_requests\";\r\nexport const PENDING_APPROVAL_PATH = \"/pending_approvals\";\r\nexport const REPORT_PATH = \"/Reports\";\r\nexport const PENDING_CLEARANCES_PATH = \"/pending_clearance_approvals\";\r\nexport const APPROVAL_HISTORY_PATH = \"/approval_history\";\r\nexport const BACKUP_APPROVAL_PATH = \"/approval_backup/:id/:from\";\r\nexport const RESTORATION_APPROVAL_PATH = \"/approval_restoration/:id/:from\";\r\nexport const ASSET_APPROVAL_PATH = \"/approval_asset/:id/:from\";\r\nexport const FTP_ID_APPROVAL_PATH = \"/approval_ftp_id/:id/:from\";\r\nexport const COMMONMAILBOX_APPROVAL_PATH = \"/approval_common_mailbox/:id/:from\";\r\nexport const ASSET_RETURN_APPROVAL_PATH = \"/approval_asset_return/:id/:from\";\r\nexport const NEW_LOGIN_ID_APPROVAL_PATH = \"/approval_new_login_id/:id/:from\";\r\nexport const RISK_ACCEPTANCE_APPROVAL_PATH =\r\n  \"/approval_risk_acceptance/:id/:from\";\r\nexport const CLEARANCE_APPROVAL_PATH = \"/approval_clearance_form/:id/:from\";\r\nexport const APPROVE_THROUGH_MAIL_COMMENTS_PATH =\r\n  \"/approve_through_mail_comments\";\r\nexport const APPROVE_THROUGH_MAIL_PATH = \"/approve_through_mail\";\r\nexport const CLEARANCE_VIEW_PATH = \"/view_clearance_form/:id/:from\";\r\n\r\nexport const UNTANGLE = \"https://untanglestrategy.com\";\r\n","// imports Axios and exports a new configured instance of it.\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"./Urls\";\r\n export const API = axios.create({\r\n  baseURL: `${BASE_URL}`,\r\n  responseType: \"json\",\r\n//   headers:{Authorization:\"Token \"+localStorage.getItem(\"token\")}\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  BACKUP_REQUEST_PATH,\r\n  RESTORATION_REQUEST_PATH,\r\n  FTPID_REQUEST_PATH,\r\n  LOGINID_CREATION_PATH,\r\n  ASSET_REQUEST_PATH,\r\n  COMMONMAILBOX_REQUEST_PATH,\r\n  ASSET_RETURN_REQUEST_PATH,\r\n  RISK_ACCEPTANCE_PATH,\r\n  APPROVAL_HISTORY_PATH,\r\n  PENDING_APPROVAL_PATH,\r\n  PENDING_REQUEST_PATH,\r\n  REPORT_PATH\r\n} from \"./Utils/Urls\";\r\n\r\nexport const APP_TITLE = \"Seat Booking Manager\";\r\n// Form type id's\r\nexport const NEW_LOGIN_FORM_ID = \"1\";\r\nexport const BACKUP_FORM_ID = \"2\";\r\nexport const RESTORATION_FORM_ID = \"3\";\r\nexport const FTP_FORM_ID = \"4\";\r\nexport const NEW_ASSET_FORM_ID = \"5\";\r\nexport const COMMON_MAILBOX_FORM_ID = \"6\";\r\nexport const RETURN_ASSET_FORM_ID = \"7\";\r\nexport const RISK_ACCEPTANCE_FORM_ID = \"8\";\r\n\r\n//status\r\nexport const PENDING = \"0\";\r\nexport const APPROVED = \"1\";\r\nexport const HIERARCHY_STATUS_REJECTED = \"-1\";\r\nexport const SUCCESS_STATUS_CODE = \"201\";\r\nexport const STATUS_CODE_400 = \"400\";\r\nexport const STATUS_CODE_401 = \"401\";\r\nexport const STATUS_CODE_403 = \"403\";\r\nexport const STATUS_CODE_404 = \"404\";\r\nexport const STATUS_CODE_500 = \"500\";\r\nexport const STATUS_CODE_503 = \"503\";\r\n\r\n//messages\r\nexport const ERROR = \"Something went wrong\";\r\nexport const DROPDOWN = {\r\n  search: \"Type to  search\"\r\n};\r\n\r\nexport const MESSAGES = {\r\n  approved: \"Approved\",\r\n  rejected: \"Rejected\",\r\n  success: \"Successfully Placed Request !\",\r\n  successDetail:\r\n    \"Your request has been sent for Approval, please go to homepage.\",\r\n  enterdata: \"Enter data in all fields\",\r\n  logout: \"Logout Successful\"\r\n};\r\nexport const FORM_HEADINGS = {\r\n  NEW_LOGIN_FORM: \"Login ID Creation Request\",\r\n  BACKUP_FORM: \"Backup Request\",\r\n  RESTORATION_FORM: \"Backup Restoration Request\",\r\n  FTP_FORM: \"New FTP ID Request\",\r\n  NEW_ASSET_FORM: \"New/Upgrade/Transfer/Replace Asset Request\",\r\n  COMMON_MAILBOX_FORM: \"Common mailbox/Shared folder/Distribution group/Security group Request\",\r\n  RETURN_ASSET_FORM: \"Return My Asset Request\",\r\n  RISK_ACCEPTANCE_FORM: \"Risk Acceptance Request\"\r\n}\r\nexport const FORMS = [\r\n  {\r\n    value: \"\",\r\n    name: \"---select---\"\r\n  },\r\n  {\r\n    value: \"1\",\r\n    name: \"Login ID Creation\"\r\n  },\r\n  {\r\n    value: \"2\",\r\n    name: \"Backup Request\"\r\n  },\r\n  {\r\n    value: \"3\",\r\n    name: \"Backup Restoration Request\"\r\n  },\r\n  {\r\n    value: \"4\",\r\n    name: \"FTP ID Request\"\r\n  },\r\n  {\r\n    value: \"5\",\r\n    name: \"New Asset Request\"\r\n  },\r\n  {\r\n    value: \"6\",\r\n    name: \"New Common Mailbox Request\"\r\n  },\r\n  {\r\n    value: \"7\",\r\n    name: \"Return Asset Request\"\r\n  },\r\n  {\r\n    value: \"8\",\r\n    name: \"Risk Acceptance Request\"\r\n  },\r\n  {\r\n    value: \"10\",\r\n    name: \"Resignation Clearance Request\"\r\n  }\r\n];\r\n// eslint-disable-next-line no-useless-escape\r\nexport const IM_PLACEHOLDER = \"IMxxxxxx\";\r\nexport const COMMENT_PLACEHOLDER = \"Enter Comments Here\";\r\nexport const PHONE_MAXLENGTH = 10;\r\n\r\nexport const PATTERNS = {\r\n  EMAIL: \"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$\",\r\n  PHONE: \"[0-9]{10}\",\r\n  IM: \"[IM]+[0-9]{3,10}\",\r\n  LOGIN_NAME: \"[A-Za-z0-9]{3,15}\",\r\n  SERVER_IP: \"^([0-9]{1,3}.){3}[0-9]{1,3}$\"\r\n};\r\n\r\nexport const STATUS = [\r\n  {\r\n    value: \"\",\r\n    name: \"---select---\"\r\n  },\r\n  {\r\n    value: \"1\",\r\n    name: \"Approved\"\r\n  },\r\n  {\r\n    value: \"0\",\r\n    name: \"Pending\"\r\n  },\r\n  {\r\n    value: \"-1\",\r\n    name: \"Rejected\"\r\n  }\r\n];\r\n\r\nexport const SIDER = [\r\n  {\r\n    key: \"2\",\r\n    link: BACKUP_REQUEST_PATH,\r\n    name: \"Backup request form\"\r\n  },\r\n  {\r\n    key: \"3\",\r\n    link: RESTORATION_REQUEST_PATH,\r\n    name: \"Restoration request form\"\r\n  },\r\n  {\r\n    key: \"4\",\r\n    link: FTPID_REQUEST_PATH,\r\n    name: \"New FTP ID creation form\"\r\n  },\r\n  {\r\n    key: \"5\",\r\n    link: LOGINID_CREATION_PATH,\r\n    name: \"Login ID creation form\"\r\n  },\r\n  {\r\n    key: \"6\",\r\n    link: ASSET_REQUEST_PATH,\r\n    name: \"New/Upgrade/Transfer/Replace Asset request form\"\r\n  },\r\n  {\r\n    key: \"7\",\r\n    link: COMMONMAILBOX_REQUEST_PATH,\r\n    name:\r\n      \"New/ Common mail box/ Login/ Shared folder/ Distributiongroup/ Security group request form\"\r\n  },\r\n  {\r\n    key: \"8\",\r\n    link: ASSET_RETURN_REQUEST_PATH,\r\n    name: \"Return My Asset request form\"\r\n  },\r\n  {\r\n    key: \"9\",\r\n    link: RISK_ACCEPTANCE_PATH,\r\n    name: \"Risk acceptance form\"\r\n  }\r\n];\r\nexport const SIDER_MENU = [\r\n  {\r\n    key: \"11\",\r\n    icon: \"bar-chart\",\r\n    link: REPORT_PATH,\r\n    name: \"Reports\"\r\n  },\r\n  {\r\n    key: \"12\",\r\n    icon: \"project\",\r\n    link: PENDING_REQUEST_PATH,\r\n    name: \"My requests\"\r\n  },\r\n  {\r\n    key: \"13\",\r\n    icon: \"project\",\r\n    link: PENDING_APPROVAL_PATH,\r\n    name: \"Pending approvals\"\r\n  },\r\n  {\r\n    key: \"14\",\r\n    icon: \"history\",\r\n    link: APPROVAL_HISTORY_PATH,\r\n    name: \"Approval history\"\r\n  }\r\n];\r\nexport const LOGIN_ID_APPROVAL_STATE = {\r\n  request: [],\r\n  details: [],\r\n  hierarchy: [],\r\n  empname: \"\",\r\n  emptype: \"\",\r\n  sapcode: \"\",\r\n  loginrequired: \"\",\r\n  fromdate: \"\",\r\n  accessidtemporary: \"\",\r\n  todate: \"\",\r\n  accessidrequired: \"\",\r\n  sbu: \"\",\r\n  department: \"\",\r\n  company: \"\",\r\n  managername: \"\",\r\n  designation: \"\",\r\n  manageremail: \"\",\r\n  mobilenum: \"\",\r\n  dateofjoining: \"\",\r\n  alternatenum: \"\",\r\n  voip: \"\",\r\n  group: \"\",\r\n  street: \"\",\r\n  city: \"\",\r\n  state: \"\",\r\n  country: \"\",\r\n  zip: \"\",\r\n  emname: \"\",\r\n  relationship: \"\",\r\n  emcontact: \"\",\r\n  comments: \"\",\r\n  approver1: \"\",\r\n  photo: \"\",\r\n  status: \"\",\r\n  comment: \"\",\r\n  outlookId: \"\",\r\n  loading: true\r\n};\r\n\r\nexport const RISK_ACCEPTANCE_TEXT = (\r\n  <div>\r\n    Note:-\r\n  <br />\r\n    <b>1) Financial Exposure:</b>\r\n    <br />\r\n    User can disclose confidential data to unauthorised person that would\r\n    directly or indirectly impact on Essar finance\r\n  <br />\r\n    <b>2) Legal/Compliance Liability:</b>\r\n    <br />\r\n    Disclosure of data which will directly effect on how the organization\r\n    complies with statutory obligations.\r\n  <br />\r\n    Like user can install pirated software on Essar asset. User can send\r\n    client's confidential data to unauthorised person.\r\n  <br />\r\n    <b>3)Reputation Loss:</b>\r\n    <br />\r\n    Certain information data could be put to malicious use by\r\n    journalists,activists,alienated customers or employees.\r\n  <br />\r\n    The intent in such cases could be to hurt the confidentiality,integrity\r\n    and availability of data that build brand value.\r\n  <br />\r\n    <b>4)Value to Competition:</b>\r\n    <br />\r\n    Loss of certain data to a competitor could put the organization to a\r\n    competitive disadvantage over a period of time.\r\n  <br />\r\n    This loss could undermine the company's market position and share.\r\n  </div>\r\n)","import { message } from \"antd\";\r\nimport { STATUS_CODE_400,STATUS_CODE_401,STATUS_CODE_403,STATUS_CODE_404,STATUS_CODE_500,STATUS_CODE_503 } from \"../Constants\";\r\n\r\n\r\nexport function errorMessages(error) {\r\n  console.log(error.response,\"error\");\r\n  if (error.response === undefined) {\r\n    message.error(\"Unable to connect. Please check your connection!\");\r\n  } else {\r\n    if (error.response.status === parseInt(STATUS_CODE_400)) {\r\n      message.error(\"Please check all the fields!\");\r\n    }\r\n    else if (error.response.status === parseInt(STATUS_CODE_401)) {\r\n      message.error(\"You are not authorized. Please log out and try again!\");\r\n    } else if (error.response.status === parseInt(STATUS_CODE_403)) {\r\n      message.error(\r\n        \"You do not have permission to access the requested resource..!\"\r\n      );\r\n    } else if (error.response.status === parseInt(STATUS_CODE_404)) {\r\n      message.error(\"The requested resource was not found.!\");\r\n    } else if (error.response.status === parseInt(STATUS_CODE_500)) {\r\n      message.error(\"Internal server error!\");\r\n    } else if (error.response.status === parseInt(STATUS_CODE_503)) {\r\n      message.error(\"The server is unavailable!\");\r\n    }\r\n  }\r\n}\r\n","import { API } from \"./API\";\r\nimport { errorMessages } from \"./ErrorMessages\";\r\nimport { message } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport default class APICommunication {\r\n  async getAPI(address) {\r\n    return await API.get(`${address}`)\r\n      .then(response => {\r\n        return response;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        errorMessages(error);\r\n      });\r\n  }\r\n  async postAPI(address, data) {\r\n    return await API.post(`${address}`, data)\r\n      .then(response => {\r\n        return response;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        errorMessages(error);\r\n        return error;\r\n      });\r\n  }\r\n  async postAPICustomMessage(address, data) {\r\n    return await API.post(`${address}`, data)\r\n      .then(response => {\r\n        return response;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        message.error(error.response.data.error);\r\n        return false\r\n      });\r\n  }\r\n  async postAPIFileUpload(address, data) {\r\n    return await API.post(`${address}`, data, {\r\n      headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    })\r\n      .then(response => {\r\n        return response;\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        errorMessages(error);\r\n        return error;\r\n      });\r\n  }\r\n  async postAxios(address, data) {\r\n    return await axios.post(`${address}`, data)\r\n      .then(response => {\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        if (error.response === undefined) {\r\n          message.error(\"Unable to connect. Please check your connection!\");\r\n          return false\r\n        }\r\n        else {\r\n          console.log(error.response.data.message,'error');\r\n          message.error(error.response.data.message);\r\n          return false\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { BACKUP_REQUEST_DROPDOWN,SUBMIT_BACKUP_DETAILS } from \"../../App/Utils/Urls\";\r\nimport APICommunication from \"../../App/Utils/APICommunication\";\r\nimport { SUCCESS_STATUS_CODE } from \"../../App/Constants\";\r\n\r\nexport default class BackupRequestDataProvider extends APICommunication {\r\n    constructor() {\r\n        super();\r\n        this.APICommunication = new APICommunication();\r\n    }\r\nasync fetchDropdownList(){\r\n    const data = await this.APICommunication.getAPI(BACKUP_REQUEST_DROPDOWN);\r\n    return data.data;\r\n  }\r\nasync formSubmit(data) {\r\n    const response = await this.APICommunication.postAPI(SUBMIT_BACKUP_DETAILS,data);\r\n    if (response.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n        return { result: true, loading: false };\r\n      }\r\n    else {\r\n        return { result: false, loading: false };\r\n    }  \r\n  }\r\n}","import { API } from \"./API\";\r\nimport {\r\n  APPROVAL_API,\r\n  OUTLOOK_ID,\r\n  GET_DEPT_LOC_LIST,\r\n  APPROVE_REJECT,\r\n  BASE_URL,\r\n  APPROVAL_MAIL\r\n} from \"./Urls\";\r\nimport {\r\n  MESSAGES,\r\n  ERROR,\r\n  SUCCESS_STATUS_CODE\r\n} from \"../Constants\";\r\nimport { message } from \"antd\";\r\nimport {\r\n  NEW_LOGIN_FORM_ID,\r\n  BACKUP_FORM_ID,\r\n  RESTORATION_FORM_ID,\r\n  FTP_FORM_ID,\r\n  NEW_ASSET_FORM_ID,\r\n  COMMON_MAILBOX_FORM_ID,\r\n  RETURN_ASSET_FORM_ID,\r\n  RISK_ACCEPTANCE_FORM_ID\r\n} from \"../Constants\";\r\nimport axios from \"axios\";\r\nimport { errorMessages } from \"./ErrorMessages\";\r\n\r\n/**\r\n * return approvers list  according to  each request id\r\n * @param {*} value\r\n */\r\n//api to populate fields in Approval list of all request Forms\r\nexport async function approverAPI(value) {\r\n  API.defaults.headers.common[\"Authorization\"] =\r\n    \"Token \" + localStorage.getItem(\"token\");\r\n  return await API.get(\r\n    // fetch approver list\r\n    `${APPROVAL_API}${value}${OUTLOOK_ID}${localStorage.getItem(\"outlook_id\")}`\r\n  )\r\n    .then((res) => {\r\n      let data = res.data.hierarchy;\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      let data = null;\r\n      console.log(error);\r\n      errorMessages(error);\r\n      return data;\r\n    });\r\n}\r\n\r\n//api to get  department List and location List\r\n// function will return dept and location list\r\nexport async function deptLocListAPI() {\r\n  API.defaults.headers.common[\"Authorization\"] =\r\n    \"Token \" + localStorage.getItem(\"token\");\r\n  return await API.get(`${GET_DEPT_LOC_LIST}`)\r\n    .then((res) => {\r\n      let data = res.data;\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      errorMessages(error);\r\n    });\r\n}\r\n\r\n/**\r\n *\r\n * return appropriate url as string\r\n * here we get formtype,val and type id as param\r\n * checking formtype with constants and return the url\r\n * @param {*} formType\r\n * @param {*} val\r\n * @param {*} type\r\n */\r\nexport function navigateTo(formType, val, type) {\r\n  // navigate to  appropriate request\r\n\r\n  switch (String(formType)) {\r\n    case NEW_LOGIN_FORM_ID:\r\n      return `/approval_new_login_id/${val}/${type}`;\r\n    case BACKUP_FORM_ID:\r\n      return `/approval_backup/${val}/${type}`;\r\n    case RESTORATION_FORM_ID:\r\n      return `/approval_restoration/${val}/${type}`;\r\n    case FTP_FORM_ID:\r\n      return `/approval_ftp_id/${val}/${type}`;\r\n    case NEW_ASSET_FORM_ID:\r\n      return `/approval_asset/${val}/${type}`;\r\n    case COMMON_MAILBOX_FORM_ID:\r\n      return `/approval_common_mailbox/${val}/${type}`;\r\n    case RETURN_ASSET_FORM_ID:\r\n      return `/approval_asset_return/${val}/${type}`;\r\n    case RISK_ACCEPTANCE_FORM_ID:\r\n      return `/approval_risk_acceptance/${val}/${type}`;\r\n    default:\r\n      message.error(ERROR);\r\n      return null;\r\n  }\r\n}\r\n\r\n/**\r\n * approve  or  reject the request\r\n * here we get status,comment,id and outlook id as param\r\n * creating an object data and post this data  to  approve or reject the request\r\n * @param {*} status\r\n */\r\nexport async function approveReject(status, comment, id, outlookId) {\r\n  const data = {};\r\n  data[\"comment\"] = comment;\r\n  data[\"req_no\"] = parseInt(id);\r\n  data[\"outlook_id\"] = outlookId;\r\n  data[\"status\"] = status;\r\n  return await API.post(`${APPROVE_REJECT}`, data)\r\n    .then((res) => {\r\n      if (res.status === 201) {\r\n        if (status === true) {\r\n          message.success(MESSAGES.approved);\r\n        } else {\r\n          this.props.history.push(\"/\");\r\n          message.success(MESSAGES.rejected);\r\n        }\r\n      }\r\n      return res.status;\r\n    })\r\n    .catch((error) => {\r\n      errorMessages(error);\r\n    });\r\n}\r\n\r\nexport async function apiSubmit(api, data) {\r\n  return await API.post(`${api}`, data)\r\n    .then((res) => {\r\n      if (res.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n        return { result: true, loading: false };\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      errorMessages(error);\r\n      return { result: false, loading: false };\r\n    });\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Form, Input, InputNumber, Select } from \"antd\";\r\nimport { PATTERNS } from \"../../../App/Constants\";\r\nimport BackupRequestDataProvider from \"../BackupRequestDataProvider\";\r\nimport { EditableContext } from \"./BackupRequestTable\";\r\n\r\nconst { Option } = Select;\r\nvar backupList = [];\r\nvar serverTypeList = [];\r\nvar frequencyList = [];\r\nvar backupDriveList = [];\r\n\r\nexport class EditableCell extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.BackupRequestDataProvider = new BackupRequestDataProvider();\r\n  }\r\n  state = {\r\n    editing: false\r\n  };\r\n  async componentDidMount() {\r\n    const data = await this.BackupRequestDataProvider.fetchDropdownList(); //api to populate dropdowns.\r\n    backupList = data.backup_of_list;\r\n    serverTypeList = data.server_type_list;\r\n    frequencyList = data.frequency_list;\r\n    backupDriveList = data.backup_drive;\r\n  }\r\n  //get input from table\r\n  getInput = dataIndex => {\r\n    //function to render component conditionally based on dataindex. dataindex\r\n    switch (\r\n      dataIndex //is the argument. also returns text field as default.\r\n    ) {\r\n      case \"backup_of\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"backupselect\"\r\n          >\r\n            {backupList.map(person => (\r\n              <Option value={person.id} label={person.name} key={person.id}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"server_ip\":\r\n        return (\r\n          <Input\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            required={true}\r\n            pattern={PATTERNS.SERVER_IP}\r\n            placeholder=\"Enter server IP\"\r\n          />\r\n        );\r\n      case \"server_type\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"backupselect\"\r\n          >\r\n            {serverTypeList.map(serverType => (\r\n              <Option\r\n                value={serverType.id}\r\n                label={serverType.name}\r\n                key={serverType.id}\r\n              >\r\n                {serverType.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"frequency\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"backupselect\"\r\n          >\r\n            {frequencyList.map(person => (\r\n              <Option value={person.id} label={person.name} key={person.id}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"backup_drive\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"backupselect\"\r\n          >\r\n            {backupDriveList.map(person => (\r\n              <Option value={person.id} label={person.name} key={person.id}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"size\":\r\n        return (\r\n          <InputNumber\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            required={true}\r\n            onBlur={this.save}\r\n            placeholder=\"add size\"\r\n            min={0}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <Input\r\n            type=\"text\"\r\n            maxLength={75}\r\n            required={true}\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"max 75 characters\"\r\n          />\r\n        );\r\n    }\r\n  };\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n  // here input data (row) from the table is added to the list\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n  renderCell = form => {\r\n    //function to render each cell. form is argument.\r\n    this.form = form;\r\n    const { dataIndex, record } = this.props;\r\n    return (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `required`\r\n            }\r\n          ],\r\n          initialValue: record[dataIndex]\r\n        })(this.getInput(dataIndex))}\r\n      </Form.Item>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      inputType,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Tag } from \"antd\";\r\n\r\nexport const NEW_ASSET_APPROVAL_COLUMN = [\r\n  {\r\n    title: \"Request Type\",\r\n    dataIndex: \"requesttype\"\r\n  },\r\n  {\r\n    title: \"Required Type\",\r\n    dataIndex: \"requiredtype\"\r\n  },\r\n  {\r\n    title: \"Asset Type\",\r\n    dataIndex: \"assettype\"\r\n  },\r\n  {\r\n    title: \"Remarks\",\r\n    dataIndex: \"remarks\"\r\n  },\r\n  {\r\n    title: \"Is Temp\",\r\n    dataIndex: \"istemp\"\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    dataIndex: \"fromdate\"\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    dataIndex: \"todate\"\r\n  },\r\n  {\r\n    title: \"Transfer To\",\r\n    dataIndex: \"transferto\"\r\n  }\r\n];\r\n\r\n//back up Approval\r\nexport const BACKUP_APPROVAL_COLUMN = [\r\n  {\r\n    title: \"Backup Of\",\r\n    dataIndex: \"backup_of\"\r\n  },\r\n  {\r\n    title: \"Server IP\",\r\n    dataIndex: \"server_ip\"\r\n  },\r\n  {\r\n    title: \"Server Type\",\r\n    dataIndex: \"server_type\"\r\n  },\r\n  {\r\n    title: \"Frequency\",\r\n    dataIndex: \"frequency\"\r\n  },\r\n  {\r\n    title: \"Backup Drive\",\r\n    dataIndex: \"backup_drive\"\r\n  },\r\n  {\r\n    title: \"Size\",\r\n    dataIndex: \"size\"\r\n  },\r\n  {\r\n    title: \"Path\",\r\n    dataIndex: \"path\"\r\n  }\r\n];\r\n\r\n//return acceptance Approval\r\nexport const RETURN_ACCEPTANCE_APPROVAL_COLUMN = [\r\n  {\r\n    title: \"Exception Type\",\r\n    dataIndex: \"exception_type\",\r\n    align: \"center\",\r\n    width: \"25%\"\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    dataIndex: \"from_date\",\r\n    align: \"center\"\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    dataIndex: \"to_date\",\r\n    align: \"center\"\r\n  },\r\n  {\r\n    title: \"Justify\",\r\n    dataIndex: \"justify\",\r\n    width: \"40%\",\r\n    align: \"center\"\r\n  }\r\n];\r\n\r\n//return asset Approval\r\n\r\nexport const RETURN_ASSET_APPROVAL_COLUMN = [\r\n  {\r\n    title: \"Asset\",\r\n    dataIndex: \"asset\",\r\n    align: \"center\"\r\n  },\r\n  {\r\n    title: \"Details\",\r\n    dataIndex: \"details\",\r\n    align: \"center\"\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    dataIndex: \"reason\",\r\n    align: \"center\"\r\n  }\r\n];\r\n\r\n//restoration Approval column\r\n\r\nexport const RESTORATION_APPROVAL_COLUMN = [\r\n  {\r\n    title: \"File Type\",\r\n    dataIndex: \"type\"\r\n  },\r\n  {\r\n    title: \"Full Path\",\r\n    dataIndex: \"full_path\"\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    dataIndex: \"reason\"\r\n  },\r\n  {\r\n    title: \"Deleted Date\",\r\n    dataIndex: \"corrupted_dt\"\r\n  },\r\n  {\r\n    title: \"Last Accessed Date\",\r\n    dataIndex: \"lst_accessed_dt\"\r\n  }\r\n];\r\n\r\n// new login id Approval\r\n\r\nexport const NEW_LOGIN_ID_APPROVAL_COLUMN = [\r\n  {\r\n    title: \"Type\",\r\n    dataIndex: \"type\"\r\n  },\r\n  {\r\n    title: \"Requirement Type\",\r\n    dataIndex: \"req_type\"\r\n  },\r\n  {\r\n    title: \"FTP User ID\",\r\n    dataIndex: \"ftp_uid\"\r\n  },\r\n  {\r\n    title: \"Folder Name\",\r\n    dataIndex: \"folder_name\"\r\n  },\r\n  {\r\n    title: \"Validity From\",\r\n    dataIndex: \"validity_from\"\r\n  },\r\n  {\r\n    title: \"Validity To\",\r\n    dataIndex: \"validity_to\"\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    dataIndex: \"reason\"\r\n  },\r\n  {\r\n    title: \"Folder Owner\",\r\n    dataIndex: \"folder_owner\"\r\n  }\r\n];\r\n\r\nexport const RETURN_ASSET_FORM_COLUMN = [\r\n  {\r\n    title: \"Asset\",\r\n    dataIndex: \"asset\",\r\n    align: \"center\",\r\n    width: \"25%\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Details\",\r\n    dataIndex: \"details\",\r\n    align: \"center\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    dataIndex: \"reason\",\r\n    align: \"center\",\r\n    editable: true\r\n  }\r\n];\r\nexport const BACKUP_FORM_COLUMN = [\r\n  {\r\n    title: \"Backup Of\",\r\n    dataIndex: \"backup_of\",\r\n    align: \"center\",\r\n    editable: true,\r\n    width: \"15%\"\r\n  },\r\n  {\r\n    title: \"Server IP\",\r\n    dataIndex: \"server_ip\",\r\n    align: \"center\",\r\n    editable: true,\r\n    dataType: \"number\"\r\n  },\r\n  {\r\n    title: \"Server Type\",\r\n    dataIndex: \"server_type\",\r\n    align: \"center\",\r\n    editable: true,\r\n    width: \"15%\"\r\n  },\r\n  {\r\n    title: \"Frequency\",\r\n    dataIndex: \"frequency\",\r\n    align: \"center\",\r\n    editable: true,\r\n    width: \"10%\"\r\n  },\r\n  {\r\n    title: \"Backup Drive\",\r\n    dataIndex: \"backup_drive\",\r\n    align: \"center\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Size(in MB)\",\r\n    dataIndex: \"size\",\r\n    align: \"center\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Path\",\r\n    dataIndex: \"path\",\r\n    align: \"center\",\r\n    editable: true\r\n  }\r\n];\r\nexport const FTPID_FORM_COLUMN = [\r\n  {\r\n    title: \"Type\",\r\n    dataIndex: \"type\",\r\n    align: \"center\",\r\n    width: 180,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Requirement Type\",\r\n    dataIndex: \"req_type\",\r\n    align: \"center\",\r\n    width: 150,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"FTP User ID\",\r\n    dataIndex: \"ftp_uid\",\r\n    align: \"center\",\r\n    width: 180,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Folder Name\",\r\n    dataIndex: \"folder_name\",\r\n    align: \"center\",\r\n    width: 180,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Folder Owner\",\r\n    dataIndex: \"folder_owner\",\r\n    align: \"center\",\r\n    width: 230,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Validity From\",\r\n    dataIndex: \"validity_from\",\r\n    align: \"center\",\r\n    width: 170,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Validity To\",\r\n    dataIndex: \"validity_to\",\r\n    align: \"center\",\r\n    width: 170,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    dataIndex: \"reason\",\r\n    align: \"center\",\r\n    width: 230,\r\n    editable: true\r\n  }\r\n];\r\nexport const ASSET_FORM_COLUMN = [\r\n  {\r\n    title: \"Request Type\",\r\n    dataIndex: \"request_type\",\r\n    align: \"center\",\r\n    width: 120,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Required Type\",\r\n    dataIndex: \"required_type\",\r\n    align: \"center\",\r\n    width: 120,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Asset Type\",\r\n    dataIndex: \"asset_type\",\r\n    align: \"center\",\r\n    width: 200,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Remarks\",\r\n    dataIndex: \"remark\",\r\n    align: \"center\",\r\n    //width: '20%',\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Is Temp\",\r\n    dataIndex: \"istemp\",\r\n    align: \"center\",\r\n    width: 70,\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    dataIndex: \"from_date\",\r\n    align: \"center\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    dataIndex: \"to_date\",\r\n    align: \"center\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Transfer To\",\r\n    dataIndex: \"transfer_to\",\r\n    align: \"center\",\r\n    width: 200,\r\n    editable: true\r\n  }\r\n];\r\nexport const RESTORATION_FORM_COLUMN = [\r\n  {\r\n    title: \"Type\",\r\n    dataIndex: \"type\",\r\n    align: \"center\",\r\n    width: \"10%\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Full Path\",\r\n    dataIndex: \"full_path\",\r\n    align: \"center\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Reason\",\r\n    dataIndex: \"reason\",\r\n    align: \"center\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Corrupted/Deleted Date\",\r\n    dataIndex: \"corrupted_dt\",\r\n    align: \"center\",\r\n    width: \"15%\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Last Accessed Date\",\r\n    dataIndex: \"lst_accessed_dt\",\r\n    align: \"center\",\r\n    width: \"15%\",\r\n    editable: true\r\n  }\r\n];\r\nexport const RISKACCEPTANCE_FORM_COLUMN = [\r\n  {\r\n    title: \"Exception Type\",\r\n    dataIndex: \"exception_type\",\r\n    align: \"center\",\r\n    width: \"25%\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"From Date\",\r\n    dataIndex: \"from_date\",\r\n    align: \"center\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"To Date\",\r\n    dataIndex: \"to_date\",\r\n    align: \"center\",\r\n    editable: true\r\n  },\r\n  {\r\n    title: \"Justify\",\r\n    dataIndex: \"justify\",\r\n    width: \"40%\",\r\n    editable: true,\r\n    align: \"center\"\r\n  }\r\n];\r\nexport const APPROVAL_HISTORY_COLUMN = [\r\n  {\r\n    headerName: \"Request No.\",\r\n    field: \"req_num\",\r\n    cellRenderer: \"linkRenderer\",\r\n    cellRendererParams: {\r\n      request : \"form_type\",\r\n      type : \"history\",\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Date\",\r\n    field: \"req_date\",\r\n  },\r\n  {\r\n    headerName: \"Request\",\r\n    field: \"request\",\r\n  },\r\n  {\r\n    headerName: \"Requestor Name\",\r\n    field: \"requestorName\",\r\n  },\r\n  {\r\n    headerName: \"Status\",\r\n    field: \"tags\",\r\n    cellRenderer: \"statusRenderer\"\r\n  }\r\n];\r\nexport const PENDING_APPROVAL_COLUMN = [\r\n  {\r\n    headerName: \"Request No.\",\r\n    field: \"req_num\",\r\n    cellRenderer: \"linkRenderer\",\r\n    cellRendererParams: {\r\n      request : \"form_type\",\r\n      type : \"approval\",\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Date\",\r\n    field: \"req_date\",\r\n  },\r\n  {\r\n    headerName: \"Request\",\r\n    field: \"request\",\r\n  },\r\n  {\r\n    headerName: \"Requestor Name\",\r\n    field: \"requestorName\",\r\n  },\r\n  {\r\n    headerName: \"Status\",\r\n    field: \"tags\",\r\n    cellRenderer: \"statusRenderer\"\r\n  }\r\n];\r\nexport const PENDING_CLEARANCE_COLUMN = [\r\n  {\r\n    headerName: \"Date\",\r\n    field: \"updated_on\",\r\n  },\r\n  {\r\n    headerName: \"Clearance From\",\r\n    field: \"clearance_from\",\r\n    width: 400,\r\n  },\r\n  {\r\n    headerName: \"Request\",\r\n    field: \"clearance_type\",\r\n  },\r\n  {\r\n    headerName: \"Status\",\r\n    field: \"status\",\r\n    cellRenderer: \"statusRenderer\"\r\n  }\r\n];\r\nexport const PENDING_REQUEST_COLUMN = [\r\n  {\r\n    headerName: \"Request No.\",\r\n    field: \"req_num\",\r\n    cellRenderer: \"linkRenderer\",\r\n    cellRendererParams: {\r\n      request : \"form_type\",\r\n      type : \"request\",\r\n    }\r\n  },\r\n  {\r\n    headerName: \"Date\",\r\n    field: \"req_date\",\r\n  },\r\n  {\r\n    headerName: \"Request\",\r\n    field: \"request\",\r\n    width: 400,\r\n  },\r\n  {\r\n    headerName: \"Status\",\r\n    field: \"tags\",\r\n    cellRenderer: \"statusRenderer\"\r\n  }\r\n];\r\nexport const REPORT_COLUMN = [\r\n  {\r\n    headerName: \"Request No.\",\r\n    field: \"request_no\",\r\n  },\r\n  {\r\n    headerName: \"Date\",\r\n    field: \"requested_on\",\r\n    cellRenderer: \"dateRenderer\"\r\n  },\r\n  {\r\n    headerName: \"Requestor Name\",\r\n    field: \"requested_by\",\r\n  },\r\n  {\r\n    headerName: \"Request\",\r\n    field: \"form_name\",\r\n  },\r\n  {\r\n    headerName: \"Status\",\r\n    field: \"status\",\r\n    cellRenderer: \"statusRenderer\"\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport { Popconfirm, Icon } from \"antd\";\r\n\r\nexport default class TablePopConfirm extends React.Component {\r\n    render() {\r\n        return (\r\n            <Popconfirm\r\n                title=\"Sure to delete?\"\r\n                onConfirm={() => this.props.handleDelete(this.props.record)}\r\n            >\r\n                <a href=\"javascript:\">\r\n                    <Icon\r\n                        type=\"delete\"\r\n                        theme=\"filled\"\r\n                        style={{ color: \"#282c34\" }}\r\n                    />\r\n                </a>\r\n            </Popconfirm>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"../../RequestTable.css\";\r\nimport {Button, Form, Table} from \"antd\";\r\nimport {EditableCell} from \"./BackupEditableCell\";\r\nimport {BACKUP_FORM_COLUMN} from \"../../../App/Utils/ColumnMetadata\";\r\nimport TablePopConfirm from \"../../../App/Utils/TablePopConfirm\";\r\n\r\nvar backup = [];\r\n\r\nexport const EditableContext = React.createContext();\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\nconst EditableFormRow = Form.create()(EditableRow);\r\nexport default class EditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backupof: [],\r\n      data: []\r\n    };\r\n    this.columns = [\r\n      ...BACKUP_FORM_COLUMN,\r\n      {\r\n        title: \"Operation\",\r\n        dataIndex: \"operation\",\r\n        align: \"center\",\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <TablePopConfirm \r\n              record = {record.key}\r\n              handleDelete = {this.handleDelete}\r\n            />\r\n          ) : null\r\n      }\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: 0\r\n        }\r\n      ],\r\n      count: 1\r\n    };\r\n  }\r\n\r\n  handleDelete = (key) => {           //function to delete row. key is the argument.\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter((item) => item.key !== key) });\r\n  };\r\n  handleAdd = () => {               //fuction to add a blank row. count is increased.\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1\r\n    });\r\n  };\r\n  handleSave = (row) => {             //to save data entered in table. row is the argument.\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n    this.setState({ dataSource: newData });\r\n    backup = Array.from(newData);\r\n    this.props.getTable(backup);\r\n  };\r\n\r\n  render() {                     \r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          inputType: col.dataIndex === \"size\" ? \"number\" : \"text\",\r\n          title: col.title,\r\n          handleSave: this.handleSave\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          size=\"small\"\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          scroll={{ x: 1100 }}\r\n        />\r\n        <Button\r\n          onClick={this.handleAdd}\r\n          style={{ marginTop: 16, float: \"right\" }}\r\n        >\r\n          Add a row\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Radio } from \"antd\";\r\n\r\nexport default class RequirementType extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      requirementType: \"\",\r\n      backupType: \"\"\r\n    };\r\n    this.formChange = this.formChange.bind(this); //intialize methods\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromRequirementType(this.state);\r\n  }\r\n  async formChange(event) {\r\n    //to save changes to form\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row input\">\r\n        <div className=\"container pb-3\">\r\n          <h4 className=\"pt-3\">Requirement Type</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 pl-4\">\r\n              <label>Requirement</label>\r\n            </div>\r\n            <div className=\"col-10 pl-5\">\r\n              <Radio.Group\r\n                name=\"requirementType\"\r\n                className=\"form-check-input\"\r\n                onChange={this.formChange}\r\n              >\r\n                <Radio value={\"New\"} className=\"mr-4\">\r\n                  New\r\n                </Radio>\r\n                <Radio value={\"Modification\"} className=\"ml-5\">\r\n                  Modification\r\n                </Radio>\r\n              </Radio.Group>\r\n            </div>\r\n          </div>\r\n          <div className=\"row \">\r\n            <div className=\"col-2 pl-4\">\r\n              <label>Backup type</label>\r\n            </div>\r\n            <div className=\"col-10 pl-5\">\r\n              <Radio.Group\r\n                name=\"backupType\"\r\n                className=\"form-check-input\"\r\n                onChange={this.formChange}\r\n              >\r\n                <Radio value={\"User mail data\"}>User mail data</Radio>\r\n                <Radio\r\n                  value={\"SQL DB/Oracle DB/Image backup/Other\"}\r\n                  className=\"pl-1\"\r\n                >\r\n                  SQL DB/Oracle DB/Image backup/Other\r\n                </Radio>\r\n              </Radio.Group>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nvar tempDate = new Date();\r\n//common component that is shown in all request Forms used to show requestor details.\r\nexport default class RequestorDetails extends React.Component {\r\n  async componentDidMount() {\r\n    await this.setState({ userDetails: localStorage.getItem(\"user_details\") });\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userDetails: [],\r\n      requestdate:\r\n        tempDate.getDate() +\r\n        \"-\" +\r\n        (tempDate.getMonth() + 1) +\r\n        \"-\" +\r\n        tempDate.getFullYear(),\r\n      requestorname: localStorage.getItem(\"name\"),\r\n      sap: localStorage.getItem(\"sap_code\"),\r\n      vertical: localStorage.getItem(\"vertical\"),\r\n      department: localStorage.getItem(\"department\"),\r\n      company: localStorage.getItem(\"company\"),\r\n      designation: localStorage.getItem(\"designation\"),\r\n      email: localStorage.getItem(\"email_id\"),\r\n      mobilenum: localStorage.getItem(\"mobile_no\"),\r\n      extension: localStorage.getItem(\"extension_no\"),\r\n      location: localStorage.getItem(\"location\")\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row input\">\r\n          <div className=\"container \">\r\n            <h4 className=\"pt-3\">User details</h4>\r\n            <hr />\r\n            <div className=\"background py-2 pl-2\">\r\n              <div className=\"row input\">\r\n                <div className=\"col-2 pl-4 \">Request Date</div>\r\n                <div className=\"col-4 pl-4\">\r\n                  <b>\r\n                    <label>{this.state.requestdate}</label>\r\n                  </b>\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-2 pl-4\">Requestor Name</div>\r\n                <div className=\"col-4 pl-4\">\r\n                  <b>\r\n                    <label>{this.state.requestorname}</label>\r\n                  </b>\r\n                </div>\r\n                <div className=\"col-2 \">SAP Code</div>\r\n                <div className=\"col-4 \">\r\n                  <b>\r\n                    <label>{this.state.sap}</label>\r\n                  </b>\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-2 pl-4\">Company Name</div>\r\n                <div className=\"col-4 pl-4\">\r\n                  <b>\r\n                    <label>{this.state.company}</label>\r\n                  </b>\r\n                </div>\r\n                <div className=\"col-2 \">Vertical</div>\r\n                <div className=\"col-4 \">\r\n                  <b>\r\n                    <label>{this.state.vertical}</label>\r\n                  </b>\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-2 pl-4\">Department</div>\r\n                <div className=\"col-4 pl-4\">\r\n                  <b>\r\n                    <label>{this.state.department}</label>\r\n                  </b>\r\n                </div>\r\n                <div className=\"col-2 \">Location</div>\r\n                <div className=\"col-4 \">\r\n                  <b>\r\n                    <label>{this.state.location}</label>\r\n                  </b>\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-2 pl-4\">Designation</div>\r\n                <div className=\"col-4 pl-4\">\r\n                  <b>\r\n                    <label>{this.state.designation}</label>\r\n                  </b>\r\n                </div>\r\n                <div className=\"col-2 \">E-mail ID</div>\r\n                <div className=\"col-4 \">\r\n                  <b>\r\n                    <label>{this.state.email}</label>\r\n                  </b>\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-2 pl-4\">Mobile No.</div>\r\n                <div className=\"col-4 pl-4\">\r\n                  <b>\r\n                    <label>{this.state.mobilenum}</label>\r\n                  </b>\r\n                </div>\r\n                <div className=\"col-2 \">Extension No.</div>\r\n                <div className=\"col-4 \">\r\n                  <b>\r\n                    <label>\r\n                      {this.state.extension === \"null\"\r\n                        ? \"------\"\r\n                        : this.state.extension}\r\n                    </label>\r\n                  </b>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select } from \"antd\";\r\nimport { IM_PLACEHOLDER, PATTERNS } from \"../../App/Constants\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nexport default class AdditionalInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      purpose: \"\",\r\n      location: \"\",\r\n      department: \"\",\r\n      im_no:\"\"\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromAdditionalInfo(this.state);\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"container pb-3\">\r\n          <h4 className=\"pt-3\">Additional Information</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-3 pl-4 pt-3\">\r\n              <label>{this.props.textareaLabel}</label>\r\n            </div>\r\n            <div className=\"col-8 \">\r\n              <TextArea\r\n                className=\"form-control\"\r\n                rows=\"3\"\r\n                placeholder=\"Maximum 250 characters\"\r\n                maxLength=\"250\"\r\n                name=\"purpose\"\r\n                onChange={this.formChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          {this.props.requireIM === true ? (\r\n            <div className=\"row input\">\r\n              <div className=\"col-3 pl-4\">\r\n                <label>IM no.</label>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <Input\r\n                  name=\"im_no\"\r\n                  style={{ width: 250 }}\r\n                  onChange={this.formChange}\r\n                  maxLength={12}\r\n                  pattern={PATTERNS.IM}\r\n                  placeholder={IM_PLACEHOLDER}\r\n                  required={true}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"row input\">\r\n            <div className=\"col-3 pl-4\">\r\n              <label>Department</label>\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <Select\r\n                placeholder=\"Select\"\r\n                name=\"department\"\r\n                style={{ width: 250 }}\r\n                onChange={(value) => {\r\n                  this.setState({ department: value });\r\n                }}\r\n              >\r\n                {this.props.dept.map((dept) => (\r\n                  <Option value={dept.id} label={dept.name} key={dept.name}>\r\n                    {dept.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"row input\">\r\n            <div className=\"col-3 pl-4\">\r\n              <label>Location</label>\r\n            </div>\r\n            <div className=\"col-3 \">\r\n              <Select\r\n                placeholder=\"Select\"\r\n                name=\"location\"\r\n                style={{ width: 250 }}\r\n                onChange={(value) => {\r\n                  this.setState({ location: value });\r\n                }}\r\n              >\r\n                {this.props.locationList.map((dept) => (\r\n                  <Option value={dept.id} label={dept.name} key={dept.name}>\r\n                    {dept.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { BACKUP_FORM_ID } from \"../../App/Constants\";\r\n\r\n//function set up payload object for submitting data. returns all data in a\r\n//single object to post api.\r\nexport async function backupRequestDataSetter(        \r\n  dataFromRequirementType,\r\n  datafromAdditionalInfo,\r\n  backup,\r\n  approverData\r\n) {\r\n  const data = {}; //object used to post request. all data is added to this object\r\n  const allRequest = {}; //object to send request details\r\n  allRequest[\"form_type\"] = BACKUP_FORM_ID;\r\n  allRequest[\"requested_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"updated_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"requirement\"] = dataFromRequirementType.requirementType;\r\n  allRequest[\"backup_type\"] = dataFromRequirementType.backupType;\r\n  allRequest[\"purpose\"] = datafromAdditionalInfo.purpose;\r\n  allRequest[\"department\"] = datafromAdditionalInfo.department;\r\n  allRequest[\"location\"] = datafromAdditionalInfo.location;\r\n  data[\"allRequest\"] = allRequest;\r\n  data[\"backup\"] = backup;\r\n  data[\"approval_data\"] = approverData;\r\n  return data;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Button, Result} from \"antd\";\r\nimport { MESSAGES } from \"../../App/Constants\";\r\n\r\n//common component for success message after form submission\r\nexport default class RequestSuccess extends React.Component {\r\n  componentDidMount(){\r\n    window.scroll(0,0);\r\n  }\r\n  render() {\r\n    return (\r\n      <Result\r\n        status=\"success\"\r\n        title={MESSAGES.success}\r\n        subTitle={MESSAGES.successDetail}\r\n        extra={[\r\n          <Link to=\"/\">\r\n            <Button type=\"primary\" key=\"console\">\r\n              Go to Home\r\n            </Button>\r\n          </Link>\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class SubmitButtons extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\"text-center input mb-4 mt-4\">\r\n        <div className=\"btn-group\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-dark  mr-4\"\r\n            style={{ width: 80 }}\r\n          >\r\n            Submit\r\n          </button>\r\n          <Link to=\"/\">\r\n            <button\r\n              type=\"reset\"\r\n              className=\"btn btn-secondary \"\r\n              style={{ width: 80 }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class ApprovalHierarchy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row \">\r\n        <div className=\"container\">\r\n          <h4 className=\"pt-3\">Approval hierarchy</h4>\r\n          <hr />\r\n          {this.props.approverData != null //maps data to approver hierarchy section from\r\n            ? this.props.approverData.map((\r\n                approverData //approverData. returns null if its empty. this means a connection problem.\r\n              ) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col-3 pl-4 \">\r\n                    <label>{approverData.approver}</label>\r\n                  </div>\r\n                  <div className=\"col-4\">\r\n                    <label>\r\n                      <b>{approverData.apvr_name}</b>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Spin, Form } from \"antd\";\r\nimport SubmitButtons from \"./SubmitButtons\";\r\nimport ApprovalHierarchy from \"./ApprovalHierarchy\";\r\n\r\nexport default class FormWrapper extends React.Component {\r\n  render() {\r\n    return (\r\n      <Spin spinning={this.props.loading} size=\"large\" tip=\"Please wait\">\r\n        <Form onSubmit={this.props.formSubmit} id=\"backupRequest\">\r\n          <div className=\"container  px-5 py-3\">\r\n            <div className=\"row input\">\r\n              <div className=\"container\">\r\n                <h3 className=\"pt-3\">{this.props.formTitle}</h3>\r\n              </div>\r\n            </div>\r\n            {this.props.display}\r\n            <ApprovalHierarchy approverData={this.props.approverData} />\r\n          </div>\r\n          <SubmitButtons />\r\n        </Form>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../RequestTable.css\";\r\nimport { Spin, message } from \"antd\";\r\nimport BackupRequestDataProvider from \"./BackupRequestDataProvider\";\r\nimport { approverAPI, deptLocListAPI } from \"../../App/Utils/CommonFunctions\";\r\nimport EditableTable from \"./Components/BackupRequestTable\";\r\nimport RequirementType from \"./Components/RequirementType\";\r\nimport RequestorDetails from \"../../UI/Content/RequestorDetails\";\r\nimport AdditionalInfo from \"../../UI/Content/AdditionalInformation\";\r\nimport { backupRequestDataSetter } from \"./BackupRequestDataSetter\";\r\nimport { API } from \"../../App/Utils/API\"; //configured instance of axios\r\nimport { BACKUP_FORM_ID, MESSAGES, FORM_HEADINGS } from \"../../App/Constants\"; //form id\r\nimport RequestSuccess from \"../../UI/Page/RequestSuccess\"; //success page to be displayed\r\nimport FormWrapper from \"../../UI/Content/FormWrapper\";\r\nAPI.defaults.headers.common[\"Authorization\"] =\r\n  \"Token \" + localStorage.getItem(\"token\");\r\n\r\nvar backup = []; //to store table data\r\nvar response = []; //to store response of apiSubmit\r\nvar deptLocOBj = {}; // return catcher of dept and loc Api\r\nvar approverData = []; //to store approver hierarchy data\r\nvar dataFromRequirementType = \"\";\r\nvar datafromAdditionalInfo = \"\";\r\nconst formId = BACKUP_FORM_ID; //from id for request submitting\r\n\r\nexport default class Backup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      requirementType: \"\",\r\n      backupType: \"\",\r\n      purpose: \"\",\r\n      department: \"\",\r\n      location: \"\",\r\n      loading: true,\r\n      hod: \"\",\r\n      dept: [],\r\n      backup: [],\r\n      locationList: [],\r\n      result: false\r\n    };\r\n    this.formChange = this.formChange.bind(this); //intialize methods\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.approverAPI = approverAPI.bind(this);\r\n    this.getTable = this.getTable.bind(this);\r\n    this.deptLocListAPI = deptLocListAPI.bind(this);\r\n    this.BackupRequestDataProvider = new BackupRequestDataProvider(); //dataprovider object creation\r\n  }\r\n  async componentDidMount() {\r\n    approverData = await this.approverAPI(formId.toString()); // api to fetch approver hierarchy\r\n    deptLocOBj = await this.deptLocListAPI(); //api to  fetch  dept and location\r\n    if (deptLocOBj != null) {\r\n      this.setState({\r\n        //setting data to be populated onto state.\r\n        dept: deptLocOBj.department,\r\n        locationList: deptLocOBj.location,\r\n        loading: false\r\n      });\r\n    }\r\n    //fetch  all dropdown list\r\n  }\r\n  async formChange(event) {\r\n    //to save changes to form\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  getTable(value) {\r\n    // to get data from table component, passed as props\r\n    backup = value;\r\n  }\r\n  getDataFromRequirementType = (data) => {\r\n    //to get data from requirement type component\r\n    dataFromRequirementType = data;\r\n  };\r\n  getDataFromAdditionalInfo = (data) => {\r\n    //to get data from additional info component\r\n    datafromAdditionalInfo = data;\r\n  };\r\n  async formSubmit(event) {\r\n    // to submit data\r\n    event.preventDefault();\r\n    if (\r\n      datafromAdditionalInfo.department === \"\" ||\r\n      datafromAdditionalInfo.location === \"\" || //validation to check whether data is entered or not\r\n      dataFromRequirementType.requirementType === \"\" ||\r\n      dataFromRequirementType.backupType === \"\" ||\r\n      backup.length === 0\r\n    ) {\r\n      message.error(MESSAGES.enterdata);\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const data = await backupRequestDataSetter(\r\n        dataFromRequirementType,\r\n        datafromAdditionalInfo,\r\n        backup,\r\n        approverData\r\n      );\r\n      response = await this.BackupRequestDataProvider.formSubmit(\r\n        data\r\n      );\r\n      if (response.result === true) {\r\n        backup = [];\r\n      }\r\n      this.setState({ result: response.result, loading: response.loading });\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.result === false) {\r\n      //success page display check\r\n      const display = (\r\n        <div>\r\n          <RequestorDetails />\r\n          <RequirementType\r\n            getDataFromRequirementType={this.getDataFromRequirementType}\r\n          />\r\n          <div className=\"row\">\r\n            <div className=\"container pb-3\">\r\n              <h4 className=\"pt-3\">Backup Details</h4>\r\n              <hr />\r\n              <Spin\r\n                size=\"large\"\r\n                tip=\"Please wait...\"\r\n                spinning={this.state.loading}\r\n              >\r\n                <EditableTable\r\n                  getTable={this.getTable} // method to get input values from table\r\n                />\r\n              </Spin>\r\n            </div>\r\n          </div>\r\n          <AdditionalInfo\r\n            requireIM={false}\r\n            textareaLabel=\"Purpose\"\r\n            dept={this.state.dept}\r\n            locationList={this.state.locationList}\r\n            getDataFromAdditionalInfo={this.getDataFromAdditionalInfo}\r\n          />\r\n        </div>\r\n      );\r\n      return (\r\n        <FormWrapper\r\n          formTitle={FORM_HEADINGS.BACKUP_FORM}\r\n          formSubmit={this.formSubmit}\r\n          loading={this.state.loading}\r\n          display={display}\r\n          approverData={approverData}\r\n        />\r\n      );\r\n    } else {\r\n      //success page to display on submission.\r\n      return <RequestSuccess />;\r\n    }\r\n  }\r\n}","import React from \"react\";\r\nimport { Input } from \"antd\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default class Remarks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      remarks: \"\"\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromRemarks(this.state);\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row \">\r\n        <div className=\"container\">\r\n          <h4 className=\"pt-3\">Remarks</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 pl-4 pt-4 \">\r\n              <label>Remarks</label>\r\n            </div>\r\n            <div className=\"col-8 \">\r\n              <TextArea\r\n                required={true}\r\n                className=\"form-control\"\r\n                rows=\"3\"\r\n                placeholder=\"maximum 250 characters\"\r\n                maxLength=\"250\"\r\n                name=\"remarks\"\r\n                onChange={this.formChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { RESTORATION,RESTORATION_SUBMIT } from \"../../App/Utils/Urls\";\r\nimport APICommunication from \"../../App/Utils/APICommunication\";\r\nimport { SUCCESS_STATUS_CODE } from \"../../App/Constants\";\r\n\r\nexport default class RestorationDataProvider extends APICommunication {\r\n    constructor() {\r\n        super();\r\n        this.APICommunication = new APICommunication();\r\n    }\r\nasync fetchDropdownList(){\r\n    const data = await this.APICommunication.getAPI(RESTORATION);\r\n    return data.data.data;\r\n  }\r\nasync formSubmit(data) {\r\n    const response = await this.APICommunication.postAPI(RESTORATION_SUBMIT,data);\r\n    if (response.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n        return { result: true, loading: false };\r\n      }\r\n    else {\r\n        return { result: false, loading: false };\r\n    }  \r\n  }\r\n}","import React from \"react\";\r\nimport {Form, Input, Select} from \"antd\";\r\nimport {EditableContext} from \"./RestorationRequestTable\";\r\nconst { Option } = Select;\r\n\r\nexport class EditableCell extends React.Component {\r\n    state = {\r\n        editing: false\r\n    };\r\n    getInput = (dataIndex,typedropdown) => {         //function to render each cell depending on the dataindex of the column\r\n        switch (dataIndex) {\r\n            case \"type\":\r\n                return (\r\n                    <Select\r\n                        ref={(node) => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                        placeholder=\"Select\"\r\n                        name=\"restorationselect\"\r\n                    >\r\n                        {typedropdown.map((person) => (\r\n                            <Option value={person.id} label={person.name} key={person.id}>\r\n                                {person.name}\r\n                            </Option>\r\n                        ))}\r\n                    </Select>\r\n                );\r\n            case \"corrupted_dt\":\r\n                return (\r\n                    <input\r\n                        type=\"date\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        ref={(node) => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                        placeholder=\"Select\"\r\n                        style={{ height: 40, width: 150 }}\r\n                        name=\"restorationselect\"\r\n                    />\r\n                );\r\n            case \"lst_accessed_dt\":\r\n                return (\r\n                    <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        format=\"DD-MM-YYYY\"\r\n                        required\r\n                        ref={(node) => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                        placeholder=\"Select\"\r\n                        style={{ height: 40, width: 150 }}\r\n                        name=\"restorationselect\"\r\n                    />\r\n                );\r\n            default:\r\n                return (\r\n                    <Input\r\n                        type=\"text\"\r\n                        ref={(node) => (this.input = node)}\r\n                        onPressEnter={this.save}\r\n                        onBlur={this.save}\r\n                        required\r\n                        maxLength={100}\r\n                        placeholder=\"add data\"\r\n                    />\r\n                );\r\n        }\r\n    };\r\n    toggleEdit = () => {\r\n        //to toggle the editing status\r\n        const editing = !this.state.editing;\r\n        this.setState({ editing }, () => {\r\n            if (editing) {\r\n                this.input.focus();\r\n            }\r\n        });\r\n    };\r\n    save = (e) => {\r\n        //calls handlesave to splice and save data\r\n        const { record, handleSave } = this.props;\r\n        this.form.validateFields((error, values) => {\r\n            if (error && error[e.currentTarget.id]) {\r\n                return;\r\n            }\r\n            this.toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        });\r\n    };\r\n    renderCell = (form) => {\r\n        //function to render each cell\r\n        this.form = form;\r\n        const { dataIndex, record ,typedropdown } = this.props;\r\n        // const { editing } = this.state;\r\n        return (\r\n            <Form.Item style={{ margin: 0 }}>\r\n                {form.getFieldDecorator(dataIndex, {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: `required`\r\n                        }\r\n                    ],\r\n                    initialValue: record[dataIndex]\r\n                })(this.getInput(dataIndex,typedropdown))}\r\n            </Form.Item>\r\n        );\r\n    };\r\n    render() {\r\n        const {\r\n            editable,\r\n            dataIndex,\r\n            title,\r\n            record,\r\n            inputType,\r\n            index,\r\n            handleSave,\r\n            children,\r\n            ...restProps\r\n        } = this.props;\r\n        return (\r\n            <td {...restProps}>\r\n                {editable ? (\r\n                    <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n                ) : (\r\n                    children\r\n                )}\r\n            </td>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"../../RequestTable.css\";\r\nimport { Button, Form, Table } from \"antd\";\r\nimport { RESTORATION_FORM_COLUMN } from \"../../../App/Utils/ColumnMetadata\";\r\nimport {EditableCell} from \"./RestorationEditableCell\";\r\nimport TablePopConfirm from \"../../../App/Utils/TablePopConfirm\";\r\nvar backup = [];                        //used to store data entered in table.\r\n\r\nexport const EditableContext = React.createContext();\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\nconst EditableFormRow = Form.create()(EditableRow);\r\nexport default class EditableTable1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backupof: [],\r\n      data: []\r\n    };\r\n    this.columns = [\r\n     ...RESTORATION_FORM_COLUMN,\r\n      {\r\n        title: \"Operation\",\r\n        dataIndex: \"operation\",\r\n        align: \"center\",\r\n        width: \"5%\",\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <TablePopConfirm\r\n              record = {record.key}\r\n              handleDelete = {this.handleDelete}\r\n            />\r\n          ) : null\r\n      }\r\n    ];\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: 0\r\n        }\r\n      ],\r\n      count: 1\r\n    };\r\n  }\r\n  handleDelete = (key) => {\r\n    //delete row data\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter((item) => item.key !== key) });\r\n  };\r\n  handleAdd = () => {\r\n    // add new row in the table\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    // here input data (row) from the table is added to the list\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n    this.setState({ dataSource: newData });\r\n    backup = Array.from(newData);\r\n    this.props.getTable(backup);\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          inputType: col.dataIndex === \"size\" ? \"number\" : \"text\",\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n          typedropdown: this.props.typedropdown\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          size=\"small\"\r\n          pagination={false}\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          style={{ overflowX: \"scroll\" }}\r\n        />\r\n        <Button\r\n          onClick={this.handleAdd}\r\n          style={{ marginTop: 16, float: \"right\" }}\r\n        >\r\n          Add a row\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}","import { RESTORATION_FORM_ID } from \"../../App/Constants\";\r\n\r\n//function set up payload object for submitting data. returns all data in a\r\n//single object to post api.\r\nexport async function restorationRequestDataSetter(\r\n  datafromRemarks,\r\n  backup,\r\n  approverData\r\n) {\r\n  const data = {}; //object used to post request. all data is added to this object\r\n  const allRequest = {}; //object to send request details\r\n  allRequest[\"form_type\"] = RESTORATION_FORM_ID;\r\n  allRequest[\"requested_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"updated_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"remarks\"] = datafromRemarks.remarks;\r\n  data[\"request\"] = allRequest;\r\n  data[\"details\"] = backup;\r\n  data[\"hierarchy\"] = approverData;\r\n  return data;\r\n}\r\n","import React from \"react\";\r\nimport { Spin, message } from \"antd\";\r\nimport RequestorDetails from \"../../UI/Content/RequestorDetails\";\r\nimport Remarks from \"../../UI/Content/Remarks\";\r\nimport RestorationDataProvider from \"./RestorationDataProvider\";\r\nimport \"../RequestTable.css\";\r\nimport EditableTable1 from \"./Components/RestorationRequestTable\";\r\nimport { API } from \"../../App/Utils/API\";\r\nimport RequestSuccess from \"../../UI/Page/RequestSuccess\";\r\nimport { approverAPI } from \"../../App/Utils/CommonFunctions\";\r\nimport { RESTORATION_FORM_ID, MESSAGES, FORM_HEADINGS } from \"../../App/Constants\";\r\nimport { restorationRequestDataSetter } from \"./RestorationRequestDataSetter\";\r\nimport FormWrapper from \"../../UI/Content/FormWrapper\";\r\nAPI.defaults.headers.common[\"Authorization\"] =\r\n  \"Token \" + localStorage.getItem(\"token\");\r\n\r\nvar approverData = [];\r\nvar backup = [];\r\nvar response = [];\r\nvar datafromRemarks = \"\";\r\nexport default class Restoration extends React.Component {\r\n  async componentDidMount() {\r\n    approverData = await this.approverAPI(RESTORATION_FORM_ID); //to populate Approval hierarchy\r\n    let data = await this.RestorationDataProvider.fetchDropdownList(); //api call fuction to populate type\r\n    this.setState({ type: data, loading: false });\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      type: [],\r\n      result: false\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.approverAPI = approverAPI.bind(this);\r\n    this.RestorationDataProvider = new RestorationDataProvider();\r\n  }\r\n  formChange(event) {\r\n    //to save changes to form\r\n    const target = event.target;\r\n    this.setState({ [target.name]: target.value });\r\n  }\r\n  async formSubmit(event) {\r\n    event.preventDefault();\r\n    if (backup.length === 0) {\r\n      message.error(MESSAGES.enterdata);\r\n    } else {\r\n      // to submit data\r\n      this.setState({ loading: true });\r\n      const data = await restorationRequestDataSetter(\r\n        datafromRemarks,\r\n        backup,\r\n        approverData\r\n      );\r\n      response = await this.RestorationDataProvider.formSubmit(\r\n        data\r\n      );\r\n      if (response.result === true) {\r\n        backup = [];\r\n      }\r\n      this.setState({ result: response.result, loading: response.loading });\r\n    }\r\n  }\r\n  getTable(value) {\r\n    // to get data from table component, passed as props\r\n    backup = value;\r\n  }\r\n  getDataFromRemarks = data => {\r\n    datafromRemarks = data;\r\n  };\r\n  render() {\r\n    const display = (\r\n      <div>\r\n        <RequestorDetails />\r\n        <div className=\"row input\">\r\n          <div className=\"container\">\r\n            <h4 className=\"pt-3\">\r\n              Files/Folders/Database/E-Mail for restoration\r\n            </h4>\r\n            <hr />\r\n            <Spin\r\n              size=\"large\"\r\n              tip=\"Please wait...\"\r\n              spinning={this.state.loading}\r\n            >\r\n              <EditableTable1\r\n                typedropdown={this.state.type}\r\n                getTable={this.getTable}\r\n              />\r\n            </Spin>\r\n          </div>\r\n        </div>\r\n        <Remarks getDataFromRemarks={this.getDataFromRemarks} />\r\n      </div>\r\n    );\r\n    if (this.state.result === false) {\r\n      //success page display check\r\n      return (\r\n        <FormWrapper\r\n          formTitle={FORM_HEADINGS.RESTORATION_FORM}\r\n          formSubmit={this.formSubmit}\r\n          loading={this.state.loading}\r\n          display={display}\r\n          approverData={approverData}\r\n        />\r\n      );\r\n    } else {\r\n      return <RequestSuccess />;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ASSETREQUEST,\r\n  ASSET_TABLE_ASSET_TYPE,\r\n  ASSET_TABLE_REQUIRED_TYPE,\r\n  MANAGER_SEARCH,\r\n  NEW_ASSET_SUBMIT\r\n} from \"../../App/Utils/Urls\";\r\nimport APICommunication from \"../../App/Utils/APICommunication\";\r\nimport { SUCCESS_STATUS_CODE } from \"../../App/Constants\";\r\n\r\nexport default class assetRequestDataProvider extends APICommunication {\r\n  constructor() {\r\n    super();\r\n    this.APICommunication = new APICommunication();\r\n  }\r\n  async fetchDropdownList() {\r\n    const data = await this.APICommunication.getAPI(ASSETREQUEST);\r\n    return data.data;\r\n  }\r\n  async handleSearch(value) {\r\n    const data = await this.APICommunication.getAPI(MANAGER_SEARCH + value);\r\n    return data.data.Employee_list;\r\n  }\r\n  async requestTypeApi(value) {\r\n    const data = await this.APICommunication.getAPI(\r\n      ASSET_TABLE_REQUIRED_TYPE + value\r\n    );\r\n    return data.data.required_type_list;\r\n  }\r\n  async requiredTypeApi(value) {\r\n    const data = await this.APICommunication.getAPI(\r\n      ASSET_TABLE_ASSET_TYPE + value\r\n    );\r\n    return data.data.asset_type_list;\r\n  }\r\n  async formSubmit(data) {\r\n    const response = await this.APICommunication.postAPI(NEW_ASSET_SUBMIT, data);\r\n    if (response.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n      return { result: true, loading: false };\r\n    } else {\r\n      return { result: false, loading: false };\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport assetRequestDataProvider from \"../AssetRequestDataProvider\";\r\nimport { Form, Input, Select } from \"antd\";\r\nimport { EditableContext } from \"./AssetRequestTable\";\r\n\r\nconst { Option } = Select;\r\nvar assetType = [];\r\nvar requiredType = [];\r\n\r\nexport default class EditableCell extends React.Component {\r\n  state = {\r\n    editing: false,\r\n    apiManager: []\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.assetRequestDataProvider = new assetRequestDataProvider();\r\n    this.requestTypeApi = this.requestTypeApi.bind(this);\r\n    this.requiredTypeApi = this.requiredTypeApi.bind(this);\r\n  }\r\n  async requiredTypeApi(value) {\r\n    assetType = await this.assetRequestDataProvider.requiredTypeApi(value);\r\n  }\r\n  async requestTypeApi(value) {\r\n    requiredType = await this.assetRequestDataProvider.requestTypeApi(value);\r\n  }\r\n  async handleSearch(value) {\r\n    //api to search for transfer to\r\n    const response = await this.assetRequestDataProvider.handleSearch(value);\r\n    this.setState({ apiManager: response });\r\n  }\r\n\r\n  getInput = (dataIndex, record, requesttypedrop) => {\r\n    //function to render each cell depending on the dataindex of the column\r\n    switch (dataIndex) {\r\n      case \"request_type\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"requestType\"\r\n            onChange={value => this.requestTypeApi(value)}\r\n          >\r\n            {requesttypedrop.map(person => (\r\n              <Option value={person.id} label={person.name} key={person.id}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"required_type\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"requiredType\"\r\n            onChange={value => this.requiredTypeApi(value)}\r\n          >\r\n            {requiredType.map(person => (\r\n              <Option value={person.id} label={person.name} key={person.id}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"asset_type\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"assetType\"\r\n          >\r\n            {assetType.map(person => (\r\n              <Option value={person.id} label={person.name} key={person.id}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"from_date\":\r\n        return (\r\n          <input\r\n            type=\"date\"\r\n            format=\"DD-MM-YYYY\"\r\n            className=\"form-control\"\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            disabled={record.istemp === true ? false : true}\r\n            onBlur={this.save}\r\n            style={{ height: 40, width: 150 }}\r\n            placeholder=\"Select\"\r\n            name=\"newAssetSelect\"\r\n          />\r\n        );\r\n      case \"to_date\":\r\n        return (\r\n          <input\r\n            type=\"date\"\r\n            format=\"DD-MM-YYYY\"\r\n            className=\"form-control\"\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            disabled={record.istemp === true ? false : true}\r\n            onBlur={this.save}\r\n            style={{ height: 40, width: 150 }}\r\n            placeholder=\"Select\"\r\n            name=\"newAssetSelect\"\r\n          />\r\n        );\r\n      case \"istemp\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"istemp\"\r\n          >\r\n            <Option value={true}>Yes </Option>\r\n            <Option value={false}>No </Option>\r\n          </Select>\r\n        );\r\n      case \"transfer_to\":\r\n        return (\r\n          <Select\r\n            showSearch\r\n            // maxTagCount= {50}\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            disabled={record.request_type === 3 ? false : true}\r\n            placeholder=\"Type to search\"\r\n            name=\"newAssetSelect\"\r\n            onSearch={value => {\r\n              this.handleSearch(value);\r\n            }}\r\n          >\r\n            {this.state.apiManager.map(person => (\r\n              <Option value={person.name} label={person.name} key={person.name}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      default:\r\n        return (\r\n          <Input\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            maxLength={45}\r\n            placeholder=\"add data\"\r\n          />\r\n        );\r\n    }\r\n  };\r\n  toggleEdit = () => {\r\n    //to toggle the editing status\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n  save = e => {\r\n    //calls handlesave to splice and save data\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (record.to_date === undefined) {\r\n        record.to_date = null;\r\n      }\r\n      if (record.from_date === undefined) {\r\n        record.from_date = null;\r\n      }\r\n      if (record.transfer_to === undefined) {\r\n        record.transfer_to = null;\r\n      }\r\n      if (record.remark === undefined) {\r\n        record.remark = null;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n  renderCell = form => {\r\n    //function to render each cell\r\n    this.form = form;\r\n    const { dataIndex, record, requesttypedrop } = this.props;\r\n    return (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required:\r\n                dataIndex === \"remark\" ||\r\n                dataIndex === \"from_date\" ||\r\n                dataIndex === \"to_date\" ||\r\n                dataIndex === \"transfer_to\"\r\n                  ? false\r\n                  : true,\r\n              message: `required`\r\n            }\r\n          ],\r\n          initialValue: record[dataIndex]\r\n        })(this.getInput(dataIndex, record, requesttypedrop))}\r\n      </Form.Item>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../../RequestTable.css\";\r\nimport { Button, Form, Table } from \"antd\";\r\nimport { API } from \"../../../App/Utils/API\";\r\nimport { ASSET_FORM_COLUMN } from \"../../../App/Utils/ColumnMetadata\";\r\nimport EditableCell from \"./AssetRequestEditableCell\";\r\nimport TablePopConfirm from \"../../../App/Utils/TablePopConfirm\";\r\n\r\nvar tableData = [];\r\nAPI.defaults.headers.common[\"Authorization\"] =\r\n  \"Token \" + localStorage.getItem(\"token\"); //setting token authorisation\r\n\r\nexport const EditableContext = React.createContext();\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nexport default class EditableTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.columns = [\r\n      ...ASSET_FORM_COLUMN,\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        align: \"center\",\r\n        width: 60,\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <TablePopConfirm\r\n              record = {record.key}\r\n              handleDelete = {this.handleDelete}\r\n            />\r\n          ) : null\r\n      }\r\n    ];\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: \"0\"\r\n        }\r\n      ],\r\n      count: 1\r\n    };\r\n  }\r\n  //delete row data\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n  };\r\n  // add new row in the table\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1\r\n    });\r\n  };\r\n  // here input data (row) from the table is added to the list\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex(item => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n    this.setState({ dataSource: newData });\r\n    tableData = Array.from(newData);\r\n    this.props.getTable(tableData);\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n          requesttypedrop: this.props.requesttypedrop\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          scroll={{ x: 1300 }}\r\n          size=\"small\"\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-6 text-left mt-3\">\r\n            Note:-Please scroll the table and fill all fields.\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Button\r\n              onClick={this.handleAdd}\r\n              style={{ marginTop: 16, float: \"right\" }}\r\n            >\r\n              Add a row\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { NEW_ASSET_FORM_ID } from \"../../App/Constants\";\r\n\r\n//function set up payload object for submitting data. returns all data in a\r\n//single object to post api.\r\nexport async function assetRequestDataSetter(\r\n  datafromAdditionalInfo,\r\n  tableData,\r\n  approverData\r\n) {\r\n  const data = {}; //object used to post request. all data is added to this object\r\n  const asset_data = {}; //object to send request details\r\n  asset_data[\"form_type\"] = NEW_ASSET_FORM_ID;\r\n  asset_data[\"requested_by\"] = localStorage.getItem(\"outlook_id\");\r\n  asset_data[\"updated_by\"] = localStorage.getItem(\"outlook_id\");\r\n  asset_data[\"purpose\"] = datafromAdditionalInfo.purpose;\r\n  asset_data[\"im_no\"] = datafromAdditionalInfo.im_no;\r\n  asset_data[\"department\"] = datafromAdditionalInfo.department;\r\n  asset_data[\"location\"] = datafromAdditionalInfo.location;\r\n  data[\"asset_data\"] = asset_data;\r\n  data[\"additional_data\"] = tableData;\r\n  data[\"approval_data\"] = approverData;\r\n  return data;\r\n}\r\n","import React from \"react\";\r\nimport { Spin, message } from \"antd\";\r\nimport RequestorDetails from \"../../UI/Content/RequestorDetails\";\r\nimport EditableTable from \"./Components/AssetRequestTable\";\r\nimport AdditionalInfo from \"../../UI/Content/AdditionalInformation\";\r\nimport assetRequestDataProvider from \"./AssetRequestDataProvider\";\r\nimport { API } from \"../../App/Utils/API\";                //configured instance of axios\r\nimport { NEW_ASSET_FORM_ID, MESSAGES, FORM_HEADINGS } from \"../../App/Constants\"; //form id\r\nimport { approverAPI, deptLocListAPI } from \"../../App/Utils/CommonFunctions\";\r\nimport RequestSuccess from \"../../UI/Page/RequestSuccess\"; //success page to display\r\nimport \"../RequestTable.css\";\r\nimport { assetRequestDataSetter } from \"./AssetRequestDataSetter\";\r\nimport FormWrapper from \"../../UI/Content/FormWrapper\";\r\nAPI.defaults.headers.common[\"Authorization\"] = //setting token authentication\r\n  \"Token \" + localStorage.getItem(\"token\");\r\n\r\nvar datafromAdditionalInfo = \"\";\r\nvar approverData = []; // Approver list data\r\nvar tableData = []; // data from editable table\r\nvar response = [];\r\nconst form_id = NEW_ASSET_FORM_ID;\r\nvar deptLocOBj = {};\r\n\r\nexport default class AssetRequest extends React.Component {\r\n  async componentDidMount() {\r\n    approverData = await this.approverAPI(form_id.toString());\r\n    const data = await this.assetRequestDataProvider.fetchDropdownList();\r\n    deptLocOBj = await this.deptLocListAPI(); //api to  fetch  dept and location\r\n    if (deptLocOBj != null) {\r\n      this.setState({\r\n        request_type: data.request_type_list,\r\n        dept: deptLocOBj.department,\r\n        locationList: deptLocOBj.location,\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      request_type: [],\r\n      dept: [],\r\n      locationList: [],\r\n      loading: true,\r\n      result: false\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.approverAPI = approverAPI.bind(this);\r\n    this.getTable = this.getTable.bind(this);\r\n    this.deptLocListAPI = deptLocListAPI.bind(this);\r\n    this.assetRequestDataProvider = new assetRequestDataProvider();\r\n  }\r\n  getTable(tableDataVal) {\r\n    // to get data from table component, passed as props\r\n    tableData = tableDataVal;\r\n    let i = 0;\r\n    for (i = 0; i < tableData.length; i++) {\r\n      if (tableData[i].from_date === undefined) {\r\n        tableData[i].from_date = null;\r\n      }\r\n      if (tableData[i].to_date === undefined) {\r\n        tableData[i].to_date = null;\r\n      }\r\n      if (tableData[i].transfer_to === undefined) {\r\n        tableData[i].transfer_to = null;\r\n      }\r\n    }\r\n  }\r\n  formChange(event) {\r\n    const target = event.target;\r\n    this.setState({ [target.name]: target.value });\r\n  }\r\n  getDataFromAdditionalInfo = (data) => {\r\n    datafromAdditionalInfo = data;\r\n  };\r\n  async formSubmit(event) {\r\n    event.preventDefault();\r\n    if(tableData.length === 0 ||\r\n      datafromAdditionalInfo.department === \"\" ||\r\n      datafromAdditionalInfo.location === \"\"\r\n    ) {\r\n      message.error(MESSAGES.enterdata);\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const data = await assetRequestDataSetter(\r\n        datafromAdditionalInfo,\r\n        tableData,\r\n        approverData\r\n      );\r\n      response = await this.assetRequestDataProvider.formSubmit(data);\r\n      if (response.result === true) {\r\n        tableData = [];\r\n      }\r\n      this.setState({ result: response.result, loading: response.loading });\r\n    }\r\n  }\r\n  render() {\r\n    const display = (\r\n      <div>\r\n        <RequestorDetails />\r\n        <div className=\"row input\">\r\n          <div className=\"container\">\r\n            <h4 className=\"pt-3\">Asset Required</h4>\r\n            <hr />\r\n            <Spin\r\n              size=\"large\"\r\n              tip=\"Please wait...\"\r\n              spinning={this.state.loading}\r\n            >\r\n              <EditableTable\r\n                requesttypedrop={this.state.request_type}\r\n                getTable={this.getTable}\r\n              />\r\n            </Spin>\r\n          </div>\r\n        </div>\r\n        <AdditionalInfo\r\n          requireIM={true}\r\n          textareaLabel=\"Purpose\"\r\n          dept={this.state.dept}\r\n          locationList={this.state.locationList}\r\n          getDataFromAdditionalInfo={this.getDataFromAdditionalInfo}\r\n        />\r\n      </div>\r\n    );\r\n    if (this.state.result === false) {\r\n      return (\r\n        <FormWrapper\r\n          formTitle={FORM_HEADINGS.NEW_ASSET_FORM}\r\n          formSubmit={this.formSubmit}\r\n          loading={this.state.loading}\r\n          display={display}\r\n          approverData={approverData}\r\n        />\r\n      );\r\n    } else {\r\n      return <RequestSuccess />;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SeatPicker from \"react-seat-picker\";\r\nimport Stage from \"../Assets/pngwing.com.png\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      total_requests: \"201\",\r\n      pending: \"12\",\r\n      loading: false,\r\n      approved: \"190\",\r\n      rejected: \"21\",\r\n    };\r\n  }\r\n  addSeatCallback = ({ row, number, id }, addCb) => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      async () => {\r\n        // await new Promise((resolve) => setTimeout(resolve, 1500));\r\n        console.log(`Added seat ${number}, row ${row}, id ${id}`);\r\n        const newTooltip = `tooltip for id-${id} added by callback`;\r\n        addCb(row, number, id, newTooltip);\r\n        this.setState({ loading: false });\r\n      }\r\n    );\r\n  };\r\n\r\n  addSeatCallbackContinuousCase = (\r\n    { row, number, id },\r\n    addCb,\r\n    params,\r\n    removeCb\r\n  ) => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      async () => {\r\n        if (removeCb) {\r\n          // await new Promise((resolve) => setTimeout(resolve, 750));\r\n          console.log(\r\n            `Removed seat ${params.number}, row ${params.row}, id ${params.id}`\r\n          );\r\n          removeCb(params.row, params.number);\r\n        }\r\n        // await new Promise((resolve) => setTimeout(resolve, 750));\r\n        console.log(`Added seat ${number}, row ${row}, id ${id}`);\r\n        const newTooltip = `tooltip for id-${id} added by callback`;\r\n        addCb(row, number, id, newTooltip);\r\n        this.setState({ loading: false });\r\n      }\r\n    );\r\n  };\r\n\r\n  removeSeatCallback = ({ row, number, id }, removeCb) => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      async () => {\r\n        // await new Promise((resolve) => setTimeout(resolve, 1500));\r\n        console.log(`Removed seat ${number}, row ${row}, id ${id}`);\r\n        // A value of null will reset the tooltip to the original while '' will hide the tooltip\r\n        const newTooltip = [\"A\", \"B\", \"C\"].includes(row) ? null : \"\";\r\n        removeCb(row, number, newTooltip);\r\n        this.setState({ loading: false });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const rows = [\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n      [\r\n        { id: 1, number: 1, isSelected: true, tooltip: \"Reserved by you\" },\r\n        { id: 2, number: 2 },\r\n        { id: 3, number: 3 },\r\n        { id: 4, number: 4 },\r\n        { id: 5, number: 5 },\r\n        { id: 6, number: 6 },\r\n        { id: 7, number: 7 },\r\n        null,\r\n        null,\r\n        {\r\n          id: 8,\r\n          number: \"8\",\r\n          isReserved: true,\r\n          tooltip: \"Reserved by Rogger\",\r\n        },\r\n        { id: 9, number: \"9\" },\r\n        { id: 10, number: 10 },\r\n        { id: 11, number: 11 },\r\n        { id: 12, number: 12 },\r\n        { id: 13, number: 13 },\r\n        { id: 14, number: 14 },\r\n      ],\r\n    ];\r\n    const { loading } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"home_container\">\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-12\">\r\n              {/* <h6 style={{textAlign: \"center\"}}>Seat Picker</h6>\r\n                  <div style={{ marginTop: \"100px\" }}>\r\n                    <SeatPicker\r\n                      addSeatCallback={this.addSeatCallback}\r\n                      removeSeatCallback={this.removeSeatCallback}\r\n                      rows={rows}\r\n                      maxReservableSeats={3}\r\n                      alpha\r\n                      visible\r\n                      selectedByDefault\r\n                      loading={loading}\r\n                      tooltipProps={{ multiline: true }}\r\n                    />\r\n                  </div> */}\r\n              <h6 style={{ textAlign: \"center\" }}>\r\n                <img\r\n                  src={Stage}\r\n                  width=\"200\"\r\n                  style={{\r\n                    display: \"block\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                  }}\r\n                ></img>\r\n                All eyes this way please!\r\n              </h6>\r\n              <div style={{ marginTop: \"100px\" }}>\r\n                <SeatPicker\r\n                  addSeatCallback={this.addSeatCallback}\r\n                  removeSeatCallback={this.removeSeatCallback}\r\n                  rows={rows}\r\n                  maxReservableSeats={3}\r\n                  alpha\r\n                  visible\r\n                  selectedByDefault\r\n                  loading={loading}\r\n                  tooltipProps={{ multiline: true }}\r\n                  // continuous\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  marginTop: \"35px\",\r\n                }}\r\n              >\r\n                <Button type=\"primary\" size=\"large\">\r\n                  Book Seats\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { FTPID, MANAGER_SEARCH,FTP_SUBMIT } from \"../../App/Utils/Urls\";\r\nimport APICommunication from \"../../App/Utils/APICommunication\";\r\nimport { SUCCESS_STATUS_CODE } from \"../../App/Constants\";\r\n\r\nexport default class FtpIdDataProvider extends APICommunication {\r\n    constructor() {\r\n        super();\r\n        this.APICommunication = new APICommunication();\r\n    }\r\nasync fetchDropdownList(){\r\n    const data = await this.APICommunication.getAPI(FTPID);\r\n    return data.data;\r\n  }\r\n  async handleSearch(value){\r\n    const data = await this.APICommunication.getAPI(MANAGER_SEARCH+value);\r\n    return data.data.Employee_list;\r\n  }  \r\nasync formSubmit(data) {\r\n    const response = await this.APICommunication.postAPI(FTP_SUBMIT,data);\r\n    if (response.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n        return { result: true, loading: false };\r\n      }\r\n    else {\r\n        return { result: false, loading: false };\r\n    }  \r\n  }\r\n}","import React from \"react\";\r\nimport { Form, Input, Select } from \"antd\";\r\nimport { EditableContext } from \"./FtpIDRequestTable\";\r\nimport FtpIdDataProvider from \"../FtpIdDataProvider\";\r\nconst { Option } = Select;\r\n\r\nexport default class EditableCell extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.FtpIdDataProvider = new FtpIdDataProvider();\r\n  }\r\n  state = {\r\n    editing: false,\r\n    apiManager: []\r\n  };\r\n  getInput = (dataIndex, record, typeDropdown, reqTypeDropdown) => {\r\n    //function to render each cell depending on the dataindex of the column\r\n    switch (dataIndex) {\r\n      case \"type\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"ftpidselect\"\r\n          >\r\n            {typeDropdown.map(person => (\r\n              <Option value={person.name} label={person.name} key={person.name}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"req_type\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"ftpidselect\"\r\n          >\r\n            {reqTypeDropdown.map(person => (\r\n              <Option value={person.name} label={person.name} key={person.id}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"validity_from\":\r\n        return (\r\n          <input\r\n            type=\"date\"\r\n            format=\"DD-MM-YYYY\"\r\n            className=\"form-control\"\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            disabled={record.req_type == \"Permanant\" ? true : false}\r\n            style={{ height: 40, width: 150 }}\r\n            name=\"ftpidselect\"\r\n          />\r\n        );\r\n      case \"validity_to\":\r\n        return (\r\n          <input\r\n            type=\"date\"\r\n            format=\"DD-MM-YYYY\"\r\n            className=\"form-control\"\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            disabled={record.req_type == \"Permanant\" ? true : false}\r\n            style={{ height: 40, width: 150 }}\r\n            name=\"ftpidselect\"\r\n          />\r\n        );\r\n      case \"folder_owner\":\r\n        return (\r\n          <Select\r\n            showSearch\r\n            maxTagCount=\"50\"\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Type to search\"\r\n            name=\"ftpidselect\"\r\n            onSearch={value => {\r\n              this.handleSearch(value);\r\n            }}\r\n          >\r\n            {this.state.apiManager.map(person => (\r\n              <Option value={person.name} label={person.name} key={person.name}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"ftp_uid\":\r\n        return (\r\n          <Input\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            maxLength={150}\r\n            onBlur={this.save}\r\n            disabled={record.type == \"Folder Name\" ? true : false}\r\n            placeholder=\"add data\"\r\n          />\r\n        );\r\n      case \"folder_name\":\r\n        return (\r\n          <Input\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            maxLength={25}\r\n            disabled={record.type == \"FTP ID\" ? true : false}\r\n            placeholder=\"add data\"\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <Input\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            maxLength={100}\r\n            placeholder=\"add data\"\r\n          />\r\n        );\r\n    }\r\n  };\r\n  toggleEdit = () => {\r\n    //to toggle the editing status\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n  save = e => {\r\n    //calls handlesave to splice and save data\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      if (record.validity_from === undefined) {\r\n        record.validity_from = null;\r\n      }\r\n      if (record.validity_to === undefined) {\r\n        record.validity_to = null;\r\n      }\r\n      if (record.ftp_uid === undefined) {\r\n        record.ftp_uid = \"\";\r\n      }\r\n      if (record.folder_name === undefined) {\r\n        record.folder_name = \"\";\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n  renderCell = form => {\r\n    //function to render each cell\r\n    this.form = form;\r\n    const { dataIndex, record, typeDropdown, reqTypeDropdown } = this.props;\r\n    return (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required:\r\n                dataIndex == \"validity_from\" ||\r\n                dataIndex == \"validity_to\" ||\r\n                dataIndex == \"ftp_uid\" ||\r\n                dataIndex == \"folder_name\"\r\n                  ? false\r\n                  : true,\r\n              message: `required`\r\n            }\r\n          ],\r\n          initialValue: record[dataIndex]\r\n        })(this.getInput(dataIndex, record, typeDropdown, reqTypeDropdown))}\r\n      </Form.Item>\r\n    );\r\n  };\r\n  async handleSearch(value) {\r\n    const response = await this.FtpIdDataProvider.handleSearch(value);\r\n    //api to search for folder owner\r\n    this.setState({ apiManager: response });\r\n  }\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      inputType,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../../RequestTable.css\";\r\nimport { Button, Form, Table } from \"antd\";\r\nimport { API } from \"../../../App/Utils/API\";\r\nimport { FTPID_FORM_COLUMN } from \"../../../App/Utils/ColumnMetadata\";\r\nimport EditableCell from \"./FtpIdEditableCell\";\r\nimport TablePopConfirm from \"../../../App/Utils/TablePopConfirm\";\r\nvar ftpid = [];\r\nAPI.defaults.headers.common[\"Authorization\"] =\r\n  \"Token \" + localStorage.getItem(\"token\"); //setting authorisation token\r\n\r\nexport const EditableContext = React.createContext();\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\nconst EditableFormRow = Form.create()(EditableRow);\r\nexport default class IDrequesttable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backupof: [],\r\n      data: []\r\n    };\r\n    this.columns = [\r\n      ...FTPID_FORM_COLUMN,\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        width: 60,\r\n        align: \"center\",\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <TablePopConfirm\r\n              record = {record.key}\r\n              handleDelete = {this.handleDelete}\r\n            />\r\n          ) : null\r\n      }\r\n    ];\r\n\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: \"0\"\r\n        }\r\n      ],\r\n      count: 1\r\n    };\r\n  }\r\n  handleDelete = (key) => {                     //funtion to delete data from table\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n  };\r\n  handleAdd = () => {                         // funtion to add row\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    //function to save data to datasource\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n    this.setState({ dataSource: newData });\r\n    ftpid = Array.from(newData);\r\n    this.props.getTable(ftpid); //to send data to main form. received as props\r\n  };\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          inputType: col.dataIndex === \"folder_owner\" ? \"email\" : \"text\",\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n          typeDropdown:this.props.typeDropdown,\r\n          reqTypeDropdown:this.props.reqTypeDropdown\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          size=\"small\"\r\n          scroll={{ x: 1300 }}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-6 text-left mt-3\">\r\n            Note:-Please scroll the table and fill all fields.\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Button\r\n              onClick={this.handleAdd}\r\n              style={{ marginTop: 16, float: \"right\" }}\r\n            >\r\n              Add a row\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import { FTP_FORM_ID } from \"../../App/Constants\";\r\n\r\n//function set up payload object for submitting data. returns all data in a\r\n//single object to post api.\r\nexport async function FtpIdDataSetter(\r\n  datafromRemarks,\r\n  ftpiddata,\r\n  approverData\r\n) {\r\n  const data = {}; //object used to post request. all data is added to this object\r\n  const allRequest = {}; //object to send request details\r\n  allRequest[\"form_type\"] = FTP_FORM_ID;\r\n  allRequest[\"requested_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"updated_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"remarks\"] = datafromRemarks.remarks;\r\n  data[\"request\"] = allRequest;\r\n  data[\"details\"] = ftpiddata;\r\n  data[\"hierarchy\"] = approverData;\r\n  return data;\r\n}\r\n","import React from \"react\";\r\nimport { message } from \"antd\";\r\nimport \"../RequestTable.css\";\r\nimport RequestorDetails from \"../../UI/Content/RequestorDetails\";\r\nimport Remarks from \"../../UI/Content/Remarks\";\r\nimport RequestSuccess from \"../../UI/Page/RequestSuccess\";\r\nimport FtpIdDataProvider from \"./FtpIdDataProvider\";\r\nimport { API } from \"../../App/Utils/API\";\r\nimport { approverAPI } from \"../../App/Utils/CommonFunctions\";\r\nimport { MESSAGES, FTP_FORM_ID, FORM_HEADINGS } from \"../../App/Constants\";\r\nimport IDrequesttable from \"./Components/FtpIDRequestTable\";\r\nimport { FtpIdDataSetter } from \"./FtpIdDatasetter\";\r\nimport FormWrapper from \"../../UI/Content/FormWrapper\";\r\nAPI.defaults.headers.common[\"Authorization\"] =\r\n  \"Token \" + localStorage.getItem(\"token\"); //setting authorization token\r\n\r\nvar approverData = [];\r\nvar typeDropdown = [];\r\nvar reqTypeDropdown = [];\r\nvar response = [];\r\nvar ftpid = [];\r\nvar ftpiddata = [];\r\nvar datafromRemarks = \"\";\r\n\r\nfunction search(nameKey, myArray) {\r\n  for (var i = 0; i < myArray.length; i++) {\r\n    if (myArray[i].name === nameKey) {\r\n      return myArray[i];\r\n    }\r\n  }\r\n}\r\nfunction setBackUp(row) {\r\n  //function to retrieve key of selected item in table\r\n  let temp;\r\n  temp = search(row[\"type\"], typeDropdown);\r\n  row[\"type\"] = temp.id;\r\n  temp = search(row[\"req_type\"], reqTypeDropdown);\r\n  row[\"req_type\"] = temp.id;\r\n  return row;\r\n}\r\n\r\nexport default class IdRequest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      type: [],\r\n      requirementType: [],\r\n      result: false\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n    this.formSubmit = this.formSubmit.bind(this); //binding functions\r\n    this.approverAPI = approverAPI.bind(this);\r\n    this.FtpIdDataProvider = new FtpIdDataProvider();\r\n  }\r\n  async componentDidMount() {\r\n    approverData = await this.approverAPI(FTP_FORM_ID); //api to populate hierarchy\r\n    const data = await this.FtpIdDataProvider.fetchDropdownList(); //api to populate fields\r\n    if (data != null) {\r\n      typeDropdown = data.type_list;\r\n      reqTypeDropdown = data.required_type_list; //setting data to be populated\r\n      this.setState({\r\n        type: data.type_list,\r\n        requirementType: data.required_type_list,\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n  async formChange(event) {\r\n    //to save changes to form\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  getTable(value) {\r\n    // to get data from table component, passed as props\r\n    ftpid = value;\r\n    let i = 0;\r\n    for (i = 0; i < ftpid.length; i++) {\r\n      if (ftpid[i].validity_from == undefined) {\r\n        ftpid[i].validity_from = null;\r\n      }\r\n      if (ftpid[i].validity_to == undefined) {\r\n        ftpid[i].validity_to = null;\r\n      }\r\n      if (ftpid[i].ftp_uid == undefined) {\r\n        ftpid[i].ftp_uid = null;\r\n      }\r\n      if (ftpid[i].folder_name == undefined) {\r\n        ftpid[i].folder_name = null;\r\n      }\r\n    }\r\n  }\r\n  async formSubmit(event) {\r\n    // to submit data\r\n    event.preventDefault();\r\n    if (ftpid.length === 0) {\r\n      message.error(MESSAGES.enterdata);\r\n    } else {\r\n      this.setState({ loading: true });\r\n      ftpid.map(row => ftpiddata.push(setBackUp(row)));\r\n      const data = await FtpIdDataSetter(\r\n        datafromRemarks,\r\n        ftpiddata,\r\n        approverData\r\n      );\r\n      response = await this.FtpIdDataProvider.formSubmit(data);\r\n      if (response.result === true) {\r\n        ftpid = [];\r\n        ftpiddata = [];\r\n      }\r\n      this.setState({ result: response.result, loading: response.loading });\r\n    }\r\n  }\r\n  getDataFromRemarks = data => {\r\n    datafromRemarks = data;\r\n  };\r\n  render() {\r\n    const display = (\r\n      <div>\r\n        <RequestorDetails />\r\n        <div className=\"row input\">\r\n          <div className=\"container\">\r\n            <h4 className=\"pt-3\">FTP ID/Folders Request Details</h4>\r\n            <hr />\r\n              <IDrequesttable\r\n                typeDropdown={typeDropdown}\r\n                reqTypeDropdown={reqTypeDropdown}\r\n                getTable={this.getTable}\r\n              />\r\n          </div>\r\n        </div>\r\n        <Remarks getDataFromRemarks={this.getDataFromRemarks} />\r\n      </div>\r\n    );\r\n    if (!this.state.result) {\r\n      //success page display check\r\n      return (\r\n        <FormWrapper\r\n          formTitle={FORM_HEADINGS.FTP_FORM}\r\n          formSubmit={this.formSubmit}\r\n          loading={this.state.loading}\r\n          display={display}\r\n          approverData={approverData}\r\n        />\r\n      );\r\n    } else {\r\n      return <RequestSuccess />;\r\n    }\r\n  }\r\n}\r\n","import { ASSETRETURN,RETURN_ASSET_SUBMIT } from \"../../App/Utils/Urls\";\r\nimport APICommunication from \"../../App/Utils/APICommunication\";\r\nimport { SUCCESS_STATUS_CODE } from \"../../App/Constants\";\r\n\r\nexport default class AssetReturnDataProvider extends APICommunication {\r\n    constructor() {\r\n        super();\r\n        this.APICommunication = new APICommunication();\r\n    }\r\nasync typeDropdownList(){\r\n    const data = await this.APICommunication.getAPI(ASSETRETURN);\r\n    return data.data.data;\r\n  }\r\nasync formSubmit(data) {\r\n    const response = await this.APICommunication.postAPI(RETURN_ASSET_SUBMIT,data);\r\n    if (response.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n        return { result: true, loading: false };\r\n      }\r\n    else {\r\n        return { result: false, loading: false };\r\n    }  \r\n  }\r\n}","import React from \"react\";\r\nimport { Form, Input, Select } from \"antd\";\r\nimport { EditableContext } from \"./AssetReturnRequestTable\";\r\nimport AssetReturnDataProvider from \"../AssetReturnDataProvider\";\r\n\r\nconst { Option } = Select;\r\nvar typeDropdown = [];\r\nexport class EditableCell extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.AssetReturnDataProvider = new AssetReturnDataProvider();\r\n  }\r\n  state = {\r\n    editing: false\r\n  };\r\n  async componentDidMount() {\r\n    typeDropdown = await this.AssetReturnDataProvider.typeDropdownList();\r\n  }\r\n  getInput = dataIndex => {\r\n    //function to render each cell depending on the dataindex of the column\r\n    switch (dataIndex) {\r\n      case \"asset\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"asset\"\r\n          >\r\n            {typeDropdown.map(person => (\r\n              <Option value={person.id} label={person.name} key={person.id}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      default:\r\n        return (\r\n          <Input\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            maxLength={80}\r\n            placeholder=\"add data\"\r\n          />\r\n        );\r\n    }\r\n  };\r\n  toggleEdit = () => {\r\n    //to toggle the editing status\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n  save = e => {\r\n    //calls handlesave to splice and save data\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n  renderCell = form => {\r\n    //function to render each cell\r\n    this.form = form;\r\n    const { dataIndex, record } = this.props;\r\n    return (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `required`\r\n            }\r\n          ],\r\n          initialValue: record[dataIndex]\r\n        })(this.getInput(dataIndex))}\r\n      </Form.Item>\r\n    );\r\n  };\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      inputType,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../../RequestTable.css\";\r\nimport { Button, Form, Table } from \"antd\";\r\nimport { EditableCell } from \"./AssetReturnEditableCell\";\r\nimport { RETURN_ASSET_FORM_COLUMN } from \"../../../App/Utils/ColumnMetadata\";\r\nimport TablePopConfirm from \"../../../App/Utils/TablePopConfirm\";\r\nvar backup = []; //to store the data from table\r\n\r\nexport const EditableContext = React.createContext();\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\nconst EditableFormRow = Form.create()(EditableRow);\r\nexport default class AssetReturnTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backupof: [],\r\n      data: []\r\n    };\r\n\r\n    this.columns = [\r\n      ...RETURN_ASSET_FORM_COLUMN,\r\n      {\r\n        title: \"Operation\",\r\n        dataIndex: \"operation\",\r\n        width: \"5%\",\r\n        align: \"center\",\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <TablePopConfirm \r\n              record = {record.key}\r\n              handleDelete = {this.handleDelete}\r\n            />\r\n          ) : null\r\n      }\r\n    ];\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: 0\r\n        }\r\n      ],\r\n      count: 1\r\n    };\r\n  }\r\n  handleDelete = (key) => {\r\n    //funtion to delete data from table\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter((item) => item.key !== key) });\r\n  };\r\n  handleAdd = () => {\r\n    // funtion to add row\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    //function to save data to datasource\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n    this.setState({ dataSource: newData });\r\n    backup = Array.from(newData);\r\n    this.props.getTable(backup); //to send data to main form. received as props\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          inputType: col.dataIndex === \"assettype\" ? \"number\" : \"text\",\r\n          title: col.title,\r\n          handleSave: this.handleSave\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          size=\"small\"\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          style={{ overflowX: \"scroll\" }}\r\n        />\r\n        <Button\r\n          onClick={this.handleAdd}\r\n          style={{ marginTop: 16, float: \"right\" }}\r\n        >\r\n          Add a row\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { RETURN_ASSET_FORM_ID } from \"../../App/Constants\";\r\n\r\n//function set up payload object for submitting data. returns all data in a\r\n//single object to post api.\r\nexport async function AssetReturnDataSetter(\r\n  datafromAdditionalInfo,\r\n  backup,\r\n  approverData\r\n) {\r\n  const data = {}; //object used to post request. all data is added to this object\r\n  const allRequest = {}; //object to send request details\r\n  allRequest[\"form_type\"] = RETURN_ASSET_FORM_ID;\r\n  allRequest[\"requested_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"updated_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"reason\"] = datafromAdditionalInfo.purpose;\r\n  allRequest[\"department\"] = datafromAdditionalInfo.department;\r\n  allRequest[\"location\"] = datafromAdditionalInfo.location;\r\n  data[\"return_request\"] = allRequest;\r\n  data[\"return_data\"] = backup;\r\n  data[\"approval_data\"] = approverData;\r\n  return data;\r\n}\r\n","import React from \"react\";\r\nimport { Spin, message } from \"antd\";\r\nimport RequestorDetails from \"../../UI/Content/RequestorDetails\";\r\nimport AssetReturnTable from \"./Components/AssetReturnRequestTable\";\r\nimport AssetReturnDataProvider from \"./AssetReturnDataProvider\";\r\nimport AdditionalInfo from \"../../UI/Content/AdditionalInformation\";\r\nimport RequestSuccess from \"../../UI/Page/RequestSuccess\";\r\nimport { API } from \"../../App/Utils/API\";\r\nimport { approverAPI, deptLocListAPI } from \"../../App/Utils/CommonFunctions\";\r\nimport { RETURN_ASSET_FORM_ID, MESSAGES, FORM_HEADINGS } from \"../../App/Constants\";\r\nimport \"../RequestTable.css\";\r\nimport { AssetReturnDataSetter } from \"./AssetReturnDataSetter\";\r\nimport FormWrapper from \"../../UI/Content/FormWrapper\";\r\nAPI.defaults.headers.common[\"Authorization\"] =\r\n  \"Token \" + localStorage.getItem(\"token\"); //setting authorisation token\r\n\r\nvar datafromAdditionalInfo = \"\";\r\nvar approverData = []; //to store approver hierarchy data\r\nvar backup = []; //to store table data\r\nvar response = []; //to store response of apiSubmit\r\nconst formId = RETURN_ASSET_FORM_ID; //from id for request submitting\r\nvar deptLocOBj = {}; //to store values populated department and location dropdowns\r\n//Class\r\n// send request for return Asset\r\n// editable table is used for taking input asset data\r\nexport default class AssetReturnRequest extends React.Component {\r\n  async componentDidMount() {\r\n    approverData = await this.approverAPI(formId); //initial api call to fetch approver hierarchy data\r\n    deptLocOBj = await this.deptLocListAPI(); //initial api call to  fetch list  of dept and location\r\n    if (deptLocOBj != null) {\r\n      this.setState({\r\n        dept: deptLocOBj.department,\r\n        locationList: deptLocOBj.location,\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dept: [],\r\n      locationList: [],\r\n      loading: true,\r\n      result: false\r\n    };\r\n    //initialize methods\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.approverAPI = approverAPI.bind(this); // binding  approver function\r\n    this.deptLocListAPI = deptLocListAPI.bind(this);\r\n    this.AssetReturnDataProvider = new AssetReturnDataProvider();\r\n  }\r\n  getTable(value) {\r\n    // to get data from table component, passed as props\r\n    backup = value;\r\n  }\r\n  getDataFromAdditionalInfo = data => {\r\n    datafromAdditionalInfo = data;\r\n  };\r\n  // on click submit button this function is called. if all the fields are not empty, return request will be posted\r\n  async formSubmit(event) {\r\n    event.preventDefault();\r\n    if (\r\n      backup.length === 0 ||\r\n      datafromAdditionalInfo.department === \"\" ||\r\n      datafromAdditionalInfo.location === \"\"\r\n    ) {\r\n      message.error(MESSAGES.enterdata);\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const data = await AssetReturnDataSetter(\r\n        datafromAdditionalInfo,\r\n        backup,\r\n        approverData\r\n      );\r\n      response = await this.AssetReturnDataProvider.formSubmit(\r\n        //set data accordingly in one object.\r\n        data\r\n      );\r\n      if (response.result === true) {\r\n        backup = [];\r\n      }\r\n      this.setState({ result: response.result, loading: response.loading });\r\n    }\r\n  }\r\n  render() {\r\n    //  initialy result value is false\r\n    //  result got value as true after data post successfull, and show request success page\r\n    //  here checking the status of result\r\n    const display = (\r\n      <div>\r\n        <RequestorDetails />\r\n        <div className=\"row input\">\r\n          <div className=\"container\">\r\n            <h4 className=\"pt-3\">Asset Details</h4>\r\n            <hr />\r\n            <Spin\r\n              size=\"large\"\r\n              tip=\"Please wait...\"\r\n              spinning={this.state.loading}\r\n            >\r\n              {/* call Asset return table , pass return type list for dropdown data\r\n                     through get table function it will pass the input data from table */}\r\n              <AssetReturnTable getTable={this.getTable} />\r\n            </Spin>\r\n          </div>\r\n        </div>\r\n        <AdditionalInfo\r\n          requireIM={false}\r\n          textareaLabel=\"Reason\"\r\n          dept={this.state.dept}\r\n          locationList={this.state.locationList}\r\n          getDataFromAdditionalInfo={this.getDataFromAdditionalInfo}\r\n        />\r\n      </div>\r\n    );\r\n    if (this.state.result === false) {\r\n      //success page display check\r\n      return (\r\n        <FormWrapper\r\n          formTitle={FORM_HEADINGS.RETURN_ASSET_FORM}\r\n          formSubmit={this.formSubmit}\r\n          loading={this.state.loading}\r\n          display={display}\r\n          approverData={approverData}\r\n        />\r\n      );\r\n    } else {\r\n      // request success page , after post successfull it will show\r\n      return <RequestSuccess />;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Form, Input, Select } from \"antd\";\r\nimport { EditableContext } from \"./RiskAcceptanceTable\";\r\nconst { Option } = Select;\r\n\r\nexport class EditableCell extends React.Component {\r\n  state = {\r\n    editing: false\r\n  };\r\n  getInput = (dataIndex, exceptionDrop) => {\r\n    //function to render each cell depending on the dataindex of the column\r\n    switch (dataIndex) {\r\n      case \"exception_type\":\r\n        return (\r\n          <Select\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            name=\"riskselect\"\r\n          >\r\n            {exceptionDrop.map(person => (\r\n              <Option value={person.id} label={person.name} key={person.id}>\r\n                {person.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        );\r\n      case \"from_date\":\r\n        return (\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            format=\"YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]\"\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            // style={{ height: 40, width: 120 }}\r\n            name=\"riskselect\"\r\n          />\r\n        );\r\n      case \"to_date\":\r\n        return (\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"date\"\r\n            format=\"YYYY-MM-DDThh:mm[:ss[.uuuuuu]][+HH:MM|-HH:MM|Z]\"\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            onBlur={this.save}\r\n            placeholder=\"Select\"\r\n            // style={{ height: 40, width: 120 }}\r\n            name=\"riskselect\"\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <Input\r\n            ref={node => (this.input = node)}\r\n            onPressEnter={this.save}\r\n            maxLength={50}\r\n            onBlur={this.save}\r\n            placeholder=\"add data\"\r\n          />\r\n        );\r\n    }\r\n  };\r\n  toggleEdit = () => {\r\n    //to toggle the editing status\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n  save = e => {\r\n    //to save to datasource\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n  renderCell = form => {\r\n    //to render each cell\r\n    this.form = form;\r\n    const { dataIndex, record, exceptionDrop } = this.props;\r\n    return (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `required`\r\n            }\r\n          ],\r\n          initialValue: record[dataIndex]\r\n        })(this.getInput(dataIndex, exceptionDrop))}\r\n      </Form.Item>\r\n    );\r\n  };\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      inputType,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../../RequestTable.css\";\r\nimport { Button, Form, Table } from \"antd\";\r\nimport { RISKACCEPTANCE_FORM_COLUMN } from \"../../../App/Utils/ColumnMetadata\";\r\nimport {EditableCell} from \"./RiskAcceptanceEditableCell\";\r\nimport TablePopConfirm from \"../../../App/Utils/TablePopConfirm\";\r\nvar risk = [];                //to store data entered in table\r\n\r\nexport const EditableContext = React.createContext();\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\nconst EditableFormRow = Form.create()(EditableRow);\r\nexport default class RiskAcceptanceTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n     ...RISKACCEPTANCE_FORM_COLUMN,\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        width: \"10%\",\r\n        align: \"center\",\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <TablePopConfirm\r\n              record = {record.key}\r\n              handleDelete = {this.handleDelete}\r\n            />\r\n          ) : null\r\n      }\r\n    ];\r\n    this.state = {\r\n      exception: [],\r\n      dataSource: [\r\n        {\r\n          key: \"0\"\r\n        }\r\n      ],\r\n      count: 1\r\n    };\r\n  }\r\n  handleDelete = (key) => {\r\n    //to delete the corrensponding row\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({ dataSource: dataSource.filter((item) => item.key !== key) });\r\n  };\r\n  handleAdd = () => {\r\n    //to add a new row\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1\r\n    });\r\n  };\r\n  handleSave = (row) => {\r\n    //to save changes to the datasource\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, {\r\n      ...item,\r\n      ...row\r\n    });\r\n    this.setState({ dataSource: newData });\r\n    risk = Array.from(newData);                       \r\n    this.props.getTable(risk);\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableFormRow,\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n          exceptionDrop: this.props.exceptionDrop\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => \"editable-row\"}\r\n          bordered\r\n          size=\"small\"\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n          style={{ x:1300 }}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-6 text-left mt-3 text-danger\">\r\n            Note:-All exceptions are valid for a maximum duration of 3 months.\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Button\r\n              onClick={this.handleAdd}\r\n              style={{ marginTop: 16, float: \"right\" }}\r\n            >\r\n              Add a row\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Input,Select } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class RiskType extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        assetNumber: \"\",\r\n        riskType:\"\",\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromRiskType(this.state);\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row input\">\r\n          <div className=\"col-3\">\r\n            <label>Risk type</label>\r\n          </div>\r\n          <div className=\"col-4 mb-2\">\r\n            <Select\r\n              name=\"riskType\"\r\n              placeholder=\"Select\"\r\n              style={{ width: 250 }}\r\n              onChange={(value) => {\r\n                this.setState({ riskType: value });\r\n              }}\r\n            >\r\n              {this.props.riskSelect.map((person) => (\r\n                <Option value={person.id} label={person.name} key={person.name}>\r\n                  {person.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 \">\r\n            <label>Asset no.</label>\r\n          </div>\r\n          <div className=\"col-4 mb-3\">\r\n            <Input\r\n              name=\"assetNumber\"\r\n              style={{ width: 250 }}\r\n              onChange={this.formChange}\r\n              required={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { RISK_ACCEPTANCE_FORM_ID } from \"../../App/Constants\";\r\n\r\n//function set up payload object for submitting data. returns all data in a\r\n//single object to post api.\r\nexport async function riskAcceptanceDataSetter(\r\n  datafromAdditionalInfo,\r\n  dataFromRiskType,\r\n  risk,\r\n  networkForm,\r\n  approverData\r\n) {\r\n  const data = {}; //object send as payload in api call\r\n  const allRequest = {}; //object to store details except table\r\n  allRequest[\"form_type\"] = RISK_ACCEPTANCE_FORM_ID;\r\n  allRequest[\"requested_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"updated_by\"] = localStorage.getItem(\"outlook_id\");\r\n  allRequest[\"remarks_justification\"] = datafromAdditionalInfo.purpose;\r\n  allRequest[\"department\"] = datafromAdditionalInfo.department;\r\n  allRequest[\"location\"] = datafromAdditionalInfo.location;\r\n  allRequest[\"asset_number\"] = dataFromRiskType.assetNumber;\r\n  allRequest[\"risk_type\"] = dataFromRiskType.riskType;\r\n  allRequest[\"network_form\"] = networkForm;\r\n  data[\"risk_acceptance\"] = allRequest;\r\n  data[\"exception_data\"] = risk;\r\n  data[\"approval_data\"] = approverData;\r\n  return data;\r\n}\r\n","import { RISK_ACCEPTANCE,RISK_ACCEPTANCE_SUBMIT } from \"../../App/Utils/Urls\";\r\nimport APICommunication from \"../../App/Utils/APICommunication\";\r\nimport { SUCCESS_STATUS_CODE } from \"../../App/Constants\";\r\n\r\nexport default class riskAcceptanceDataProvider extends APICommunication {\r\n    constructor() {\r\n        super();\r\n        this.APICommunication = new APICommunication();\r\n    }\r\nasync fetchDropdownList(requestType){\r\n    const data = await this.APICommunication.getAPI(RISK_ACCEPTANCE+requestType);\r\n    return data.data;\r\n  }\r\nasync formSubmit(data) {\r\n    const response = await this.APICommunication.postAPI(RISK_ACCEPTANCE_SUBMIT,data);\r\n    if (response.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n        return { result: true, loading: false };\r\n      }\r\n    else {\r\n        return { result: false, loading: false };\r\n    }  \r\n  }\r\n}","import React from \"react\";\r\nimport { Spin, Radio, message } from \"antd\";\r\nimport RequestorDetails from \"../../UI/Content/RequestorDetails\";\r\nimport AdditionalInfo from \"../../UI/Content/AdditionalInformation\";\r\nimport RiskAcceptanceTable from \"./Components/RiskAcceptanceTable\";\r\nimport { API } from \"../../App/Utils/API\";\r\nimport RequestSuccess from \"../../UI/Page/RequestSuccess\";\r\nimport { approverAPI, deptLocListAPI } from \"../../App/Utils/CommonFunctions\";\r\nimport { RISK_ACCEPTANCE_FORM_ID, MESSAGES, RISK_ACCEPTANCE_TEXT, FORM_HEADINGS } from \"../../App/Constants\";\r\nimport RiskType from \"./Components/RiskType\";\r\nimport { riskAcceptanceDataSetter } from \"./RiskAcceptanceDatasetter\";\r\nimport riskAcceptanceDataProvider from \"./RiskAcceptanceDataProvider\";\r\nimport FormWrapper from \"../../UI/Content/FormWrapper\";\r\nAPI.defaults.headers.common[\"Authorization\"] =\r\n  \"Token \" + localStorage.getItem(\"token\"); //setting authorisation token\r\n\r\nvar approverData = []; //used to store aproval hierarchy data\r\nvar risk = [];\r\nvar datafromAdditionalInfo = \"\";\r\nvar dataFromRiskType = \"\";\r\nvar response = []; //used to store data entered in table\r\nvar deptLocOBj = {}; //to store department and location\r\n\r\nexport default class RiskAcceptance extends React.Component {\r\n  async componentDidMount() {\r\n    approverData = await this.approverAPI(RISK_ACCEPTANCE_FORM_ID); //to fetch approver details.\r\n    deptLocOBj = await this.deptLocListAPI(); //api to  fetch  dept and location\r\n    this.apiSelect(); //api calling fuction to populate exception type and risk type\r\n    if (deptLocOBj != null) {\r\n      this.setState({\r\n        dept: deptLocOBj.department,\r\n        locationList: deptLocOBj.location,\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      requestType: 8,\r\n      exceptionType: [],\r\n      dept: [],\r\n      locationList: [],\r\n      networkForm: false,\r\n      riskSelect: [],\r\n      loading: true,\r\n      loading1: true,\r\n      result: false\r\n    };\r\n    this.formChange = this.formChange.bind(this); //binding functions as required in ES 6\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.approverAPI = approverAPI.bind(this);\r\n    this.deptLocListAPI = deptLocListAPI.bind(this);\r\n    this.riskAcceptanceDataProvider = new riskAcceptanceDataProvider();\r\n  }\r\n\r\n  async formChange(event) {\r\n    //to save changes\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n    this.apiSelect(); //api calling fuction to populate exception type and risk type\r\n    if (this.state.requestType === 9) {\r\n      this.setState({ networkForm: true });\r\n    } else {\r\n      this.setState({ networkForm: false });\r\n    }\r\n  }\r\n  getTable(value) {\r\n    // to get data from table component, passed as props\r\n    risk = value;\r\n  }\r\n  async formSubmit(event) {\r\n    //form submit\r\n    event.preventDefault();\r\n    if (\r\n      risk.length === 0 ||\r\n      datafromAdditionalInfo.department == \"\" ||\r\n      datafromAdditionalInfo.location == \"\" ||\r\n      dataFromRiskType.riskType == \"\"\r\n    ) {\r\n      message.error(MESSAGES.enterdata);\r\n    } else {\r\n      this.setState({ loading: true });\r\n      const data = await riskAcceptanceDataSetter(\r\n        datafromAdditionalInfo,\r\n        dataFromRiskType,\r\n        risk,\r\n        this.state.networkForm,\r\n        approverData\r\n      );\r\n      response = await this.riskAcceptanceDataProvider.formSubmit(\r\n        data\r\n      );\r\n      if (response.result === true) {\r\n        risk = [];\r\n      }\r\n      this.setState({ result: response.result, loading: response.loading });\r\n    }\r\n  }\r\n  async apiSelect() {\r\n    //api calling fuction to populate exception type and risk type\r\n    const data = await this.riskAcceptanceDataProvider.fetchDropdownList(\r\n      this.state.requestType\r\n    );\r\n    this.setState({\r\n      exceptionType: data.exception_type_list,\r\n      riskSelect: data.risk_type_list,\r\n      loading1: false\r\n    });\r\n  }\r\n  getDataFromAdditionalInfo = data => {\r\n    datafromAdditionalInfo = data;\r\n  };\r\n  getDataFromRiskType = data => {\r\n    dataFromRiskType = data;\r\n  };\r\n  render() {\r\n    const display = (\r\n      <div>\r\n        <RequestorDetails />\r\n        <div className=\"row input\">\r\n          <div className=\"container\">\r\n            <h4 className=\"pt-3\">Risk Type</h4>\r\n            <hr />\r\n            <div className=\"row\">\r\n              <div className=\"col-3 \">\r\n                <label>Request type</label>\r\n              </div>\r\n              <div className=\"col-4 ml-3\">\r\n                <Radio.Group\r\n                  name=\"requestType\"\r\n                  className=\"form-check-input\"\r\n                  onChange={this.formChange}\r\n                  defaultValue={8}\r\n                >\r\n                  <Radio value={9}>Network</Radio>\r\n                  <Radio value={8} className=\"pl-1\">\r\n                    Other\r\n                  </Radio>\r\n                </Radio.Group>\r\n              </div>\r\n            </div>\r\n            <RiskType\r\n              riskSelect={this.state.riskSelect}\r\n              getDataFromRiskType={this.getDataFromRiskType}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row input\">\r\n          <div className=\"container\">\r\n            <h4 className=\"pt-3\">Exception Details</h4>\r\n            <hr />\r\n            <Spin\r\n              size=\"large\"\r\n              tip=\"Please wait...\"\r\n              spinning={this.state.loading1}\r\n            >\r\n              <RiskAcceptanceTable\r\n                exceptionDrop={this.state.exceptionType}\r\n                getTable={this.getTable}\r\n              />\r\n            </Spin>\r\n          </div>\r\n        </div>\r\n        <AdditionalInfo\r\n          requireIM={false}\r\n          textareaLabel=\"Remarks or Additional Justification\"\r\n          dept={this.state.dept}\r\n          locationList={this.state.locationList}\r\n          getDataFromAdditionalInfo={this.getDataFromAdditionalInfo}\r\n        />\r\n        <div className=\" text-danger\">\r\n          {RISK_ACCEPTANCE_TEXT}\r\n        </div>\r\n      </div>\r\n    );\r\n    if (!this.state.result) {\r\n      return (\r\n        <FormWrapper\r\n          formTitle={FORM_HEADINGS.RISK_ACCEPTANCE_FORM}\r\n          formSubmit={this.formSubmit}\r\n          loading={this.state.loading}\r\n          display={display}\r\n          approverData={approverData}\r\n        />\r\n      );\r\n    } else {\r\n      return <RequestSuccess />;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  COMMON_MAILBOX_GROUP_DROPDOWN,\r\n  MANAGER_SEARCH,\r\n  COMMON_MAILBOX_SUBMIT\r\n} from \"../../App/Utils/Urls\";\r\nimport APICommunication from \"../../App/Utils/APICommunication\";\r\nimport { SUCCESS_STATUS_CODE } from \"../../App/Constants\";\r\n\r\nexport default class CommonMailboxDataProvider extends APICommunication {\r\n  constructor() {\r\n    super();\r\n    this.APICommunication = new APICommunication();\r\n  }\r\n  async fetchDropdownList() {\r\n    const data = await this.APICommunication.getAPI(\r\n      COMMON_MAILBOX_GROUP_DROPDOWN\r\n    );\r\n    return data.data.data;\r\n  }\r\n  async handleSearch(value) {\r\n    const data = await this.APICommunication.getAPI(MANAGER_SEARCH + value);\r\n    return data.data.Employee_list;\r\n  }\r\n  async formSubmit(data) {\r\n    const response = await this.APICommunication.postAPI(\r\n      COMMON_MAILBOX_SUBMIT,\r\n      data\r\n    );\r\n    if (response.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n      return { result: true, loading: false };\r\n    } else {\r\n      return { result: false, loading: false };\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Radio } from \"antd\";\r\nimport { DROPDOWN, PATTERNS } from \"../../../App/Constants\";\r\nimport CommonMailboxDataProvider from \"../CommonMailboxDataProvider\";\r\nconst { Option } = Select;\r\nexport default class DistributionGroup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiManager: [],\r\n      group: \"\",\r\n      grpDropdown: \"\",\r\n      groupName: \"\",\r\n      groupEmail: \"\",\r\n      groupMembers: \"\",\r\n      groupOwner: \"\",\r\n      requireDistribution: false\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n    this.CommonMailboxDataProvider = new CommonMailboxDataProvider();\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromDistributionGroup(this.state);\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  async handleSearch(value){\r\n    //api to fill in multiselect people picker\r\n    const response = await this.CommonMailboxDataProvider.handleSearch(value);\r\n    this.setState({ apiManager: response });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row input\">\r\n        <div className=\"container pb-3\">\r\n          <h4 className=\"pt-3\">Distribution group/Security group</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-4 pl-4\">\r\n              <label>Do you require distribution/security group</label>\r\n            </div>\r\n            <div className=\"col-4 pl-4\">\r\n              <Radio.Group\r\n                name=\"requireDistribution\"\r\n                defaultValue={false}\r\n                onChange={this.formChange}\r\n              >\r\n                <Radio value={true}>Yes</Radio>\r\n                <Radio value={false}>No</Radio>\r\n              </Radio.Group>\r\n            </div>\r\n          </div>\r\n          {this.state.requireDistribution === true ? (\r\n            <div id=\"section1\">\r\n              <div className=\"row input\">\r\n                <div className=\"col-4 pl-4\">\r\n                  <label>Please Select Group</label>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <Select\r\n                    placeholder=\"Select\"\r\n                    name=\"group\"\r\n                    style={{ width: 250 }}\r\n                    onChange={(value) => {\r\n                      this.setState({ group: value });\r\n                    }}\r\n                  >\r\n                    {this.props.grpDropdown.map((group) => (\r\n                      <Option\r\n                        value={group.name}\r\n                        label={group.name}\r\n                        key={group.name}\r\n                      >\r\n                        {group.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-4 pl-4\">\r\n                  <label>Group Name</label>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                  <Input\r\n                    name=\"groupName\"\r\n                    maxLength={25}\r\n                    style={{ width: 250 }}\r\n                    onChange={this.formChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-4 pl-4\">\r\n                  <label>Group Email</label>\r\n                </div>\r\n                <div className=\"col-3 \">\r\n                  <Input\r\n                    type=\"email\"\r\n                    pattern={PATTERNS.EMAIL}\r\n                    name=\"groupEmail\"\r\n                    style={{ width: 250 }}\r\n                    onChange={this.formChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-4 pl-4\">\r\n                  <label>Add Group Members</label>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    showSearch\r\n                    name=\"groupMembers\"\r\n                    placeholder={DROPDOWN.search}\r\n                    style={{ minWidth: 250 }}\r\n                    onSearch={(value) => {\r\n                      this.handleSearch(value);\r\n                    }}\r\n                    onChange={(value, key) => {\r\n                      this.setState({\r\n                        groupMembers: value.toString()\r\n                      });\r\n                    }}\r\n                  >\r\n                    {this.state.apiManager.map((person) => (\r\n                      <Option\r\n                        value={person.name}\r\n                        label={person.name}\r\n                        key={person.name}\r\n                      >\r\n                        {person.name}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-4 pl-4\">\r\n                  <label>Select Group Owner</label>\r\n                </div>\r\n                <div className=\"col-2 mb-3\">\r\n                  <label>\r\n                    <Select\r\n                      showSearch\r\n                      name=\"groupOwner\"\r\n                      placeholder={DROPDOWN.search}\r\n                      style={{ minWidth: 250 }}\r\n                      onSearch={(value) => {\r\n                        this.handleSearch(value);\r\n                      }}\r\n                      onChange={(value, key) => {\r\n                        this.setState({ groupOwner: value });\r\n                      }}\r\n                    >\r\n                      {this.state.apiManager.map((person) => (\r\n                        <Option\r\n                          value={person.name}\r\n                          label={person.name}\r\n                          key={person.name}\r\n                        >\r\n                          {person.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Radio } from \"antd\";\r\nimport { DROPDOWN, PATTERNS } from \"../../../App/Constants\";\r\nimport CommonMailboxDataProvider from \"../CommonMailboxDataProvider\";\r\nconst { Option } = Select;\r\nexport default class SharedMailbox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiManager: [],\r\n      mailboxName: \"\",\r\n      mailboxEmail: \"\",\r\n      mailboxOwner: \"\",\r\n      shared_mailbox: false\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n    this.CommonMailboxDataProvider = new CommonMailboxDataProvider();\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromSharedMailbox(this.state);\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  async handleSearch(value){\r\n    //api to fill in multiselect people picker\r\n    const response = await this.CommonMailboxDataProvider.handleSearch(value);\r\n    this.setState({ apiManager: response });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"container pb-3\">\r\n          <h4 className=\"pt-3\">Shared Mailbox</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-4 pl-4\">\r\n              <label>Do you require shared mailbox ?</label>\r\n            </div>\r\n            <div className=\"col-4 pl-4\">\r\n              <Radio.Group\r\n                name=\"shared_mailbox\"\r\n                defaultValue={false}\r\n                onChange={this.formChange}\r\n              >\r\n                <Radio value={true}>Yes</Radio>\r\n                <Radio value={false}>No</Radio>\r\n              </Radio.Group>\r\n            </div>\r\n          </div>\r\n          {this.state.shared_mailbox === true ? (\r\n            <div id=\"section2\">\r\n              <div className=\"row input\">\r\n                <div className=\"col-4 pl-4\">\r\n                  <label>Mailbox display name</label>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                  <Input\r\n                    maxLength={20}\r\n                    name=\"mailboxName\"\r\n                    style={{ width: 250 }}\r\n                    onChange={this.formChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-4 pl-4\">\r\n                  <label>Mailbox Email ID</label>\r\n                </div>\r\n                <div className=\"col-3 \">\r\n                  <Input\r\n                    name=\"mailboxEmail\"\r\n                    type=\"email\"\r\n                    pattern={PATTERNS.EMAIL}\r\n                    style={{ width: 250 }}\r\n                    onChange={this.formChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"row input\">\r\n                <div className=\"col-4 pl-4\">\r\n                  <label>Select Mailbox Owner</label>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                  <label>\r\n                    <Select\r\n                      showSearch\r\n                      name=\"mailboxOwner\"\r\n                      placeholder={DROPDOWN.search}\r\n                      style={{ minWidth: 250 }}\r\n                      onSearch={(value) => {\r\n                        this.handleSearch(value);\r\n                      }}\r\n                      onChange={(value, key) => {\r\n                        this.setState({ mailboxOwner: value });\r\n                      }}\r\n                    >\r\n                      {this.state.apiManager.map((person) => (\r\n                        <Option\r\n                          value={person.name}\r\n                          label={person.name}\r\n                          key={person.name}\r\n                        >\r\n                          {person.name}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Radio } from \"antd\";\r\nimport { DROPDOWN } from \"../../../App/Constants\";\r\nimport CommonMailboxDataProvider from \"../CommonMailboxDataProvider\";\r\nconst { Option } = Select;\r\nexport default class SharedFolder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiManager: [],\r\n      folderName: \"\",\r\n      folderOwner: \"\",\r\n      rightsGiven: \"\",\r\n      sharedFolder:false\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n    this.CommonMailboxDataProvider = new CommonMailboxDataProvider();\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromSharedFolder(this.state);\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n    console.log(this.state);\r\n  }\r\n  async handleSearch(value){\r\n    //api to fill in multiselect people picker\r\n    const response = await this.CommonMailboxDataProvider.handleSearch(value);\r\n    this.setState({ apiManager: response });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row input\">\r\n        <div className=\"container pb-3\">\r\n          <h4 className=\"pt-3\">Shared Folder</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-4 pl-4\">\r\n              <label>Do you require shared folder</label>\r\n            </div>\r\n            <div className=\"col-4 pl-4\">\r\n              <Radio.Group name=\"sharedFolder\" defaultValue={false} onChange={this.formChange}>\r\n                <Radio value={true} >\r\n                  Yes\r\n                </Radio>\r\n                <Radio value={false} >\r\n                  No\r\n                </Radio>\r\n              </Radio.Group>\r\n            </div>\r\n          </div>\r\n          {this.state.sharedFolder===true?(\r\n          <div id=\"section3\">\r\n            <div className=\"row input\">\r\n              <div className=\"col-4 pl-4\">\r\n                <label>Folder Name</label>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <Input\r\n                  name=\"folderName\"\r\n                  maxLength={20}\r\n                  style={{ width: 250 }}\r\n                  onChange={this.formChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row input\">\r\n              <div className=\"col-4 pl-4\">\r\n                <label>Folder Owner</label>\r\n              </div>\r\n              <div className=\"col-3 \">\r\n                <Select\r\n                  showSearch\r\n                  name=\"folderOwner\"\r\n                  placeholder={DROPDOWN.search}\r\n                  style={{ minWidth: 250 }}\r\n                  onSearch={(value) => {\r\n                    this.handleSearch(value);\r\n                  }}\r\n                  onChange={(value, key) => {\r\n                    this.setState({ folderOwner: value });\r\n                  }}\r\n                >\r\n                  {this.state.apiManager.map((person) => (\r\n                    <Option\r\n                      value={person.name}\r\n                      label={person.name}\r\n                      key={person.name}\r\n                    >\r\n                      {person.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"row input\">\r\n              <div className=\"col-4 pl-4\">\r\n                <label>Rights to be given</label>\r\n              </div>\r\n              <div className=\"col-8\">\r\n                <Select\r\n                  showSearch\r\n                  mode=\"multiple\"\r\n                  name=\"rightsGiven\"\r\n                  placeholder={DROPDOWN.search}\r\n                  style={{ minWidth: 250 }}\r\n                  onSearch={(value) => {\r\n                    this.handleSearch(value);\r\n                  }}\r\n                  onChange={(value, key) => {\r\n                    this.setState({ rightsGiven: value.toString() });\r\n                  }}\r\n                >\r\n                  {this.state.apiManager.map((person) => (\r\n                    <Option\r\n                      value={person.name}\r\n                      label={person.name}\r\n                      key={person.name}\r\n                    >\r\n                      {person.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          ):null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Select, Radio } from \"antd\";\r\nimport { PATTERNS } from \"../../../App/Constants\";\r\nimport CommonMailboxDataProvider from \"../CommonMailboxDataProvider\";\r\nconst { Option } = Select;\r\nexport default class CommonLoginID extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apiManager: [],\r\n      loginName: \"\",\r\n      loginEmail: \"\",\r\n      loginOwner: \"\",\r\n      requiredLogin:false\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n    this.CommonMailboxDataProvider = new CommonMailboxDataProvider();\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromCommonLoginID(this.state);\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  async handleSearch(value){\r\n    //api to fill in multiselect people picker\r\n    const response = await this.CommonMailboxDataProvider.handleSearch(value);\r\n    this.setState({ apiManager: response });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row input\">\r\n        <div className=\"container pb-3\">\r\n          <h4 className=\"pt-3\">Common Login ID</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-4 pl-4\">\r\n              <label>Do you require login ID</label>\r\n            </div>\r\n            <div className=\"col-4 pl-4\">\r\n              <Radio.Group name=\"requiredLogin\" defaultValue={false} onChange={this.formChange}>\r\n                <Radio value={true} >\r\n                  Yes\r\n                </Radio>\r\n                <Radio value={false} >\r\n                  No\r\n                </Radio>\r\n              </Radio.Group>\r\n            </div>\r\n          </div>\r\n          {this.state.requiredLogin===true?(\r\n          <div id=\"section4\">\r\n            <div className=\"row input\">\r\n              <div className=\"col-4 pl-4\">\r\n                <label>Login name</label>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <Input\r\n                  pattern={PATTERNS.LOGIN_NAME}\r\n                  maxLength={15}\r\n                  name=\"loginName\"\r\n                  style={{ width: 250 }}\r\n                  onChange={this.formChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row input\">\r\n              <div className=\"col-4 pl-4\">\r\n                <label>Login Email ID</label>\r\n              </div>\r\n              <div className=\"col-3 \">\r\n                <Input\r\n                  name=\"loginEmail\"\r\n                  type=\"email\"\r\n                  pattern={PATTERNS.EMAIL}\r\n                  style={{ width: 250 }}\r\n                  onChange={this.formChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row input\">\r\n              <div className=\"col-4 pl-4\">\r\n                <label>Select Login Owner</label>\r\n              </div>\r\n              <div className=\"col-3\">\r\n                <Select\r\n                  showSearch\r\n                  name=\"loginOwner\"\r\n                  placeholder=\"Type to search\"\r\n                  style={{ minWidth: 250 }}\r\n                  onSearch={(value) => {\r\n                    this.handleSearch(value);\r\n                  }}\r\n                  onChange={(value, key) => {\r\n                    this.setState({ loginOwner: value });\r\n                  }}\r\n                >\r\n                  {this.state.apiManager.map((person) => (\r\n                    <Option\r\n                      value={person.name}\r\n                      label={person.name}\r\n                      key={person.name}\r\n                    >\r\n                      {person.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n           ):null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { COMMON_MAILBOX_FORM_ID } from \"../../App/Constants\";\r\n\r\n//function set up payload object for submitting data. returns all data in a\r\n//single object to post api.\r\nexport async function commonMailboxDataSetter(\r\n    dataFromDistributionGroup,\r\n    dataFromSharedMailbox,\r\n    dataFromSharedFolder,\r\n    dataFromCommonLoginID,\r\n    datafromAdditionalInfo,\r\n    approverData\r\n) {\r\n    const data = {}; //object used to post request. all data is added to this object\r\n    const submit = {}; //object to send request details\r\n    submit[\"form_type\"] = COMMON_MAILBOX_FORM_ID;\r\n    submit[\"requested_by\"] = localStorage.getItem(\"outlook_id\");\r\n    submit[\"updated_by\"] = localStorage.getItem(\"outlook_id\");\r\n\r\n    submit[\"select_group\"] = dataFromDistributionGroup.group;\r\n    submit[\"group_name\"] = dataFromDistributionGroup.groupName;\r\n    submit[\"group_mail\"] = dataFromDistributionGroup.groupEmail;\r\n    submit[\"add_group_members\"] = dataFromDistributionGroup.groupMembers;\r\n    submit[\"select_group_owner\"] = dataFromDistributionGroup.groupOwner;\r\n    submit[\"require_distribution\"] =\r\n        dataFromDistributionGroup.requireDistribution;\r\n\r\n    submit[\"mail_box_name\"] = dataFromSharedMailbox.mailboxName;\r\n    submit[\"mailbox_email_id\"] = dataFromSharedMailbox.mailboxEmail;\r\n    submit[\"mail_box_owner\"] = dataFromSharedMailbox.mailboxOwner;\r\n    submit[\"shared_mailbox\"] = dataFromSharedMailbox.sharedMailbox;\r\n\r\n    submit[\"folder_name\"] = dataFromSharedFolder.folderName;\r\n    submit[\"folder_owner\"] = dataFromSharedFolder.folderOwner;\r\n    submit[\"right_to_be_given\"] = dataFromSharedFolder.rightsGiven;\r\n    submit[\"shared_folder\"] = dataFromSharedFolder.sharedFolder;\r\n\r\n    submit[\"login_name\"] = dataFromCommonLoginID.loginName;\r\n    submit[\"login_email\"] = dataFromCommonLoginID.loginEmail;\r\n    submit[\"select_login_owner\"] = dataFromCommonLoginID.loginOwner;\r\n    submit[\"required_login\"] = dataFromCommonLoginID.requiredLogin;\r\n\r\n    submit[\"department\"] = datafromAdditionalInfo.department;\r\n    submit[\"location\"] = datafromAdditionalInfo.location;\r\n    submit[\"purpose\"] = datafromAdditionalInfo.purpose;\r\n\r\n    data[\"submit_data\"] = submit;\r\n    data[\"approval_data\"] = approverData;\r\n    return data;\r\n}\r\n","import React from \"react\";\r\nimport RequestorDetails from \"../../UI/Content/RequestorDetails\";\r\nimport DistributionGroup from \"./Components/DistributionGroup\";\r\nimport SharedMailbox from \"./Components/SharedMailbox\";\r\nimport SharedFolder from \"./Components/SharedFolder\";\r\nimport CommonLoginID from \"./Components/CommonLoginID\";\r\nimport AdditionalInfo from \"../../UI/Content/AdditionalInformation\";\r\nimport CommonMailboxDataProvider from \"./CommonMailboxDataProvider\";\r\nimport { API } from \"../../App/Utils/API\";\r\nimport { COMMON_MAILBOX_FORM_ID, FORM_HEADINGS } from \"../../App/Constants\";\r\nimport {\r\n  approverAPI,\r\n  deptLocListAPI,\r\n} from \"../../App/Utils/CommonFunctions\";\r\nimport RequestSuccess from \"../../UI/Page/RequestSuccess\";\r\nimport { commonMailboxDataSetter } from \"./CommonMailboxDataSetter\";\r\nimport FormWrapper from \"../../UI/Content/FormWrapper\";\r\nAPI.defaults.headers.common[\"Authorization\"] =\r\n  \"Token \" + localStorage.getItem(\"token\");\r\n\r\nvar dataFromDistributionGroup = \"\";\r\nvar dataFromSharedMailbox = \"\";\r\nvar dataFromSharedFolder = \"\";\r\nvar dataFromCommonLoginID = \"\";\r\nvar datafromAdditionalInfo = \"\";\r\n\r\nvar response = [];\r\nvar approverData = []; //approver hierarchy list\r\nconst form_id = COMMON_MAILBOX_FORM_ID;\r\n\r\nvar deptLocOBj = {}; //to store department and location\r\nexport default class CommonMailboxRequest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      grpDropdown: [],\r\n      appover_name: [],\r\n      appover_title: [],\r\n      approver_outlook_id: [],\r\n      approver_level: [],\r\n      dept: [],\r\n      locationList: [],\r\n      result: false,\r\n      loading: true\r\n    };\r\n    //initialize method\r\n    this.formChange = this.formChange.bind(this);\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.approverAPI = approverAPI.bind(this);\r\n    this.deptLocListAPI = deptLocListAPI.bind(this);\r\n    this.CommonMailboxDataProvider = new CommonMailboxDataProvider();\r\n  }\r\n  async componentDidMount() {\r\n    approverData = await this.approverAPI(form_id.toString()); //api to populate hierarchy\r\n    deptLocOBj = await this.deptLocListAPI(); //api to  fetch  dept and location\r\n    const response = await this.CommonMailboxDataProvider.fetchDropdownList(); //api to get dropdown group list\r\n    if (deptLocOBj != null) {\r\n      this.setState({\r\n        grpDropdown: response,\r\n        dept: deptLocOBj.department,\r\n        locationList: deptLocOBj.location,\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  formChange(event) {\r\n    //to save changes to form\r\n    const target = event.target;\r\n    this.setState({ [target.name]: target.value });\r\n  }\r\n\r\n  async formSubmit(event) {\r\n    // to submit data\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n    const data = await commonMailboxDataSetter(\r\n      dataFromDistributionGroup,\r\n      dataFromSharedMailbox,\r\n      dataFromSharedFolder,\r\n      dataFromCommonLoginID,\r\n      datafromAdditionalInfo,\r\n      approverData\r\n    );\r\n    response = await this.CommonMailboxDataProvider.formSubmit(data);\r\n    this.setState({ result: response.result, loading: response.loading });\r\n  }\r\n  getDataFromDistributionGroup = data => {\r\n    dataFromDistributionGroup = data;\r\n  };\r\n  getDataFromSharedMailbox = data => {\r\n    dataFromSharedMailbox = data;\r\n  };\r\n  getDataFromSharedFolder = data => {\r\n    dataFromSharedFolder = data;\r\n  };\r\n  getDataFromCommonLoginID = data => {\r\n    dataFromCommonLoginID = data;\r\n  };\r\n  getDataFromAdditionalInfo = data => {\r\n    datafromAdditionalInfo = data;\r\n  };\r\n  render() {\r\n    const display = (\r\n      <div>\r\n        <RequestorDetails />\r\n        <DistributionGroup\r\n          grpDropdown={this.state.grpDropdown}\r\n          getDataFromDistributionGroup={this.getDataFromDistributionGroup}\r\n        />\r\n        <SharedMailbox\r\n          getDataFromSharedMailbox={this.getDataFromSharedMailbox}\r\n        />\r\n        <SharedFolder getDataFromSharedFolder={this.getDataFromSharedFolder} />\r\n        <CommonLoginID\r\n          getDataFromCommonLoginID={this.getDataFromCommonLoginID}\r\n        />\r\n        <AdditionalInfo\r\n          requireIM={false}\r\n          textareaLabel=\"Purpose\"\r\n          dept={this.state.dept}\r\n          locationList={this.state.locationList}\r\n          getDataFromAdditionalInfo={this.getDataFromAdditionalInfo}\r\n        />\r\n      </div>\r\n    );\r\n    if (this.state.result === false) {\r\n      //success page display check\r\n      return (\r\n        <FormWrapper\r\n          formTitle={FORM_HEADINGS.COMMON_MAILBOX_FORM}\r\n          formSubmit={this.formSubmit}\r\n          loading={this.state.loading}\r\n          display={display}\r\n          approverData={approverData}\r\n        />\r\n      );\r\n    } else {\r\n      return <RequestSuccess />;\r\n    }\r\n  }\r\n}\r\n","import { MANAGER_SEARCH,LOGIN_ID_REQUEST_DROPDOWN,LOGIN_ID_REQUEST_SUBMIT } from \"../../App/Utils/Urls\";\r\nimport APICommunication from \"../../App/Utils/APICommunication\";\r\nimport { SUCCESS_STATUS_CODE } from \"../../App/Constants\";\r\n\r\nexport default class loginIdCreationDataprovider extends APICommunication {\r\n  constructor() {\r\n    super();\r\n    this.APICommunication = new APICommunication();\r\n  }\r\n  async fetchDropdownList() {\r\n    const data = await this.APICommunication.getAPI(LOGIN_ID_REQUEST_DROPDOWN);\r\n    return data.data;\r\n  }\r\n  async handleSearch(value) {\r\n    const data = await this.APICommunication.getAPI(MANAGER_SEARCH + value);\r\n    return data.data.Employee_list;\r\n  }\r\n  async formSubmit(data) {\r\n    const response = await this.APICommunication.postAPIFileUpload(LOGIN_ID_REQUEST_SUBMIT, data);\r\n    if (response.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n      return { result: true, loading: false };\r\n    } else {\r\n      return { result: false, loading: false };\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Input, DatePicker, Radio, Select, InputNumber } from \"antd\";\r\nimport loginIdCreationDataprovider from \"../LoginIdCreationDataprovider\";\r\nconst { Option } = Select;\r\nexport default class UserDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: true,\r\n      employeeType: \"\",\r\n      apiManager: [],\r\n      sapCode: \"\",\r\n      isLoginOrMailbox: false,\r\n      sbu: \"\",\r\n      isTempAccessId: false,\r\n      fromDt: \"\",\r\n      toDt: \"\",\r\n      isAccessId: false,\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      department: \"\",\r\n      essarCompany: \"\",\r\n      designation: \"\",\r\n      reportingManagerName: \"\",\r\n      reportingManagerMail: \"\"\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n    this.loginIdCreationDataprovider = new loginIdCreationDataprovider();\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromUserDetails(this.state);\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  formHide = (a) => e => {\r\n    // to hide sections of the form\r\n    document.getElementById(a).style.display = \"none\";\r\n  };\r\n  formShow = (b) => e => {\r\n    // to show sections of the form\r\n    document.getElementById(b).style.display = \"block\";\r\n  };\r\n  async handleSearch(value){\r\n    //api to fill in multiselect people picker\r\n    const response = await this.loginIdCreationDataprovider.handleSearch(value);\r\n    this.setState({ apiManager: response });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h4 className=\" pt-3\">User details</h4>\r\n        <hr />\r\n        <div className=\"row input\">\r\n          <div className=\"col-2 \">Employee type</div>\r\n          <div className=\"col-4 \">\r\n            <Select\r\n              name=\"employeeType\"\r\n              placeholder=\"Select\"\r\n              onChange={(value) => {\r\n                this.setState({ employeeType: value });\r\n              }}\r\n            >\r\n              {this.props.apiEmpType.map((person) => (\r\n                <Option value={person.id} label={person.name} key={person.id}>\r\n                  {person.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          <div className=\"col-2 \">SAP code</div>\r\n          <div className=\"col-4 \">\r\n            <InputNumber\r\n              name=\"sapCode\"\r\n              style={{minWidth:\"40%\"}}\r\n              maxLength={10}\r\n              required={true}\r\n              onChange={(value)=>{this.setState({sapCode:value})}}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row input\">\r\n          <div className=\"col-3 \">Login/Mailbox required?</div>\r\n          <div className=\"col-3 \">\r\n            <Radio.Group\r\n              name=\"isLoginOrMailbox\"\r\n              onChange={this.formChange}\r\n              defaultValue={false}\r\n            >\r\n              <Radio value={true}>Yes</Radio>\r\n              <Radio value={false}>No</Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <div className=\"col-2 \">SBU</div>\r\n          <div className=\"col-4 \">\r\n            <Select\r\n              name=\"sbu\"\r\n              placeholder=\"Select\"\r\n              onChange={(value) => {\r\n                this.setState({ sbu: value });\r\n              }}\r\n            >\r\n              {this.props.apiSbu.map((person) => (\r\n                <Option value={person.id} label={person.name} key={person.id}>\r\n                  {person.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row input\">\r\n          <div className=\"col-3 \">Access ID card temporary?</div>\r\n          <div className=\"col-3\">\r\n            <Radio.Group\r\n              name=\"isTempAccessId\"\r\n              onChange={this.formChange}\r\n              defaultValue={false}\r\n            >\r\n              <Radio onClick={this.formShow(\"dateSection\")} value={true}>\r\n                Yes\r\n              </Radio>\r\n              <Radio onClick={this.formHide(\"dateSection\")} value={false}>\r\n                No\r\n              </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n        </div>\r\n        <div id=\"dateSection\" className=\"hide\">\r\n          <div className=\"row input mt-3\">\r\n            <div className=\"col-2 \">Period</div>\r\n            <div className=\"col-2 \">\r\n              <DatePicker\r\n                placeholder=\"From Date\"\r\n                name=\"fromDt\"\r\n                onChange={(date, dateString) => {\r\n                  this.setState({ fromDt: dateString });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-2 \">\r\n              <DatePicker\r\n                placeholder=\"To Date\"\r\n                name=\"toDt\"\r\n                onChange={(date, dateString) => {\r\n                  this.setState({ toDt: dateString });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row input mt-3\">\r\n          <div className=\"col-3 \">Access ID card required ?</div>\r\n          <div className=\"col-3 \">\r\n            <Radio.Group\r\n              name=\"isAccessId\"\r\n              onChange={this.formChange}\r\n              defaultValue={false}\r\n            >\r\n              <Radio value={true}>Yes</Radio>\r\n              <Radio value={false}>No</Radio>\r\n            </Radio.Group>\r\n          </div>\r\n        </div>\r\n        <div className=\"row input\">\r\n          <div className=\"col-2 \">Employee name</div>\r\n          <div className=\"col-4 \">\r\n            <Input\r\n              required={true}\r\n              name=\"firstName\"\r\n              onChange={this.formChange}\r\n              placeholder=\"First Name\"\r\n              style={{ width: \"49%\" }}\r\n            />\r\n            <Input\r\n              required={true}\r\n              name=\"lastName\"\r\n              onChange={this.formChange}\r\n              placeholder=\"Last Name\"\r\n              style={{ width: \"49%\", marginLeft: \"5px\" }}\r\n            />\r\n          </div>\r\n          <div className=\"col-2 \">Department</div>\r\n          <div className=\"col-4 \">\r\n            <Select\r\n              placeholder=\"Select\"\r\n              name=\"department\"\r\n              onChange={(value) => {\r\n                this.setState({ department: value });\r\n              }}\r\n            >\r\n              {this.props.apiDepartment.map((person) => (\r\n                <Option value={person.id} label={person.name} key={person.name}>\r\n                  {person.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        <div className=\"row input\">\r\n          <div className=\"col-2 \">Essar company</div>\r\n          <div className=\"col-4 \">\r\n            <Select\r\n              name=\"essarCompany\"\r\n              placeholder=\"Select\"\r\n              onChange={(value) => {\r\n                this.setState({ essarCompany: value });\r\n              }}\r\n            >\r\n              {this.props.apiCompany.map((person) => (\r\n                <Option value={person.id} label={person.name} key={person.name}>\r\n                  {person.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          <div className=\"col-2 \">Designation</div>\r\n          <div className=\"col-4 \">\r\n            <Input\r\n              required={true}\r\n              name=\"designation\"\r\n              placeholder=\"Enter your designation\"\r\n              onChange={this.formChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row input mt-4\">\r\n          <div className=\"col-2 \">Manager name</div>\r\n          <div className=\"col-4 \">\r\n            <Select\r\n              showSearch\r\n              name=\"reportingManagerName\"\r\n              placeholder=\"Select\"\r\n              onSearch={(value) => {\r\n                this.handleSearch(value);\r\n              }}\r\n              onChange={(value, key) => {\r\n                this.setState({\r\n                  reportingManagerName: value,\r\n                  reportingManagerMail: key.key\r\n                });\r\n              }}\r\n            >\r\n              {this.state.apiManager.map((person) => (\r\n                <Option\r\n                  value={person.name}\r\n                  label={person.name}\r\n                  key={person.mail}\r\n                >\r\n                  {person.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          <div className=\"col-2 \">Manager Email</div>\r\n          <div className=\"col-4 \">\r\n            <Input\r\n              disabled\r\n              name=\"reportingManagerMail\"\r\n              onChange={this.formChange}\r\n              value={this.state.reportingManagerMail}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Input, DatePicker, InputNumber, Select } from \"antd\";\r\nimport { PHONE_MAXLENGTH, PATTERNS } from \"../../../App/Constants\";\r\nconst { Option } = Select;\r\nexport default class ContactDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        apiCity:[],\r\n        apiCountry:[],\r\n        mobile:\"\",\r\n        dtOfJoining:\"\",\r\n        phone:\"\",\r\n        voipLoc:\"\",\r\n        bloodGp:\"\",\r\n        address:\"\",\r\n        city:\"\",\r\n        state:\"\",\r\n        country:\"\",\r\n        zipcode:\"\",\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n  }\r\n  componentDidUpdate(){\r\n    this.props.getDataFromContactDetails(this.state);\r\n  }\r\n  /**\r\n   * saves changes to form\r\n   * @param {*} event //target data \r\n   */\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"row input\">\r\n        <div className=\"container\">\r\n          <h4 className=\" pt-3\">Contact details</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 \">Mobile number</div>\r\n            <div className=\"col-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                maxLength={PHONE_MAXLENGTH}\r\n                pattern={PATTERNS.PHONE}\r\n                name=\"mobile\"\r\n                placeholder=\"10 digit phone number\"\r\n                onChange={this.formChange}\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-2 \">Date of joining</div>\r\n            <div className=\"col-4 \">\r\n              <DatePicker\r\n                name=\"dtOfJoining\"\r\n                onChange={(date, dateString) => {\r\n                  this.setState({ dtOfJoining: dateString });\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 \">Alternate number</div>\r\n            <div className=\"col-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                maxLength={PHONE_MAXLENGTH}\r\n                pattern={PATTERNS.PHONE}\r\n                name=\"phone\"\r\n                placeholder=\"10 digit phone number\"\r\n                onChange={this.formChange}\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-2 \">VOIP Location</div>\r\n            <div className=\"col-4 \">\r\n              <Input\r\n                type=\"text\"\r\n                maxLength={20}\r\n                name=\"voipLoc\"\r\n                required={true}\r\n                onChange={this.formChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 \">Blood group</div>\r\n            <div className=\"col-4 \">\r\n              <Select\r\n                showSearch\r\n                name=\"bloodGp\"\r\n                placeholder=\"Select\"\r\n                onChange={(value) => {\r\n                  this.setState({ bloodGp: value });\r\n                }}\r\n              >\r\n                <Option value=\"A+\">A+</Option>\r\n                <Option value=\"A-\">A-</Option>\r\n                <Option value=\"B+\">B+</Option>\r\n                <Option value=\"B-\">B-</Option>\r\n                <Option value=\"O+\">O+</Option>\r\n                <Option value=\"O-\">O-</Option>\r\n                <Option value=\"AB+\">AB+</Option>\r\n                <Option value=\"AB-\">AB-</Option>\r\n              </Select>\r\n            </div>\r\n            <div className=\"col-2 \">Street/House No.</div>\r\n            <div className=\"col-4 \">\r\n              <Input\r\n                name=\"address\"\r\n                required={true}\r\n                onChange={this.formChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 \">City</div>\r\n            <div className=\"col-4 \">\r\n              <Select\r\n                name=\"city\"\r\n                placeholder=\"Select\"\r\n                onChange={(value) => {\r\n                  this.setState({ city: value });\r\n                }}\r\n              >\r\n                {this.props.apiCity.map((person) => (\r\n                  <Option\r\n                    value={person.id}\r\n                    label={person.name}\r\n                    key={person.id}\r\n                  >\r\n                    {person.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n            <div className=\"col-2 \">State</div>\r\n            <div className=\"col-4 \">\r\n              <Input\r\n                name=\"state\"\r\n                placeholder=\"Enter State\"\r\n                onChange={this.formChange}\r\n                required={true}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 \">Country</div>\r\n            <div className=\"col-4 \">\r\n              <Select\r\n                name=\"country\"\r\n                placeholder=\"Select\"\r\n                onChange={(value) => {\r\n                  this.setState({ country: value });\r\n                }}\r\n              >\r\n                {this.props.apiCountry.map((person) => (\r\n                  <Option\r\n                    value={person.id}\r\n                    label={person.name}\r\n                    key={person.name}\r\n                  >\r\n                    {person.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n            <div className=\"col-2 \">ZIP code</div>\r\n            <div className=\"col-4 \">\r\n              <InputNumber\r\n                type=\"number\"\r\n                name=\"zipcode\"\r\n                style={{minWidth:\"40%\"}}\r\n                min={100000}\r\n                max={999999}\r\n                required={true}\r\n                onChange={(value)=>{this.setState({zipcode:value})}}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { PHONE_MAXLENGTH, PATTERNS } from \"../../../App/Constants\";\r\nexport default class EmergencyContactDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emergencyContactName: \"\",\r\n      relationship: \"\",\r\n      emergencyContactNo: \"\"\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n  }\r\n  componentDidUpdate() {\r\n    this.props.getDataFromEMContactDetails(this.state);\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row input\">\r\n        <div className=\"container\">\r\n          <h4 className=\" pt-3\">Emergency Contact details</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 \">Name</div>\r\n            <div className=\"col-4 \">\r\n              <Input\r\n                name=\"emergencyContactName\"\r\n                onChange={this.formChange}\r\n                required={true}\r\n              />\r\n            </div>\r\n            <div className=\"col-2 \">Relationship</div>\r\n            <div className=\"col-4 \">\r\n              <Input\r\n                name=\"relationship\"\r\n                required={true}\r\n                onChange={this.formChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 \">Contact number</div>\r\n            <div className=\"col-4 \">\r\n              <Input\r\n                required={true}\r\n                type=\"text\"\r\n                maxLength={PHONE_MAXLENGTH}\r\n                pattern={PATTERNS.PHONE}\r\n                placeholder=\"10 digit phone number\"\r\n                name=\"emergencyContactNo\"\r\n                onChange={this.formChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { NEW_LOGIN_FORM_ID } from \"../../App/Constants\";\r\nvar formData = new FormData();\r\n//function set up payload object for submitting data. returns all data in a\r\n//single object to post api.\r\nexport async function loginIdCreationDataSetter(\r\n  userDetails,\r\n  contactDetails,\r\n  emergencyContactDetails,\r\n  comments\r\n) {\r\n  formData.append(\"employee_type\", userDetails.employeeType);\r\n  formData.set(\"sap_code\", userDetails.sapCode);\r\n  formData.set(\"is_login_or_mailbox\", userDetails.isLoginOrMailbox);\r\n  formData.set(\"is_access_id\", userDetails.isAccessId);\r\n  formData.set(\"from_dt\", userDetails.fromDt);\r\n  formData.set(\"is_temp_access_id\", userDetails.isTempAccessId);\r\n  formData.set(\"to_dt\", userDetails.toDt);\r\n  formData.set(\"sbu\", userDetails.sbu);\r\n  formData.set(\"employee_name\",userDetails.firstName + \" \" + userDetails.lastName);\r\n  formData.set(\"department\", userDetails.department);\r\n  formData.set(\"essar_company\", userDetails.essarCompany);\r\n  formData.set(\"designation\", userDetails.designation);\r\n  formData.set(\"reporting_manager_name\", userDetails.reportingManagerName);\r\n  formData.set(\"reporting_manager_mail\", userDetails.reportingManagerMail);\r\n  formData.set(\"mobile\", contactDetails.mobile);\r\n  formData.set(\"phone\", contactDetails.phone);\r\n  formData.set(\"dt_of_joining\", contactDetails.dtOfJoining);\r\n  formData.set(\"blood_gp\", contactDetails.bloodGp);\r\n  formData.set(\"voip_loc\", contactDetails.voipLoc);\r\n  formData.set(\"address\", contactDetails.address);\r\n  formData.set(\"state\", contactDetails.state);\r\n  formData.set(\"country\", contactDetails.country);\r\n  formData.set(\"zipcode\", contactDetails.zipcode);\r\n  formData.set(\"city\", contactDetails.city);\r\n  formData.set(\"emergency_contact_name\",emergencyContactDetails.emergencyContactName);\r\n  formData.set(\"emergency_contact_no\",emergencyContactDetails.emergencyContactNo);\r\n  formData.set(\"relationship\", emergencyContactDetails.relationship);\r\n  formData.set(\"comments\", comments);\r\n  formData.append(\"form_type\", NEW_LOGIN_FORM_ID);\r\n  formData.append(\"requested_by\", localStorage.getItem(\"outlook_id\")); //append the values with key, value pair\r\n  formData.append(\"requested_on\", new Date().getDate);\r\n  formData.append(\"updated_by\", localStorage.getItem(\"outlook_id\"));\r\n  return formData;\r\n}\r\n","import React from \"react\";\r\nimport { Upload, Button, Icon, message } from \"antd\";\r\n\r\nvar uploadfile=null;\r\nexport default class Attachments extends React.Component {\r\n  componentDidUpdate() {\r\n    this.props.getDataFromAttachments(uploadfile);\r\n  }\r\n  photoUpload = (file, onSuccess) => {\r\n    //funtion to append image to formData\r\n    uploadfile=file;\r\n  }\r\n  onChangeUpload = (info) => {\r\n    //to show status of uploading\r\n    const status = info.file.status;\r\n    if (status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } \r\n  };\r\n\r\n  beforeUpload = (file) => {\r\n    // funtion to check the file parameters before uploading\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n    const isLt2M = file.size / 1024 < 50;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 50 KB!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row input\">\r\n        <div className=\"container\">\r\n          <h4 className=\" pt-3\">Attachments</h4>\r\n          <hr />\r\n          <div className=\"row input\">\r\n            <div className=\"col-2 pt-3\">Upload Employee Photo</div>\r\n            <div className=\"col-6 pt-3\">\r\n              <Upload\r\n                name=\"user_image\"\r\n                multiple={false}\r\n                accept=\".jpg, .jpeg, .png\"\r\n                beforeUpload={this.beforeUpload}\r\n                action={this.photoUpload}\r\n                onChange={this.onChangeUpload}\r\n              >\r\n                <Button placeholder=\"jpeg, jpg, png only\">\r\n                  <Icon type=\"upload\" /> Click to Upload\r\n                </Button>\r\n              </Upload>\r\n            </div>\r\n          </div>\r\n          <div className=\"row pt-3\">\r\n            <div className=\"col-12\">\r\n              Note:- File format should be jpeg, jpg, png. Maximum size 50KB.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { API } from \"../../App/Utils/API\";\r\nimport RequestSuccess from \"../../UI/Page/RequestSuccess\";\r\nimport UserDetails from \"./Components/UserDetails\";\r\nimport ContactDetails from \"./Components/ContactDetails\";\r\nimport loginIdCreationDataprovider from \"./LoginIdCreationDataprovider\";\r\nimport EmergencyContactDetails from \"./Components/EmergencyDetails\";\r\nimport { message } from \"antd\";\r\nimport { MESSAGES, FORM_HEADINGS } from \"../../App/Constants\";\r\nimport { loginIdCreationDataSetter } from \"./LoginIdCreationDatasetter\";\r\nimport FormWrapper from \"../../UI/Content/FormWrapper\";\r\nimport Remarks from \"../../UI/Content/Remarks\";\r\nimport Attachments from \"./Components/Attachments\";\r\nAPI.defaults.headers.common[\"Authorization\"] =\r\n  \"Token \" + localStorage.getItem(\"token\"); //setting token authentication\r\n\r\nvar formData = new FormData();              //to store data to be sent\r\nvar userDetails = \"\";\r\nvar contactDetails = \"\";\r\nvar emergencyContactDetails = \"\";\r\nvar dataFromRemarks = \"\";\r\nvar uploadfile=null;\r\nexport default class NewLoginIDCreation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      result: false,\r\n      apiEmpType: [],\r\n      apiApprover1: [],\r\n      apiDepartment: [],\r\n      apiCompany: [],\r\n      apiDesignation: [],\r\n      apiSbu: [],\r\n      apiCity: [],\r\n      apiCountry: []\r\n    };\r\n    this.formChange = this.formChange.bind(this);\r\n    this.formSubmit = this.formSubmit.bind(this);\r\n    this.loginIdCreationDataprovider = new loginIdCreationDataprovider();\r\n  }\r\n  async componentDidMount() {\r\n    const response = await this.loginIdCreationDataprovider.fetchDropdownList();\r\n    if(response!=null){\r\n      this.setState({\r\n        apiEmpType: response.employee_types,\r\n        apiApprover1: response.hierarchy,\r\n        apiDepartment: response.departments,\r\n        apiCompany: response.companies,\r\n        apiDesignation: response.designations,\r\n        apiState: response.states,\r\n        apiCountry: response.countries,\r\n        apiSbu: response.sbu,\r\n        apiCity: response.location,\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n  async formChange(event) {\r\n    // funtion to save changes to form\r\n    // to save data on change\r\n    const target = event.target;\r\n    await this.setState({ [target.name]: target.value });\r\n  }\r\n\r\n  async formSubmit(event, value) {\r\n    //to submit data to backend\r\n    event.preventDefault();\r\n    if (\r\n      userDetails.employeeType === \"\" ||\r\n      userDetails.sbu === \"\" ||\r\n      userDetails.department === \"\" ||\r\n      userDetails.essarCompany === \"\" ||\r\n      userDetails.reportingManagerName === \"\" ||\r\n      contactDetails.dtOfJoining === \"\" ||\r\n      contactDetails.bloodGp === \"\" ||\r\n      contactDetails.country === \"\" ||\r\n      contactDetails.city === \"\"\r\n    ){\r\n      message.error(MESSAGES.enterdata);\r\n    }\r\n    else {\r\n      this.setState({ loading: true });\r\n      formData = await loginIdCreationDataSetter(\r\n        userDetails,\r\n        contactDetails,\r\n        emergencyContactDetails,\r\n        dataFromRemarks.remarks\r\n      )\r\n      formData.append(\"profile_image\", uploadfile);\r\n      this.submitApi();\r\n    }\r\n  }\r\n\r\n  async submitApi() {\r\n    //submit function\r\n    const response = await this.loginIdCreationDataprovider.formSubmit(formData)\r\n    this.setState({ result: response.result, loading: response.loading });\r\n  }\r\n  getDataFromContactDetails = (data) => {\r\n    contactDetails = data;\r\n  };\r\n  getDataFromUserDetails = (data) => {\r\n    userDetails = data;\r\n  };\r\n  getDataFromEMContactDetails = (data) => {\r\n    emergencyContactDetails = data;\r\n  };\r\n  getDataFromRemarks = (data) => {\r\n    dataFromRemarks = data;\r\n  };\r\n  getDataFromAttachments = (data) => {\r\n    uploadfile=data;\r\n  }\r\n\r\n  render() {\r\n    const display = (\r\n      <div>\r\n        <UserDetails\r\n          apiEmpType={this.state.apiEmpType}\r\n          apiSbu={this.state.apiSbu}\r\n          apiDepartment={this.state.apiDepartment}\r\n          apiCompany={this.state.apiCompany}\r\n          getDataFromUserDetails={this.getDataFromUserDetails}\r\n        />\r\n        <ContactDetails\r\n          apiCity={this.state.apiCity}\r\n          apiCountry={this.state.apiCountry}\r\n          getDataFromContactDetails={this.getDataFromContactDetails}\r\n        />\r\n        <EmergencyContactDetails\r\n          getDataFromEMContactDetails={this.getDataFromEMContactDetails}\r\n        />\r\n        <Attachments\r\n          getDataFromAttachments={this.getDataFromAttachments}\r\n        />\r\n        <Remarks\r\n          getDataFromRemarks={this.getDataFromRemarks}\r\n        />\r\n      </div>\r\n    );\r\n    if (this.state.result === false) {\r\n      //check for displaying success page\r\n      return (\r\n        <FormWrapper\r\n          formTitle={FORM_HEADINGS.NEW_LOGIN_FORM}\r\n          formSubmit={this.formSubmit}\r\n          loading={this.state.loading}\r\n          display={display}\r\n          approverData={this.state.apiApprover1}\r\n        />\r\n      );\r\n    } else {\r\n      return <RequestSuccess />;\r\n    }\r\n  }\r\n}","import axios from \"axios\";\r\nimport { BASE_URL, APPROVAL_MAIL } from \"../App/Utils/Urls\";\r\nimport { SUCCESS_STATUS_CODE } from \"../App/Constants\";\r\nimport { message } from \"antd\";\r\n\r\nexport default class MailApproveDataProvider {\r\n  async approveThroughMail(data) {\r\n    return await axios\r\n      .post(`${BASE_URL}${APPROVAL_MAIL}`, data) //function to approve through mail.\r\n      .then((res) => {\r\n        if (res.status == parseInt(SUCCESS_STATUS_CODE)) {\r\n         return { loading: false, status: true };\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        message.error(error.response.data.error);\r\n        return { loading: false, status:false };\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Spin, Result, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MailApproveDataProvider from \"./MailApproveDataprovider\";\r\n\r\nvar response = \"\";\r\nexport default class MailApproveComments extends React.Component {  // class to approve through mail with comments.\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: false,\r\n      loading: false,\r\n      comment: \"\"\r\n    };\r\n    this.mailapprove=this.mailapprove.bind(this);\r\n    this.MailApproveDataProvider=new MailApproveDataProvider();\r\n  }\r\n  async mailapprove(status) {                                             // function to approve through mail with comments.\r\n    this.setState({ loading: true});\r\n    const data = {};\r\n    const params = new URLSearchParams(document.location.search);    // parameters received through url.\r\n    data[\"comment\"] = this.state.comment;\r\n    data[\"ref_code\"] = params.get(\"ref_code\");\r\n    data[\"status\"] = status;\r\n    response = await this.MailApproveDataProvider.approveThroughMail(data);\r\n    this.setState({ loading: response.loading, status: response.status });\r\n  }\r\n  render() {\r\n    if (this.state.status === false) {\r\n      return (\r\n        <Spin\r\n          size=\"large\"\r\n          spinning={this.state.loading}\r\n          tip=\"Action in progress...\"\r\n        >\r\n          <div className=\"container  \">\r\n            <div className=\"row input pt-3\">\r\n              <div className=\"col-4 text-right\">Enter Comments</div>\r\n              <div className=\"col-8 text-center\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter comments here\"\r\n                  style={{ width: 350 }}\r\n                  onChange={(event) => {\r\n                    this.setState({comment:event.target.value});\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row input pb-3\">\r\n              <div className=\"col-12 text-center\">\r\n                <button\r\n                  className=\"btn btn-dark\"\r\n                  onClick={()=> this.mailapprove(true)}\r\n                >\r\n                  Approve\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary ml-3\"\r\n                  onClick={()=> this.mailapprove(false)}\r\n                >\r\n                  Reject\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      );\r\n    } else {\r\n      return (                                        // success page\r\n        <Result\r\n          status=\"success\"\r\n          title=\"Successfully Completed Action !\"\r\n          subTitle=\"Your requested action has been executed, please go to homepage.\"\r\n          extra={[\r\n            <Link to=\"/\">\r\n              <Button type=\"primary\" key=\"console\">\r\n                Go to Home\r\n              </Button>\r\n            </Link>\r\n          ]}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Spin, Result,Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MailApproveDataProvider from \"./MailApproveDataprovider\";\r\n\r\nvar response = \"\";\r\nexport default class MailApprove extends React.Component {\r\n    async componentDidMount(){\r\n        const data = {};\r\n        const params = new URLSearchParams(document.location.search);  // parameters received through url\r\n        data[\"comment\"] = this.state.comment;\r\n        data[\"ref_code\"] = params.get(\"ref_code\");\r\n        data[\"status\"] = params.get(\"status\");\r\n        response = await this.MailApproveDataProvider.approveThroughMail(data);//function to approve through mail. \r\n        this.setState({ loading: response.loading,status: response.status });\r\n    }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: false,\r\n      loading: true,\r\n      comment:\"\"\r\n    };\r\n    this.MailApproveDataProvider=new MailApproveDataProvider();\r\n  }\r\n  render() {\r\n    if (this.state.status === false) {\r\n      return (\r\n        <Spin\r\n          size=\"large\"\r\n          spinning={this.state.loading}\r\n          tip=\"Action in progress...\"\r\n        ></Spin>\r\n      );\r\n    } else {\r\n      return (\r\n        <Result                                                 //success page\r\n          status=\"success\"\r\n          title=\"Successfully Completed Action !\"\r\n          subTitle=\"Your requested action has been executed, please go to homepage.\"\r\n          extra={[\r\n            <Link to=\"/\">\r\n              <Button type=\"primary\" key=\"console\">\r\n                Go to Home\r\n              </Button>\r\n            </Link>\r\n          ]}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Button, Result} from \"antd\";\r\n\r\n//common component for 404 display.\r\nexport default class NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n                extra={[\r\n                    <Link to=\"/\">\r\n                        <Button type=\"primary\" key=\"console\">\r\n                            Go to Home\r\n                        </Button>\r\n                    </Link>\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Backup from \"../../Forms/BackupRequest/BackupRequest\";\r\nimport Restoration from \"../../Forms/RestorationRequest/RestorationRequest\";\r\nimport AssetRequest from \"../../Forms/NewAssetRequest/AssetRequest\";\r\nimport Home from \"../../Home/Home\";\r\nimport IdRequest from \"../../Forms/FtpIdRequest/FtpIDRequest\";\r\nimport AssetReturnRequest from \"../../Forms/AssetReturnRequest/AssetReturnRequest\";\r\nimport RiskAcceptance from \"../../Forms/RiskAcceptanceForm/RiskAcceptanceForm\";\r\nimport CommonMailboxRequest from \"../../Forms/NewCommonMailboxRequest/NewCommonMailboxRequest\";\r\nimport NewLoginIDCreation from \"../../Forms/NewLoginIdCreation/NewLoginIDCreation\";\r\nimport MailApproveComments from \"../../MailApprove/MailApproveComments\";\r\nimport MailApprove from \"../../MailApprove/MailApprove\";\r\nimport NotFound from \"../Page/NotFound\";\r\nimport {\r\n  BACKUP_REQUEST_PATH,\r\n  RESTORATION_REQUEST_PATH,\r\n  ASSET_REQUEST_PATH,\r\n  FTPID_REQUEST_PATH,\r\n  ASSET_RETURN_REQUEST_PATH,\r\n  RISK_ACCEPTANCE_PATH,\r\n  COMMONMAILBOX_REQUEST_PATH,\r\n  LOGINID_CREATION_PATH,\r\n  PENDING_REQUEST_PATH,\r\n  PENDING_APPROVAL_PATH,\r\n  APPROVAL_HISTORY_PATH,\r\n  BACKUP_APPROVAL_PATH,\r\n  RESTORATION_APPROVAL_PATH,\r\n  ASSET_APPROVAL_PATH,\r\n  FTP_ID_APPROVAL_PATH,\r\n  COMMONMAILBOX_APPROVAL_PATH,\r\n  ASSET_RETURN_APPROVAL_PATH,\r\n  NEW_LOGIN_ID_APPROVAL_PATH,\r\n  RISK_ACCEPTANCE_APPROVAL_PATH,\r\n  APPROVE_THROUGH_MAIL_PATH,\r\n  APPROVE_THROUGH_MAIL_COMMENTS_PATH,\r\n  REPORT_PATH,\r\n} from \"../../App/Utils/Urls\";\r\n\r\nexport default class Router extends React.Component {\r\n  render() {\r\n    return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path={BACKUP_REQUEST_PATH} component={Backup} />\r\n      <Route path={RESTORATION_REQUEST_PATH} component={Restoration} />\r\n      <Route path={ASSET_REQUEST_PATH} component={AssetRequest} />\r\n      <Route path={FTPID_REQUEST_PATH} component={IdRequest} />\r\n      <Route path={ASSET_RETURN_REQUEST_PATH} component={AssetReturnRequest} />\r\n      <Route path={RISK_ACCEPTANCE_PATH} component={RiskAcceptance} />\r\n      <Route path={COMMONMAILBOX_REQUEST_PATH} component={CommonMailboxRequest} />\r\n      <Route path={LOGINID_CREATION_PATH} component={NewLoginIDCreation} />\r\n      <Route path={APPROVE_THROUGH_MAIL_COMMENTS_PATH} component={MailApproveComments} />\r\n      <Route path={APPROVE_THROUGH_MAIL_PATH} component={MailApprove} />\r\n      <Route default component={NotFound}/>\r\n    </Switch>\r\n    )\r\n  }\r\n}\r\n","import APICommunication from \"../App/Utils/APICommunication\";\r\nimport { BASE_URL, LOGIN } from \"../App/Utils/Urls\";\r\n\r\nexport default class LoginDataProvider extends APICommunication {\r\n    constructor() {\r\n        super();\r\n        this.APICommunication = new APICommunication();\r\n    }\r\nasync formSubmit(data) {\r\n    const response = await this.APICommunication.postAxios(BASE_URL+LOGIN,data);\r\n    if (response)\r\n    return response;\r\n  }\r\n}","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport LoginDataProvider from \"./LoginDataprovider\";\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      home: false\r\n    };\r\n    this.LoginDataProvider = new LoginDataProvider();\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        this.setState({ loading: true });\r\n        // const res = await this.LoginDataProvider.formSubmit(values);\r\n        //api to login. also returns user details and token storedin localstorage\r\n        \r\n            sessionStorage.setItem(\"is_logged_in\", \"true\");\r\n            // localStorage.setItem(\"token\", res.data.token);\r\n            this.props.setAuth(\"true\"); //to set authorisation in app.js. passed here as props\r\n            this.setState({ home: true });\r\n          // }\r\n          this.setState({ loading: false });\r\n        // }\r\n        this.setState({ loading: false });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    if (this.state.home === false) {\r\n      return (\r\n        <div style={{ background:\"grey\"}}>\r\n          <div className=\"login\">\r\n            <div className=\"login-container -lg p-3 mb-5 ml-3 bg-white rounded\">\r\n              <Form\r\n                onSubmit={this.handleSubmit}\r\n                className=\"login-form px-5 py-5\"\r\n              >\r\n                <div className=\"text-center\">\r\n                  <h3 className=\"dark-grey-text mb-5\">\r\n                    <strong>Sign in</strong>\r\n                  </h3>\r\n                </div>\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"outlook_id\", {\r\n                    rules: [\r\n                      { required: true, message: \"Please input your username!\" }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type=\"user\"\r\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                        />\r\n                      }\r\n                      placeholder=\"Username\"\r\n                      style={{ width: \"300px\" }}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"password\", {\r\n                    rules: [\r\n                      { required: true, message: \"Please input your Password!\" }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      prefix={\r\n                        <Icon\r\n                          type=\"lock\"\r\n                          style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                        />\r\n                      }\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      style={{ width: \"300px\" }}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    loading={this.state.loading}\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                  >\r\n                    Log in\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Link to=\"/\"></Link>;\r\n    }\r\n  }\r\n}\r\nconst WrappedLogin = Form.create({ name: \"normal_login\" })(Login);\r\nexport default WrappedLogin;\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Icon, Menu } from \"antd\";\r\nimport { SIDER, SIDER_MENU } from \"../../App/Constants\";\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\nexport default class Siderr extends React.Component {\r\n  state = {\r\n    collapsed: false\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    this.props.onSiderCollapse(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n  render() {\r\n    return (\r\n      <Sider\r\n        collapsible\r\n        collapsed={this.state.collapsed}\r\n        onCollapse={this.onCollapse}\r\n        className=\"nbar\"\r\n        theme=\"light\"\r\n        style={{\r\n          overflow: 'auto',\r\n          height: '100vh',\r\n          position: 'fixed',\r\n          left: 0,\r\n        }}\r\n      >\r\n        <div className=\"logo\"></div>\r\n        <Menu theme=\"light\" mode=\"vertical\">\r\n          <Menu.Item key=\"1\">\r\n            <Link to=\"/\">\r\n              <Icon type=\"home\" />\r\n              <span>Home</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <SubMenu\r\n            key=\"subform\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"form\" />\r\n                <span>Request forms</span>\r\n              </span>\r\n            }\r\n          >\r\n            {SIDER.map(sider => (\r\n              <Menu.Item key={sider.key}>\r\n                <Link to={sider.link}>{sider.name}</Link>\r\n              </Menu.Item>\r\n            ))}\r\n          </SubMenu>\r\n          {SIDER_MENU.map(sider => (\r\n            <Menu.Item key={sider.key}>\r\n              <Link to={sider.link}>\r\n                <Icon type={sider.icon} />\r\n                <span className=\"nav-text\">{sider.name}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))}\r\n        </Menu>\r\n      </Sider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Layout, Icon, Button } from \"antd\";\r\nimport { APP_TITLE } from \"../../App/Constants\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Header } = Layout;\r\n\r\nexport default class FormHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <Header style={{ background: \"#DB0404\", padding: 5, height: 65, position: 'fixed', zIndex: 1, width: '100%' }}>\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"col-6 text-left pl-4\"\r\n            style={{\r\n              color: \"#ECECEC\",\r\n              fontSize: \"1.0rem\",\r\n              fontWeight: \"550\",\r\n            }}\r\n          >\r\n            {APP_TITLE}\r\n          </div>\r\n          <div className=\"col-6 text-right\" style={{ color: \"#ECECEC\" }}>\r\n            Welcome <label>{this.props.user}</label> |\r\n            <Link to=\"/\">\r\n              <Button\r\n                type=\"link\"\r\n                className=\" mr-2\"\r\n                style={{ color: \"white\" }}\r\n                onClick={this.props.Logout}\r\n              >\r\n                <Icon style={{ verticalAlign: \"text-bottom\" }} type=\"logout\" />\r\n                Logout\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport { UNTANGLE } from \"../../App/Utils/Urls\";\r\nconst { Footer } = Layout;\r\n\r\nexport default class FormFooter extends React.Component {\r\n  render() {\r\n    return (\r\n      <Footer\r\n        style={{\r\n          textAlign: \"center\",\r\n          flexShrink: 0,\r\n          padding: 5,\r\n          height: 77\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            Powered by\r\n            <a href={UNTANGLE} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {\" \"}\r\n              Untangle_\r\n            </a>\r\n          </div>\r\n          <div\r\n            className=\"col-12 text-bottom\"\r\n            style={{ fontSize: 12, marginTop: 20 }}\r\n          >\r\n            This web-app works best with Google Chrome, Mozilla Firefox and IE\r\n            11+\r\n          </div>\r\n        </div>\r\n      </Footer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Router from \"../UI/Routing/Router\";\r\nimport { Layout, message } from \"antd\";\r\nimport \"../index.css\";\r\nimport \"./App.css\";\r\nimport WrappedLogin from \"../Auth/Login\"; //login page\r\nimport Siderr from \"../UI/Navbar/Sider\";\r\nimport FormHeader from \"../UI/Header/Header\";\r\nimport FormFooter from \"../UI/Footer/Footer\";\r\nimport { MESSAGES } from \"./Constants\";\r\n\r\nconst { Content } = Layout;\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      marginLeft: 0,\r\n      isAuthenticated: sessionStorage.getItem(\"is_logged_in\"),\r\n      user: localStorage.getItem(\"user\"),\r\n    };\r\n    this.setAuth = this.setAuth.bind(this);\r\n    this.Logout = this.Logout.bind(this);\r\n  }\r\n  setAuth(auth) {\r\n    //to set authentication of user. passed as props to login.js\r\n    this.setState({\r\n      isAuthenticated: auth,\r\n      user: localStorage.getItem(\"user\"),\r\n    });\r\n  }\r\n  Logout() {\r\n    // to logout\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    this.setState({ isAuthenticated: \"false\" });\r\n    message.success(MESSAGES.logout);\r\n  }\r\n  onSiderCollapse = (check) => {\r\n    if (check === true) {\r\n      this.setState({ marginLeft: 80 });\r\n    } else {\r\n      this.setState({ marginLeft: 200 });\r\n    }\r\n  };\r\n  render() {\r\n    if (this.state.isAuthenticated === \"true\") {\r\n      return (\r\n        <div>\r\n          <Layout>\r\n            {/* <Siderr onSiderCollapse={this.onSiderCollapse} /> side bar component */}\r\n            <Layout\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                marginLeft: this.state.marginLeft,\r\n              }}\r\n            >\r\n              <FormHeader Logout={this.Logout} user={this.state.user} />\r\n              <Content\r\n                style={{\r\n                  minHeight: \"100vh\",\r\n                  overflow: \"initial\",\r\n                }}\r\n              >\r\n                <Router />\r\n              </Content>\r\n              <FormFooter />\r\n            </Layout>\r\n          </Layout>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <WrappedLogin setAuth={this.setAuth} />;\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve Assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie11\";                           //polyfills for supporting in internet explorer                                \r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport App from \"./App/App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./custom-antd.css\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}